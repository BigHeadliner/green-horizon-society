!function(global, factory) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = global.document ? factory(global, !0) : function(w) {
        if (w.document) return factory(w);
        throw new Error("jQuery requires a window with a document");
    } : factory(global);
}("undefined" != typeof window ? window : this, function(window, noGlobal) {
    "use strict";
    function isFunction(obj) {
        return "function" == typeof obj && "number" != typeof obj.nodeType && "function" != typeof obj.item;
    }
    function isWindow(obj) {
        return null != obj && obj === obj.window;
    }
    var arr = [], getProto = Object.getPrototypeOf, slice = arr.slice, flat = arr.flat ? function(array) {
        return arr.flat.call(array);
    } : function(array) {
        return arr.concat.apply([], array);
    }, push = arr.push, indexOf = arr.indexOf, class2type = {}, toString = class2type.toString, hasOwn = class2type.hasOwnProperty, fnToString = hasOwn.toString, ObjectFunctionString = fnToString.call(Object), support = {}, document = window.document, preservedScriptAttributes = {
        type: !0,
        src: !0,
        nonce: !0,
        noModule: !0
    };
    function DOMEval(code, node, doc) {
        var i, val, script = (doc = doc || document).createElement("script");
        if (script.text = code, node) for (i in preservedScriptAttributes) (val = node[i] || node.getAttribute && node.getAttribute(i)) && script.setAttribute(i, val);
        doc.head.appendChild(script).parentNode.removeChild(script);
    }
    function toType(obj) {
        return null == obj ? obj + "" : "object" == typeof obj || "function" == typeof obj ? class2type[toString.call(obj)] || "object" : typeof obj;
    }
    var jQuery = function(selector, context) {
        return new jQuery.fn.init(selector, context);
    };
    function isArrayLike(obj) {
        var length = !!obj && "length" in obj && obj.length, type = toType(obj);
        return !isFunction(obj) && !isWindow(obj) && ("array" === type || 0 === length || "number" == typeof length && 0 < length && length - 1 in obj);
    }
    jQuery.fn = jQuery.prototype = {
        jquery: "3.6.0",
        constructor: jQuery,
        length: 0,
        toArray: function() {
            return slice.call(this);
        },
        get: function(num) {
            return null == num ? slice.call(this) : num < 0 ? this[num + this.length] : this[num];
        },
        pushStack: function(elems) {
            elems = jQuery.merge(this.constructor(), elems);
            return elems.prevObject = this, elems;
        },
        each: function(callback) {
            return jQuery.each(this, callback);
        },
        map: function(callback) {
            return this.pushStack(jQuery.map(this, function(elem, i) {
                return callback.call(elem, i, elem);
            }));
        },
        slice: function() {
            return this.pushStack(slice.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        even: function() {
            return this.pushStack(jQuery.grep(this, function(_elem, i) {
                return (i + 1) % 2;
            }));
        },
        odd: function() {
            return this.pushStack(jQuery.grep(this, function(_elem, i) {
                return i % 2;
            }));
        },
        eq: function(i) {
            var len = this.length, i = +i + (i < 0 ? len : 0);
            return this.pushStack(0 <= i && i < len ? [ this[i] ] : []);
        },
        end: function() {
            return this.prevObject || this.constructor();
        },
        push: push,
        sort: arr.sort,
        splice: arr.splice
    }, jQuery.extend = jQuery.fn.extend = function() {
        var options, name, copy, copyIsArray, src, target = arguments[0] || {}, i = 1, length = arguments.length, deep = !1;
        for ("boolean" == typeof target && (deep = target, target = arguments[i] || {}, 
        i++), "object" == typeof target || isFunction(target) || (target = {}), 
        i === length && (target = this, i--); i < length; i++) if (null != (options = arguments[i])) for (name in options) copy = options[name], 
        "__proto__" !== name && target !== copy && (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy))) ? (src = target[name], 
        src = copyIsArray && !Array.isArray(src) ? [] : copyIsArray || jQuery.isPlainObject(src) ? src : {}, 
        copyIsArray = !1, target[name] = jQuery.extend(deep, src, copy)) : void 0 !== copy && (target[name] = copy));
        return target;
    }, jQuery.extend({
        expando: "jQuery" + ("3.6.0" + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(msg) {
            throw new Error(msg);
        },
        noop: function() {},
        isPlainObject: function(obj) {
            return !(!obj || "[object Object]" !== toString.call(obj)) && (!(obj = getProto(obj)) || "function" == typeof (obj = hasOwn.call(obj, "constructor") && obj.constructor) && fnToString.call(obj) === ObjectFunctionString);
        },
        isEmptyObject: function(obj) {
            for (var name in obj) return !1;
            return !0;
        },
        globalEval: function(code, options, doc) {
            DOMEval(code, {
                nonce: options && options.nonce
            }, doc);
        },
        each: function(obj, callback) {
            var length, i = 0;
            if (isArrayLike(obj)) for (length = obj.length; i < length && !1 !== callback.call(obj[i], i, obj[i]); i++); else for (i in obj) if (!1 === callback.call(obj[i], i, obj[i])) break;
            return obj;
        },
        makeArray: function(arr, results) {
            results = results || [];
            return null != arr && (isArrayLike(Object(arr)) ? jQuery.merge(results, "string" == typeof arr ? [ arr ] : arr) : push.call(results, arr)), 
            results;
        },
        inArray: function(elem, arr, i) {
            return null == arr ? -1 : indexOf.call(arr, elem, i);
        },
        merge: function(first, second) {
            for (var len = +second.length, j = 0, i = first.length; j < len; j++) first[i++] = second[j];
            return first.length = i, first;
        },
        grep: function(elems, callback, invert) {
            for (var matches = [], i = 0, length = elems.length, callbackExpect = !invert; i < length; i++) !callback(elems[i], i) != callbackExpect && matches.push(elems[i]);
            return matches;
        },
        map: function(elems, callback, arg) {
            var length, value, i = 0, ret = [];
            if (isArrayLike(elems)) for (length = elems.length; i < length; i++) null != (value = callback(elems[i], i, arg)) && ret.push(value); else for (i in elems) null != (value = callback(elems[i], i, arg)) && ret.push(value);
            return flat(ret);
        },
        guid: 1,
        support: support
    }), "function" == typeof Symbol && (jQuery.fn[Symbol.iterator] = arr[Symbol.iterator]), 
    jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(_i, name) {
        class2type["[object " + name + "]"] = name.toLowerCase();
    });
    function dir(elem, dir, until) {
        for (var matched = [], truncate = void 0 !== until; (elem = elem[dir]) && 9 !== elem.nodeType; ) if (1 === elem.nodeType) {
            if (truncate && jQuery(elem).is(until)) break;
            matched.push(elem);
        }
        return matched;
    }
    function siblings(n, elem) {
        for (var matched = []; n; n = n.nextSibling) 1 === n.nodeType && n !== elem && matched.push(n);
        return matched;
    }
    var Sizzle = function(window) {
        function funescape(escape, nonHex) {
            return escape = "0x" + escape.slice(1) - 65536, nonHex || (escape < 0 ? String.fromCharCode(65536 + escape) : String.fromCharCode(escape >> 10 | 55296, 1023 & escape | 56320));
        }
        function fcssescape(ch, asCodePoint) {
            return asCodePoint ? "\0" === ch ? "ï¿½" : ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " " : "\\" + ch;
        }
        function unloadHandler() {
            setDocument();
        }
        var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = "sizzle" + +new Date(), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), nonnativeSelectorCache = createCache(), sortOrder = function(a, b) {
            return a === b && (hasDuplicate = !0), 0;
        }, hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, pushNative = arr.push, push = arr.push, slice = arr.slice, indexOf = function(list, elem) {
            for (var i = 0, len = list.length; i < len; i++) if (list[i] === elem) return i;
            return -1;
        }, booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", whitespace = "[\\x20\\t\\r\\n\\f]", identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]", pseudos = ":(" + identifier + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|.*)\\)|)", rwhitespace = new RegExp(whitespace + "+", "g"), rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"), rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"), rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"), rdescend = new RegExp(whitespace + "|>"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = {
            ID: new RegExp("^#(" + identifier + ")"),
            CLASS: new RegExp("^\\.(" + identifier + ")"),
            TAG: new RegExp("^(" + identifier + "|[*])"),
            ATTR: new RegExp("^" + attributes),
            PSEUDO: new RegExp("^" + pseudos),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
            bool: new RegExp("^(?:" + booleans + ")$", "i"),
            needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
        }, rhtml = /HTML$/i, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rnative = /^[^{]+\{\s*\[native \w/, rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g"), rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, inDisabledFieldset = addCombinator(function(elem) {
            return !0 === elem.disabled && "fieldset" === elem.nodeName.toLowerCase();
        }, {
            dir: "parentNode",
            next: "legend"
        });
        try {
            push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes), 
            arr[preferredDoc.childNodes.length].nodeType;
        } catch (e) {
            push = {
                apply: arr.length ? function(target, els) {
                    pushNative.apply(target, slice.call(els));
                } : function(target, els) {
                    for (var j = target.length, i = 0; target[j++] = els[i++]; );
                    target.length = j - 1;
                }
            };
        }
        function Sizzle(selector, context, results, seed) {
            var m, i, nid, match, groups, elem, newContext = context && context.ownerDocument, nodeType = context ? context.nodeType : 9;
            if (results = results || [], "string" != typeof selector || !selector || 1 !== nodeType && 9 !== nodeType && 11 !== nodeType) return results;
            if (!seed && (setDocument(context), context = context || document, documentIsHTML)) {
                if (11 !== nodeType && (match = rquickExpr.exec(selector))) if (m = match[1]) {
                    if (9 === nodeType) {
                        if (!(elem = context.getElementById(m))) return results;
                        if (elem.id === m) return results.push(elem), results;
                    } else if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) return results.push(elem), 
                    results;
                } else {
                    if (match[2]) return push.apply(results, context.getElementsByTagName(selector)), 
                    results;
                    if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) return push.apply(results, context.getElementsByClassName(m)), 
                    results;
                }
                if (support.qsa && !nonnativeSelectorCache[selector + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && (1 !== nodeType || "object" !== context.nodeName.toLowerCase())) {
                    if (elem = selector, newContext = context, 1 === nodeType && (rdescend.test(selector) || rcombinators.test(selector))) {
                        for ((newContext = rsibling.test(selector) && testContext(context.parentNode) || context) === context && support.scope || ((nid = context.getAttribute("id")) ? nid = nid.replace(rcssescape, fcssescape) : context.setAttribute("id", nid = expando)), 
                        i = (groups = tokenize(selector)).length; i--; ) groups[i] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i]);
                        elem = groups.join(",");
                    }
                    try {
                        return push.apply(results, newContext.querySelectorAll(elem)), 
                        results;
                    } catch (qsaError) {
                        nonnativeSelectorCache(selector, !0);
                    } finally {
                        nid === expando && context.removeAttribute("id");
                    }
                }
            }
            return select(selector.replace(rtrim, "$1"), context, results, seed);
        }
        function createCache() {
            var keys = [];
            function cache(key, value) {
                return keys.push(key + " ") > Expr.cacheLength && delete cache[keys.shift()], 
                cache[key + " "] = value;
            }
            return cache;
        }
        function markFunction(fn) {
            return fn[expando] = !0, fn;
        }
        function assert(fn) {
            var el = document.createElement("fieldset");
            try {
                return !!fn(el);
            } catch (e) {
                return !1;
            } finally {
                el.parentNode && el.parentNode.removeChild(el);
            }
        }
        function addHandle(attrs, handler) {
            for (var arr = attrs.split("|"), i = arr.length; i--; ) Expr.attrHandle[arr[i]] = handler;
        }
        function siblingCheck(a, b) {
            var cur = b && a, diff = cur && 1 === a.nodeType && 1 === b.nodeType && a.sourceIndex - b.sourceIndex;
            if (diff) return diff;
            if (cur) for (;cur = cur.nextSibling; ) if (cur === b) return -1;
            return a ? 1 : -1;
        }
        function createDisabledPseudo(disabled) {
            return function(elem) {
                return "form" in elem ? elem.parentNode && !1 === elem.disabled ? "label" in elem ? "label" in elem.parentNode ? elem.parentNode.disabled === disabled : elem.disabled === disabled : elem.isDisabled === disabled || elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled : elem.disabled === disabled : "label" in elem && elem.disabled === disabled;
            };
        }
        function createPositionalPseudo(fn) {
            return markFunction(function(argument) {
                return argument = +argument, markFunction(function(seed, matches) {
                    for (var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length; i--; ) seed[j = matchIndexes[i]] && (seed[j] = !(matches[j] = seed[j]));
                });
            });
        }
        function testContext(context) {
            return context && void 0 !== context.getElementsByTagName && context;
        }
        for (i in support = Sizzle.support = {}, isXML = Sizzle.isXML = function(elem) {
            var namespace = elem && elem.namespaceURI, elem = elem && (elem.ownerDocument || elem).documentElement;
            return !rhtml.test(namespace || elem && elem.nodeName || "HTML");
        }, setDocument = Sizzle.setDocument = function(node) {
            var node = node ? node.ownerDocument || node : preferredDoc;
            return node != document && 9 === node.nodeType && node.documentElement && (docElem = (document = node).documentElement, 
            documentIsHTML = !isXML(document), preferredDoc != document && (node = document.defaultView) && node.top !== node && (node.addEventListener ? node.addEventListener("unload", unloadHandler, !1) : node.attachEvent && node.attachEvent("onunload", unloadHandler)), 
            support.scope = assert(function(el) {
                return docElem.appendChild(el).appendChild(document.createElement("div")), 
                void 0 !== el.querySelectorAll && !el.querySelectorAll(":scope fieldset div").length;
            }), support.attributes = assert(function(el) {
                return el.className = "i", !el.getAttribute("className");
            }), support.getElementsByTagName = assert(function(el) {
                return el.appendChild(document.createComment("")), !el.getElementsByTagName("*").length;
            }), support.getElementsByClassName = rnative.test(document.getElementsByClassName), 
            support.getById = assert(function(el) {
                return docElem.appendChild(el).id = expando, !document.getElementsByName || !document.getElementsByName(expando).length;
            }), support.getById ? (Expr.filter.ID = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                    return elem.getAttribute("id") === attrId;
                };
            }, Expr.find.ID = function(id, context) {
                if (void 0 !== context.getElementById && documentIsHTML) return (context = context.getElementById(id)) ? [ context ] : [];
            }) : (Expr.filter.ID = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                    elem = void 0 !== elem.getAttributeNode && elem.getAttributeNode("id");
                    return elem && elem.value === attrId;
                };
            }, Expr.find.ID = function(id, context) {
                if (void 0 !== context.getElementById && documentIsHTML) {
                    var node, i, elems, elem = context.getElementById(id);
                    if (elem) {
                        if ((node = elem.getAttributeNode("id")) && node.value === id) return [ elem ];
                        for (elems = context.getElementsByName(id), i = 0; elem = elems[i++]; ) if ((node = elem.getAttributeNode("id")) && node.value === id) return [ elem ];
                    }
                    return [];
                }
            }), Expr.find.TAG = support.getElementsByTagName ? function(tag, context) {
                return void 0 !== context.getElementsByTagName ? context.getElementsByTagName(tag) : support.qsa ? context.querySelectorAll(tag) : void 0;
            } : function(tag, context) {
                var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
                if ("*" !== tag) return results;
                for (;elem = results[i++]; ) 1 === elem.nodeType && tmp.push(elem);
                return tmp;
            }, Expr.find.CLASS = support.getElementsByClassName && function(className, context) {
                if (void 0 !== context.getElementsByClassName && documentIsHTML) return context.getElementsByClassName(className);
            }, rbuggyMatches = [], rbuggyQSA = [], (support.qsa = rnative.test(document.querySelectorAll)) && (assert(function(el) {
                var input;
                docElem.appendChild(el).innerHTML = "<a id='" + expando + "'></a><select id='" + expando + "-\r\\' msallowcapture=''><option selected=''></option></select>", 
                el.querySelectorAll("[msallowcapture^='']").length && rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")"), 
                el.querySelectorAll("[selected]").length || rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")"), 
                el.querySelectorAll("[id~=" + expando + "-]").length || rbuggyQSA.push("~="), 
                (input = document.createElement("input")).setAttribute("name", ""), 
                el.appendChild(input), el.querySelectorAll("[name='']").length || rbuggyQSA.push("\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + "*(?:''|\"\")"), 
                el.querySelectorAll(":checked").length || rbuggyQSA.push(":checked"), 
                el.querySelectorAll("a#" + expando + "+*").length || rbuggyQSA.push(".#.+[+~]"), 
                el.querySelectorAll("\\\f"), rbuggyQSA.push("[\\r\\n\\f]");
            }), assert(function(el) {
                el.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var input = document.createElement("input");
                input.setAttribute("type", "hidden"), el.appendChild(input).setAttribute("name", "D"), 
                el.querySelectorAll("[name=d]").length && rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?="), 
                2 !== el.querySelectorAll(":enabled").length && rbuggyQSA.push(":enabled", ":disabled"), 
                docElem.appendChild(el).disabled = !0, 2 !== el.querySelectorAll(":disabled").length && rbuggyQSA.push(":enabled", ":disabled"), 
                el.querySelectorAll("*,:x"), rbuggyQSA.push(",.*:");
            })), (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) && assert(function(el) {
                support.disconnectedMatch = matches.call(el, "*"), matches.call(el, "[s!='']:x"), 
                rbuggyMatches.push("!=", pseudos);
            }), rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|")), 
            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|")), 
            node = rnative.test(docElem.compareDocumentPosition), contains = node || rnative.test(docElem.contains) ? function(a, b) {
                var adown = 9 === a.nodeType ? a.documentElement : a, b = b && b.parentNode;
                return a === b || !(!b || 1 !== b.nodeType || !(adown.contains ? adown.contains(b) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(b)));
            } : function(a, b) {
                if (b) for (;b = b.parentNode; ) if (b === a) return !0;
                return !1;
            }, sortOrder = node ? function(a, b) {
                if (a === b) return hasDuplicate = !0, 0;
                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                return compare || (1 & (compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1) || !support.sortDetached && b.compareDocumentPosition(a) === compare ? a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a) ? -1 : b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b) ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0 : 4 & compare ? -1 : 1);
            } : function(a, b) {
                if (a === b) return hasDuplicate = !0, 0;
                var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [ a ], bp = [ b ];
                if (!aup || !bup) return a == document ? -1 : b == document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;
                if (aup === bup) return siblingCheck(a, b);
                for (cur = a; cur = cur.parentNode; ) ap.unshift(cur);
                for (cur = b; cur = cur.parentNode; ) bp.unshift(cur);
                for (;ap[i] === bp[i]; ) i++;
                return i ? siblingCheck(ap[i], bp[i]) : ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 : 0;
            }), document;
        }, Sizzle.matches = function(expr, elements) {
            return Sizzle(expr, null, null, elements);
        }, Sizzle.matchesSelector = function(elem, expr) {
            if (setDocument(elem), support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) try {
                var ret = matches.call(elem, expr);
                if (ret || support.disconnectedMatch || elem.document && 11 !== elem.document.nodeType) return ret;
            } catch (e) {
                nonnativeSelectorCache(expr, !0);
            }
            return 0 < Sizzle(expr, document, null, [ elem ]).length;
        }, Sizzle.contains = function(context, elem) {
            return (context.ownerDocument || context) != document && setDocument(context), 
            contains(context, elem);
        }, Sizzle.attr = function(elem, name) {
            (elem.ownerDocument || elem) != document && setDocument(elem);
            var fn = Expr.attrHandle[name.toLowerCase()], fn = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
            return void 0 !== fn ? fn : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (fn = elem.getAttributeNode(name)) && fn.specified ? fn.value : null;
        }, Sizzle.escape = function(sel) {
            return (sel + "").replace(rcssescape, fcssescape);
        }, Sizzle.error = function(msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
        }, Sizzle.uniqueSort = function(results) {
            var elem, duplicates = [], j = 0, i = 0;
            if (hasDuplicate = !support.detectDuplicates, sortInput = !support.sortStable && results.slice(0), 
            results.sort(sortOrder), hasDuplicate) {
                for (;elem = results[i++]; ) elem === results[i] && (j = duplicates.push(i));
                for (;j--; ) results.splice(duplicates[j], 1);
            }
            return sortInput = null, results;
        }, getText = Sizzle.getText = function(elem) {
            var node, ret = "", i = 0, nodeType = elem.nodeType;
            if (nodeType) {
                if (1 === nodeType || 9 === nodeType || 11 === nodeType) {
                    if ("string" == typeof elem.textContent) return elem.textContent;
                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) ret += getText(elem);
                } else if (3 === nodeType || 4 === nodeType) return elem.nodeValue;
            } else for (;node = elem[i++]; ) ret += getText(node);
            return ret;
        }, (Expr = Sizzle.selectors = {
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(match) {
                    return match[1] = match[1].replace(runescape, funescape), match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape), 
                    "~=" === match[2] && (match[3] = " " + match[3] + " "), match.slice(0, 4);
                },
                CHILD: function(match) {
                    return match[1] = match[1].toLowerCase(), "nth" === match[1].slice(0, 3) ? (match[3] || Sizzle.error(match[0]), 
                    match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * ("even" === match[3] || "odd" === match[3])), 
                    match[5] = +(match[7] + match[8] || "odd" === match[3])) : match[3] && Sizzle.error(match[0]), 
                    match;
                },
                PSEUDO: function(match) {
                    var excess, unquoted = !match[6] && match[2];
                    return matchExpr.CHILD.test(match[0]) ? null : (match[3] ? match[2] = match[4] || match[5] || "" : unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, !0)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length) && (match[0] = match[0].slice(0, excess), 
                    match[2] = unquoted.slice(0, excess)), match.slice(0, 3));
                }
            },
            filter: {
                TAG: function(nodeNameSelector) {
                    var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                    return "*" === nodeNameSelector ? function() {
                        return !0;
                    } : function(elem) {
                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                    };
                },
                CLASS: function(className) {
                    var pattern = classCache[className + " "];
                    return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
                        return pattern.test("string" == typeof elem.className && elem.className || void 0 !== elem.getAttribute && elem.getAttribute("class") || "");
                    });
                },
                ATTR: function(name, operator, check) {
                    return function(elem) {
                        elem = Sizzle.attr(elem, name);
                        return null == elem ? "!=" === operator : !operator || (elem += "", 
                        "=" === operator ? elem === check : "!=" === operator ? elem !== check : "^=" === operator ? check && 0 === elem.indexOf(check) : "*=" === operator ? check && -1 < elem.indexOf(check) : "$=" === operator ? check && elem.slice(-check.length) === check : "~=" === operator ? -1 < (" " + elem.replace(rwhitespace, " ") + " ").indexOf(check) : "|=" === operator && (elem === check || elem.slice(0, check.length + 1) === check + "-"));
                    };
                },
                CHILD: function(type, what, _argument, first, last) {
                    var simple = "nth" !== type.slice(0, 3), forward = "last" !== type.slice(-4), ofType = "of-type" === what;
                    return 1 === first && 0 === last ? function(elem) {
                        return !!elem.parentNode;
                    } : function(elem, _context, xml) {
                        var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple != forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = !1;
                        if (parent) {
                            if (simple) {
                                for (;dir; ) {
                                    for (node = elem; node = node[dir]; ) if (ofType ? node.nodeName.toLowerCase() === name : 1 === node.nodeType) return !1;
                                    start = dir = "only" === type && !start && "nextSibling";
                                }
                                return !0;
                            }
                            if (start = [ forward ? parent.firstChild : parent.lastChild ], 
                            forward && useCache) {
                                for (diff = (nodeIndex = (cache = (uniqueCache = (outerCache = (node = parent)[expando] || (node[expando] = {}))[node.uniqueID] || (outerCache[node.uniqueID] = {}))[type] || [])[0] === dirruns && cache[1]) && cache[2], 
                                node = nodeIndex && parent.childNodes[nodeIndex]; node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop(); ) if (1 === node.nodeType && ++diff && node === elem) {
                                    uniqueCache[type] = [ dirruns, nodeIndex, diff ];
                                    break;
                                }
                            } else if (!1 === (diff = useCache ? nodeIndex = (cache = (uniqueCache = (outerCache = (node = elem)[expando] || (node[expando] = {}))[node.uniqueID] || (outerCache[node.uniqueID] = {}))[type] || [])[0] === dirruns && cache[1] : diff)) for (;(node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) && ((ofType ? node.nodeName.toLowerCase() !== name : 1 !== node.nodeType) || !++diff || (useCache && ((uniqueCache = (outerCache = node[expando] || (node[expando] = {}))[node.uniqueID] || (outerCache[node.uniqueID] = {}))[type] = [ dirruns, diff ]), 
                            node !== elem)); );
                            return (diff -= last) === first || diff % first == 0 && 0 <= diff / first;
                        }
                    };
                },
                PSEUDO: function(pseudo, argument) {
                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
                    return fn[expando] ? fn(argument) : 1 < fn.length ? (args = [ pseudo, pseudo, "", argument ], 
                    Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
                        for (var idx, matched = fn(seed, argument), i = matched.length; i--; ) seed[idx = indexOf(seed, matched[i])] = !(matches[idx] = matched[i]);
                    }) : function(elem) {
                        return fn(elem, 0, args);
                    }) : fn;
                }
            },
            pseudos: {
                not: markFunction(function(selector) {
                    var input = [], results = [], matcher = compile(selector.replace(rtrim, "$1"));
                    return matcher[expando] ? markFunction(function(seed, matches, _context, xml) {
                        for (var elem, unmatched = matcher(seed, null, xml, []), i = seed.length; i--; ) (elem = unmatched[i]) && (seed[i] = !(matches[i] = elem));
                    }) : function(elem, _context, xml) {
                        return input[0] = elem, matcher(input, null, xml, results), 
                        input[0] = null, !results.pop();
                    };
                }),
                has: markFunction(function(selector) {
                    return function(elem) {
                        return 0 < Sizzle(selector, elem).length;
                    };
                }),
                contains: markFunction(function(text) {
                    return text = text.replace(runescape, funescape), function(elem) {
                        return -1 < (elem.textContent || getText(elem)).indexOf(text);
                    };
                }),
                lang: markFunction(function(lang) {
                    return ridentifier.test(lang || "") || Sizzle.error("unsupported lang: " + lang), 
                    lang = lang.replace(runescape, funescape).toLowerCase(), function(elem) {
                        var elemLang;
                        do {
                            if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) return (elemLang = elemLang.toLowerCase()) === lang || 0 === elemLang.indexOf(lang + "-");
                        } while ((elem = elem.parentNode) && 1 === elem.nodeType);
                        return !1;
                    };
                }),
                target: function(elem) {
                    var hash = window.location && window.location.hash;
                    return hash && hash.slice(1) === elem.id;
                },
                root: function(elem) {
                    return elem === docElem;
                },
                focus: function(elem) {
                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                },
                enabled: createDisabledPseudo(!1),
                disabled: createDisabledPseudo(!0),
                checked: function(elem) {
                    var nodeName = elem.nodeName.toLowerCase();
                    return "input" === nodeName && !!elem.checked || "option" === nodeName && !!elem.selected;
                },
                selected: function(elem) {
                    return elem.parentNode && elem.parentNode.selectedIndex, !0 === elem.selected;
                },
                empty: function(elem) {
                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) if (elem.nodeType < 6) return !1;
                    return !0;
                },
                parent: function(elem) {
                    return !Expr.pseudos.empty(elem);
                },
                header: function(elem) {
                    return rheader.test(elem.nodeName);
                },
                input: function(elem) {
                    return rinputs.test(elem.nodeName);
                },
                button: function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return "input" === name && "button" === elem.type || "button" === name;
                },
                text: function(elem) {
                    return "input" === elem.nodeName.toLowerCase() && "text" === elem.type && (null == (elem = elem.getAttribute("type")) || "text" === elem.toLowerCase());
                },
                first: createPositionalPseudo(function() {
                    return [ 0 ];
                }),
                last: createPositionalPseudo(function(_matchIndexes, length) {
                    return [ length - 1 ];
                }),
                eq: createPositionalPseudo(function(_matchIndexes, length, argument) {
                    return [ argument < 0 ? argument + length : argument ];
                }),
                even: createPositionalPseudo(function(matchIndexes, length) {
                    for (var i = 0; i < length; i += 2) matchIndexes.push(i);
                    return matchIndexes;
                }),
                odd: createPositionalPseudo(function(matchIndexes, length) {
                    for (var i = 1; i < length; i += 2) matchIndexes.push(i);
                    return matchIndexes;
                }),
                lt: createPositionalPseudo(function(matchIndexes, length, argument) {
                    for (var i = argument < 0 ? argument + length : length < argument ? length : argument; 0 <= --i; ) matchIndexes.push(i);
                    return matchIndexes;
                }),
                gt: createPositionalPseudo(function(matchIndexes, length, argument) {
                    for (var i = argument < 0 ? argument + length : argument; ++i < length; ) matchIndexes.push(i);
                    return matchIndexes;
                })
            }
        }).pseudos.nth = Expr.pseudos.eq, {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        }) Expr.pseudos[i] = function(type) {
            return function(elem) {
                return "input" === elem.nodeName.toLowerCase() && elem.type === type;
            };
        }(i);
        for (i in {
            submit: !0,
            reset: !0
        }) Expr.pseudos[i] = function(type) {
            return function(elem) {
                var name = elem.nodeName.toLowerCase();
                return ("input" === name || "button" === name) && elem.type === type;
            };
        }(i);
        function setFilters() {}
        function toSelector(tokens) {
            for (var i = 0, len = tokens.length, selector = ""; i < len; i++) selector += tokens[i].value;
            return selector;
        }
        function addCombinator(matcher, combinator, base) {
            var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && "parentNode" === key, doneName = done++;
            return combinator.first ? function(elem, context, xml) {
                for (;elem = elem[dir]; ) if (1 === elem.nodeType || checkNonElements) return matcher(elem, context, xml);
                return !1;
            } : function(elem, context, xml) {
                var oldCache, outerCache, newCache = [ dirruns, doneName ];
                if (xml) {
                    for (;elem = elem[dir]; ) if ((1 === elem.nodeType || checkNonElements) && matcher(elem, context, xml)) return !0;
                } else for (;elem = elem[dir]; ) if (1 === elem.nodeType || checkNonElements) if (outerCache = (outerCache = elem[expando] || (elem[expando] = {}))[elem.uniqueID] || (outerCache[elem.uniqueID] = {}), 
                skip && skip === elem.nodeName.toLowerCase()) elem = elem[dir] || elem; else {
                    if ((oldCache = outerCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) return newCache[2] = oldCache[2];
                    if ((outerCache[key] = newCache)[2] = matcher(elem, context, xml)) return !0;
                }
                return !1;
            };
        }
        function elementMatcher(matchers) {
            return 1 < matchers.length ? function(elem, context, xml) {
                for (var i = matchers.length; i--; ) if (!matchers[i](elem, context, xml)) return !1;
                return !0;
            } : matchers[0];
        }
        function condense(unmatched, map, filter, context, xml) {
            for (var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = null != map; i < len; i++) !(elem = unmatched[i]) || filter && !filter(elem, context, xml) || (newUnmatched.push(elem), 
            mapped && map.push(i));
            return newUnmatched;
        }
        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
            return postFilter && !postFilter[expando] && (postFilter = setMatcher(postFilter)), 
            postFinder && !postFinder[expando] && (postFinder = setMatcher(postFinder, postSelector)), 
            markFunction(function(seed, results, context, xml) {
                var temp, i, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || function(selector, contexts, results) {
                    for (var i = 0, len = contexts.length; i < len; i++) Sizzle(selector, contexts[i], results);
                    return results;
                }(selector || "*", context.nodeType ? [ context ] : context, []), matcherIn = !preFilter || !seed && selector ? elems : condense(elems, preMap, preFilter, context, xml), matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
                if (matcher && matcher(matcherIn, matcherOut, context, xml), postFilter) for (temp = condense(matcherOut, postMap), 
                postFilter(temp, [], context, xml), i = temp.length; i--; ) (elem = temp[i]) && (matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem));
                if (seed) {
                    if (postFinder || preFilter) {
                        if (postFinder) {
                            for (temp = [], i = matcherOut.length; i--; ) (elem = matcherOut[i]) && temp.push(matcherIn[i] = elem);
                            postFinder(null, matcherOut = [], temp, xml);
                        }
                        for (i = matcherOut.length; i--; ) (elem = matcherOut[i]) && -1 < (temp = postFinder ? indexOf(seed, elem) : preMap[i]) && (seed[temp] = !(results[temp] = elem));
                    }
                } else matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut), 
                postFinder ? postFinder(null, results, matcherOut, xml) : push.apply(results, matcherOut);
            });
        }
        function matcherFromGroupMatchers(elementMatchers, setMatchers) {
            function superMatcher(seed, context, xml, results, outermost) {
                var elem, j, matcher, matchedCount = 0, i = "0", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find.TAG("*", outermost), dirrunsUnique = dirruns += null == contextBackup ? 1 : Math.random() || .1, len = elems.length;
                for (outermost && (outermostContext = context == document || context || outermost); i !== len && null != (elem = elems[i]); i++) {
                    if (byElement && elem) {
                        for (j = 0, context || elem.ownerDocument == document || (setDocument(elem), 
                        xml = !documentIsHTML); matcher = elementMatchers[j++]; ) if (matcher(elem, context || document, xml)) {
                            results.push(elem);
                            break;
                        }
                        outermost && (dirruns = dirrunsUnique);
                    }
                    bySet && ((elem = !matcher && elem) && matchedCount--, seed && unmatched.push(elem));
                }
                if (matchedCount += i, bySet && i !== matchedCount) {
                    for (j = 0; matcher = setMatchers[j++]; ) matcher(unmatched, setMatched, context, xml);
                    if (seed) {
                        if (0 < matchedCount) for (;i--; ) unmatched[i] || setMatched[i] || (setMatched[i] = pop.call(results));
                        setMatched = condense(setMatched);
                    }
                    push.apply(results, setMatched), outermost && !seed && 0 < setMatched.length && 1 < matchedCount + setMatchers.length && Sizzle.uniqueSort(results);
                }
                return outermost && (dirruns = dirrunsUnique, outermostContext = contextBackup), 
                unmatched;
            }
            var bySet = 0 < setMatchers.length, byElement = 0 < elementMatchers.length;
            return bySet ? markFunction(superMatcher) : superMatcher;
        }
        return setFilters.prototype = Expr.filters = Expr.pseudos, Expr.setFilters = new setFilters(), 
        tokenize = Sizzle.tokenize = function(selector, parseOnly) {
            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
            if (cached) return parseOnly ? 0 : cached.slice(0);
            for (soFar = selector, groups = [], preFilters = Expr.preFilter; soFar; ) {
                for (type in matched && !(match = rcomma.exec(soFar)) || (match && (soFar = soFar.slice(match[0].length) || soFar), 
                groups.push(tokens = [])), matched = !1, (match = rcombinators.exec(soFar)) && (matched = match.shift(), 
                tokens.push({
                    value: matched,
                    type: match[0].replace(rtrim, " ")
                }), soFar = soFar.slice(matched.length)), Expr.filter) !(match = matchExpr[type].exec(soFar)) || preFilters[type] && !(match = preFilters[type](match)) || (matched = match.shift(), 
                tokens.push({
                    value: matched,
                    type: type,
                    matches: match
                }), soFar = soFar.slice(matched.length));
                if (!matched) break;
            }
            return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
        }, compile = Sizzle.compile = function(selector, match) {
            var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
            if (!cached) {
                for (i = (match = match || tokenize(selector)).length; i--; ) ((cached = function matcherFromTokens(tokens) {
                    for (var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
                        return elem === checkContext;
                    }, implicitRelative, !0), matchAnyContext = addCombinator(function(elem) {
                        return -1 < indexOf(checkContext, elem);
                    }, implicitRelative, !0), matchers = [ function(elem, context, xml) {
                        return elem = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext : matchAnyContext)(elem, context, xml), 
                        checkContext = null, elem;
                    } ]; i < len; i++) if (matcher = Expr.relative[tokens[i].type]) matchers = [ addCombinator(elementMatcher(matchers), matcher) ]; else {
                        if ((matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches))[expando]) {
                            for (j = ++i; j < len && !Expr.relative[tokens[j].type]; j++);
                            return setMatcher(1 < i && elementMatcher(matchers), 1 < i && toSelector(tokens.slice(0, i - 1).concat({
                                value: " " === tokens[i - 2].type ? "*" : ""
                            })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
                        }
                        matchers.push(matcher);
                    }
                    return elementMatcher(matchers);
                }(match[i]))[expando] ? setMatchers : elementMatchers).push(cached);
                (cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers))).selector = selector;
            }
            return cached;
        }, select = Sizzle.select = function(selector, context, results, seed) {
            var i, tokens, token, type, find, compiled = "function" == typeof selector && selector, match = !seed && tokenize(selector = compiled.selector || selector);
            if (results = results || [], 1 === match.length) {
                if (2 < (tokens = match[0] = match[0].slice(0)).length && "ID" === (token = tokens[0]).type && 9 === context.nodeType && documentIsHTML && Expr.relative[tokens[1].type]) {
                    if (!(context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0])) return results;
                    compiled && (context = context.parentNode), selector = selector.slice(tokens.shift().value.length);
                }
                for (i = matchExpr.needsContext.test(selector) ? 0 : tokens.length; i-- && (token = tokens[i], 
                !Expr.relative[type = token.type]); ) if ((find = Expr.find[type]) && (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {
                    if (tokens.splice(i, 1), selector = seed.length && toSelector(tokens)) break;
                    return push.apply(results, seed), results;
                }
            }
            return (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context), 
            results;
        }, support.sortStable = expando.split("").sort(sortOrder).join("") === expando, 
        support.detectDuplicates = !!hasDuplicate, setDocument(), support.sortDetached = assert(function(el) {
            return 1 & el.compareDocumentPosition(document.createElement("fieldset"));
        }), assert(function(el) {
            return el.innerHTML = "<a href='#'></a>", "#" === el.firstChild.getAttribute("href");
        }) || addHandle("type|href|height|width", function(elem, name, isXML) {
            if (!isXML) return elem.getAttribute(name, "type" === name.toLowerCase() ? 1 : 2);
        }), support.attributes && assert(function(el) {
            return el.innerHTML = "<input/>", el.firstChild.setAttribute("value", ""), 
            "" === el.firstChild.getAttribute("value");
        }) || addHandle("value", function(elem, _name, isXML) {
            if (!isXML && "input" === elem.nodeName.toLowerCase()) return elem.defaultValue;
        }), assert(function(el) {
            return null == el.getAttribute("disabled");
        }) || addHandle(booleans, function(elem, name, isXML) {
            if (!isXML) return !0 === elem[name] ? name.toLowerCase() : (isXML = elem.getAttributeNode(name)) && isXML.specified ? isXML.value : null;
        }), Sizzle;
    }(window), rneedsContext = (jQuery.find = Sizzle, jQuery.expr = Sizzle.selectors, 
    jQuery.expr[":"] = jQuery.expr.pseudos, jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort, 
    jQuery.text = Sizzle.getText, jQuery.isXMLDoc = Sizzle.isXML, jQuery.contains = Sizzle.contains, 
    jQuery.escapeSelector = Sizzle.escape, jQuery.expr.match.needsContext);
    function nodeName(elem, name) {
        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
    }
    var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function winnow(elements, qualifier, not) {
        return isFunction(qualifier) ? jQuery.grep(elements, function(elem, i) {
            return !!qualifier.call(elem, i, elem) !== not;
        }) : qualifier.nodeType ? jQuery.grep(elements, function(elem) {
            return elem === qualifier !== not;
        }) : "string" != typeof qualifier ? jQuery.grep(elements, function(elem) {
            return -1 < indexOf.call(qualifier, elem) !== not;
        }) : jQuery.filter(qualifier, elements, not);
    }
    jQuery.filter = function(expr, elems, not) {
        var elem = elems[0];
        return not && (expr = ":not(" + expr + ")"), 1 === elems.length && 1 === elem.nodeType ? jQuery.find.matchesSelector(elem, expr) ? [ elem ] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {
            return 1 === elem.nodeType;
        }));
    }, jQuery.fn.extend({
        find: function(selector) {
            var i, ret, len = this.length, self = this;
            if ("string" != typeof selector) return this.pushStack(jQuery(selector).filter(function() {
                for (i = 0; i < len; i++) if (jQuery.contains(self[i], this)) return !0;
            }));
            for (ret = this.pushStack([]), i = 0; i < len; i++) jQuery.find(selector, self[i], ret);
            return 1 < len ? jQuery.uniqueSort(ret) : ret;
        },
        filter: function(selector) {
            return this.pushStack(winnow(this, selector || [], !1));
        },
        not: function(selector) {
            return this.pushStack(winnow(this, selector || [], !0));
        },
        is: function(selector) {
            return !!winnow(this, "string" == typeof selector && rneedsContext.test(selector) ? jQuery(selector) : selector || [], !1).length;
        }
    });
    var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, rparentsprev = ((jQuery.fn.init = function(selector, context, root) {
        if (!selector) return this;
        if (root = root || rootjQuery, "string" != typeof selector) return selector.nodeType ? (this[0] = selector, 
        this.length = 1, this) : isFunction(selector) ? void 0 !== root.ready ? root.ready(selector) : selector(jQuery) : jQuery.makeArray(selector, this);
        if (!(match = "<" === selector[0] && ">" === selector[selector.length - 1] && 3 <= selector.length ? [ null, selector, null ] : rquickExpr.exec(selector)) || !match[1] && context) return (!context || context.jquery ? context || root : this.constructor(context)).find(selector);
        if (match[1]) {
            if (context = context instanceof jQuery ? context[0] : context, jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0)), 
            rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) for (var match in context) isFunction(this[match]) ? this[match](context[match]) : this.attr(match, context[match]);
            return this;
        }
        return (root = document.getElementById(match[2])) && (this[0] = root, this.length = 1), 
        this;
    }).prototype = jQuery.fn, rootjQuery = jQuery(document), /^(?:parents|prev(?:Until|All))/), guaranteedUnique = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    function sibling(cur, dir) {
        for (;(cur = cur[dir]) && 1 !== cur.nodeType; );
        return cur;
    }
    jQuery.fn.extend({
        has: function(target) {
            var targets = jQuery(target, this), l = targets.length;
            return this.filter(function() {
                for (var i = 0; i < l; i++) if (jQuery.contains(this, targets[i])) return !0;
            });
        },
        closest: function(selectors, context) {
            var cur, i = 0, l = this.length, matched = [], targets = "string" != typeof selectors && jQuery(selectors);
            if (!rneedsContext.test(selectors)) for (;i < l; i++) for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) if (cur.nodeType < 11 && (targets ? -1 < targets.index(cur) : 1 === cur.nodeType && jQuery.find.matchesSelector(cur, selectors))) {
                matched.push(cur);
                break;
            }
            return this.pushStack(1 < matched.length ? jQuery.uniqueSort(matched) : matched);
        },
        index: function(elem) {
            return elem ? "string" == typeof elem ? indexOf.call(jQuery(elem), this[0]) : indexOf.call(this, elem.jquery ? elem[0] : elem) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function(selector, context) {
            return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
        },
        addBack: function(selector) {
            return this.add(null == selector ? this.prevObject : this.prevObject.filter(selector));
        }
    }), jQuery.each({
        parent: function(elem) {
            elem = elem.parentNode;
            return elem && 11 !== elem.nodeType ? elem : null;
        },
        parents: function(elem) {
            return dir(elem, "parentNode");
        },
        parentsUntil: function(elem, _i, until) {
            return dir(elem, "parentNode", until);
        },
        next: function(elem) {
            return sibling(elem, "nextSibling");
        },
        prev: function(elem) {
            return sibling(elem, "previousSibling");
        },
        nextAll: function(elem) {
            return dir(elem, "nextSibling");
        },
        prevAll: function(elem) {
            return dir(elem, "previousSibling");
        },
        nextUntil: function(elem, _i, until) {
            return dir(elem, "nextSibling", until);
        },
        prevUntil: function(elem, _i, until) {
            return dir(elem, "previousSibling", until);
        },
        siblings: function(elem) {
            return siblings((elem.parentNode || {}).firstChild, elem);
        },
        children: function(elem) {
            return siblings(elem.firstChild);
        },
        contents: function(elem) {
            return null != elem.contentDocument && getProto(elem.contentDocument) ? elem.contentDocument : (nodeName(elem, "template") && (elem = elem.content || elem), 
            jQuery.merge([], elem.childNodes));
        }
    }, function(name, fn) {
        jQuery.fn[name] = function(until, selector) {
            var matched = jQuery.map(this, fn, until);
            return (selector = "Until" !== name.slice(-5) ? until : selector) && "string" == typeof selector && (matched = jQuery.filter(selector, matched)), 
            1 < this.length && (guaranteedUnique[name] || jQuery.uniqueSort(matched), 
            rparentsprev.test(name) && matched.reverse()), this.pushStack(matched);
        };
    });
    var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
    function Identity(v) {
        return v;
    }
    function Thrower(ex) {
        throw ex;
    }
    function adoptValue(value, resolve, reject, noValue) {
        var method;
        try {
            value && isFunction(method = value.promise) ? method.call(value).done(resolve).fail(reject) : value && isFunction(method = value.then) ? method.call(value, resolve, reject) : resolve.apply(void 0, [ value ].slice(noValue));
        } catch (value) {
            reject.apply(void 0, [ value ]);
        }
    }
    jQuery.Callbacks = function(options) {
        options = "string" == typeof options ? function(options) {
            var object = {};
            return jQuery.each(options.match(rnothtmlwhite) || [], function(_, flag) {
                object[flag] = !0;
            }), object;
        }(options) : jQuery.extend({}, options);
        function fire() {
            for (locked = locked || options.once, fired = firing = !0; queue.length; firingIndex = -1) for (memory = queue.shift(); ++firingIndex < list.length; ) !1 === list[firingIndex].apply(memory[0], memory[1]) && options.stopOnFalse && (firingIndex = list.length, 
            memory = !1);
            options.memory || (memory = !1), firing = !1, locked && (list = memory ? [] : "");
        }
        var firing, memory, fired, locked, list = [], queue = [], firingIndex = -1, self = {
            add: function() {
                return list && (memory && !firing && (firingIndex = list.length - 1, 
                queue.push(memory)), function add(args) {
                    jQuery.each(args, function(_, arg) {
                        isFunction(arg) ? options.unique && self.has(arg) || list.push(arg) : arg && arg.length && "string" !== toType(arg) && add(arg);
                    });
                }(arguments), memory && !firing && fire()), this;
            },
            remove: function() {
                return jQuery.each(arguments, function(_, arg) {
                    for (var index; -1 < (index = jQuery.inArray(arg, list, index)); ) list.splice(index, 1), 
                    index <= firingIndex && firingIndex--;
                }), this;
            },
            has: function(fn) {
                return fn ? -1 < jQuery.inArray(fn, list) : 0 < list.length;
            },
            empty: function() {
                return list = list && [], this;
            },
            disable: function() {
                return locked = queue = [], list = memory = "", this;
            },
            disabled: function() {
                return !list;
            },
            lock: function() {
                return locked = queue = [], memory || firing || (list = memory = ""), 
                this;
            },
            locked: function() {
                return !!locked;
            },
            fireWith: function(context, args) {
                return locked || (args = [ context, (args = args || []).slice ? args.slice() : args ], 
                queue.push(args), firing || fire()), this;
            },
            fire: function() {
                return self.fireWith(this, arguments), this;
            },
            fired: function() {
                return !!fired;
            }
        };
        return self;
    }, jQuery.extend({
        Deferred: function(func) {
            var tuples = [ [ "notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2 ], [ "resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved" ], [ "reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected" ] ], state = "pending", promise = {
                state: function() {
                    return state;
                },
                always: function() {
                    return deferred.done(arguments).fail(arguments), this;
                },
                catch: function(fn) {
                    return promise.then(null, fn);
                },
                pipe: function() {
                    var fns = arguments;
                    return jQuery.Deferred(function(newDefer) {
                        jQuery.each(tuples, function(_i, tuple) {
                            var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];
                            deferred[tuple[1]](function() {
                                var returned = fn && fn.apply(this, arguments);
                                returned && isFunction(returned.promise) ? returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject) : newDefer[tuple[0] + "With"](this, fn ? [ returned ] : arguments);
                            });
                        }), fns = null;
                    }).promise();
                },
                then: function(onFulfilled, onRejected, onProgress) {
                    var maxDepth = 0;
                    function resolve(depth, deferred, handler, special) {
                        return function() {
                            function mightThrow() {
                                var returned, then;
                                if (!(depth < maxDepth)) {
                                    if ((returned = handler.apply(that, args)) === deferred.promise()) throw new TypeError("Thenable self-resolution");
                                    then = returned && ("object" == typeof returned || "function" == typeof returned) && returned.then, 
                                    isFunction(then) ? special ? then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)) : (maxDepth++, 
                                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith))) : (handler !== Identity && (that = void 0, 
                                    args = [ returned ]), (special || deferred.resolveWith)(that, args));
                                }
                            }
                            var that = this, args = arguments, process = special ? mightThrow : function() {
                                try {
                                    mightThrow();
                                } catch (e) {
                                    jQuery.Deferred.exceptionHook && jQuery.Deferred.exceptionHook(e, process.stackTrace), 
                                    maxDepth <= depth + 1 && (handler !== Thrower && (that = void 0, 
                                    args = [ e ]), deferred.rejectWith(that, args));
                                }
                            };
                            depth ? process() : (jQuery.Deferred.getStackHook && (process.stackTrace = jQuery.Deferred.getStackHook()), 
                            window.setTimeout(process));
                        };
                    }
                    return jQuery.Deferred(function(newDefer) {
                        tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)), 
                        tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)), 
                        tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));
                    }).promise();
                },
                promise: function(obj) {
                    return null != obj ? jQuery.extend(obj, promise) : promise;
                }
            }, deferred = {};
            return jQuery.each(tuples, function(i, tuple) {
                var list = tuple[2], stateString = tuple[5];
                promise[tuple[1]] = list.add, stateString && list.add(function() {
                    state = stateString;
                }, tuples[3 - i][2].disable, tuples[3 - i][3].disable, tuples[0][2].lock, tuples[0][3].lock), 
                list.add(tuple[3].fire), deferred[tuple[0]] = function() {
                    return deferred[tuple[0] + "With"](this === deferred ? void 0 : this, arguments), 
                    this;
                }, deferred[tuple[0] + "With"] = list.fireWith;
            }), promise.promise(deferred), func && func.call(deferred, deferred), 
            deferred;
        },
        when: function(singleValue) {
            function updateFunc(i) {
                return function(value) {
                    resolveContexts[i] = this, resolveValues[i] = 1 < arguments.length ? slice.call(arguments) : value, 
                    --remaining || primary.resolveWith(resolveContexts, resolveValues);
                };
            }
            var remaining = arguments.length, i = remaining, resolveContexts = Array(i), resolveValues = slice.call(arguments), primary = jQuery.Deferred();
            if (remaining <= 1 && (adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining), 
            "pending" === primary.state() || isFunction(resolveValues[i] && resolveValues[i].then))) return primary.then();
            for (;i--; ) adoptValue(resolveValues[i], updateFunc(i), primary.reject);
            return primary.promise();
        }
    });
    var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/, readyList = (jQuery.Deferred.exceptionHook = function(error, stack) {
        window.console && window.console.warn && error && rerrorNames.test(error.name) && window.console.warn("jQuery.Deferred exception: " + error.message, error.stack, stack);
    }, jQuery.readyException = function(error) {
        window.setTimeout(function() {
            throw error;
        });
    }, jQuery.Deferred());
    function completed() {
        document.removeEventListener("DOMContentLoaded", completed), window.removeEventListener("load", completed), 
        jQuery.ready();
    }
    jQuery.fn.ready = function(fn) {
        return readyList.then(fn).catch(function(error) {
            jQuery.readyException(error);
        }), this;
    }, jQuery.extend({
        isReady: !1,
        readyWait: 1,
        ready: function(wait) {
            (!0 === wait ? --jQuery.readyWait : jQuery.isReady) || (jQuery.isReady = !0) !== wait && 0 < --jQuery.readyWait || readyList.resolveWith(document, [ jQuery ]);
        }
    }), jQuery.ready.then = readyList.then, "complete" === document.readyState || "loading" !== document.readyState && !document.documentElement.doScroll ? window.setTimeout(jQuery.ready) : (document.addEventListener("DOMContentLoaded", completed), 
    window.addEventListener("load", completed));
    function access(elems, fn, key, value, chainable, emptyGet, raw) {
        var i = 0, len = elems.length, bulk = null == key;
        if ("object" === toType(key)) for (i in chainable = !0, key) access(elems, fn, i, key[i], !0, emptyGet, raw); else if (void 0 !== value && (chainable = !0, 
        isFunction(value) || (raw = !0), fn = bulk ? raw ? (fn.call(elems, value), 
        null) : (bulk = fn, function(elem, _key, value) {
            return bulk.call(jQuery(elem), value);
        }) : fn)) for (;i < len; i++) fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
        return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;
    }
    var rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g;
    function fcamelCase(_all, letter) {
        return letter.toUpperCase();
    }
    function camelCase(string) {
        return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
    }
    function acceptData(owner) {
        return 1 === owner.nodeType || 9 === owner.nodeType || !+owner.nodeType;
    }
    function Data() {
        this.expando = jQuery.expando + Data.uid++;
    }
    Data.uid = 1, Data.prototype = {
        cache: function(owner) {
            var value = owner[this.expando];
            return value || (value = {}, acceptData(owner) && (owner.nodeType ? owner[this.expando] = value : Object.defineProperty(owner, this.expando, {
                value: value,
                configurable: !0
            }))), value;
        },
        set: function(owner, data, value) {
            var prop, cache = this.cache(owner);
            if ("string" == typeof data) cache[camelCase(data)] = value; else for (prop in data) cache[camelCase(prop)] = data[prop];
            return cache;
        },
        get: function(owner, key) {
            return void 0 === key ? this.cache(owner) : owner[this.expando] && owner[this.expando][camelCase(key)];
        },
        access: function(owner, key, value) {
            return void 0 === key || key && "string" == typeof key && void 0 === value ? this.get(owner, key) : (this.set(owner, key, value), 
            void 0 !== value ? value : key);
        },
        remove: function(owner, key) {
            var i, cache = owner[this.expando];
            if (void 0 !== cache) {
                if (void 0 !== key) {
                    i = (key = Array.isArray(key) ? key.map(camelCase) : (key = camelCase(key)) in cache ? [ key ] : key.match(rnothtmlwhite) || []).length;
                    for (;i--; ) delete cache[key[i]];
                }
                void 0 !== key && !jQuery.isEmptyObject(cache) || (owner.nodeType ? owner[this.expando] = void 0 : delete owner[this.expando]);
            }
        },
        hasData: function(owner) {
            owner = owner[this.expando];
            return void 0 !== owner && !jQuery.isEmptyObject(owner);
        }
    };
    var dataPriv = new Data(), dataUser = new Data(), rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /[A-Z]/g;
    function dataAttr(elem, key, data) {
        var name;
        if (void 0 === data && 1 === elem.nodeType) if (name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase(), 
        "string" == typeof (data = elem.getAttribute(name))) {
            try {
                data = function(data) {
                    return "true" === data || "false" !== data && ("null" === data ? null : data === +data + "" ? +data : rbrace.test(data) ? JSON.parse(data) : data);
                }(data);
            } catch (e) {}
            dataUser.set(elem, key, data);
        } else data = void 0;
        return data;
    }
    jQuery.extend({
        hasData: function(elem) {
            return dataUser.hasData(elem) || dataPriv.hasData(elem);
        },
        data: function(elem, name, data) {
            return dataUser.access(elem, name, data);
        },
        removeData: function(elem, name) {
            dataUser.remove(elem, name);
        },
        _data: function(elem, name, data) {
            return dataPriv.access(elem, name, data);
        },
        _removeData: function(elem, name) {
            dataPriv.remove(elem, name);
        }
    }), jQuery.fn.extend({
        data: function(key, value) {
            var i, name, data, elem = this[0], attrs = elem && elem.attributes;
            if (void 0 !== key) return "object" == typeof key ? this.each(function() {
                dataUser.set(this, key);
            }) : access(this, function(value) {
                var data;
                if (elem && void 0 === value) return void 0 !== (data = dataUser.get(elem, key)) || void 0 !== (data = dataAttr(elem, key)) ? data : void 0;
                this.each(function() {
                    dataUser.set(this, key, value);
                });
            }, null, value, 1 < arguments.length, null, !0);
            if (this.length && (data = dataUser.get(elem), 1 === elem.nodeType && !dataPriv.get(elem, "hasDataAttrs"))) {
                for (i = attrs.length; i--; ) attrs[i] && 0 === (name = attrs[i].name).indexOf("data-") && (name = camelCase(name.slice(5)), 
                dataAttr(elem, name, data[name]));
                dataPriv.set(elem, "hasDataAttrs", !0);
            }
            return data;
        },
        removeData: function(key) {
            return this.each(function() {
                dataUser.remove(this, key);
            });
        }
    }), jQuery.extend({
        queue: function(elem, type, data) {
            var queue;
            if (elem) return queue = dataPriv.get(elem, type = (type || "fx") + "queue"), 
            data && (!queue || Array.isArray(data) ? queue = dataPriv.access(elem, type, jQuery.makeArray(data)) : queue.push(data)), 
            queue || [];
        },
        dequeue: function(elem, type) {
            type = type || "fx";
            var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type);
            "inprogress" === fn && (fn = queue.shift(), startLength--), fn && ("fx" === type && queue.unshift("inprogress"), 
            delete hooks.stop, fn.call(elem, function() {
                jQuery.dequeue(elem, type);
            }, hooks)), !startLength && hooks && hooks.empty.fire();
        },
        _queueHooks: function(elem, type) {
            var key = type + "queueHooks";
            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
                empty: jQuery.Callbacks("once memory").add(function() {
                    dataPriv.remove(elem, [ type + "queue", key ]);
                })
            });
        }
    }), jQuery.fn.extend({
        queue: function(type, data) {
            var setter = 2;
            return "string" != typeof type && (data = type, type = "fx", setter--), 
            arguments.length < setter ? jQuery.queue(this[0], type) : void 0 === data ? this : this.each(function() {
                var queue = jQuery.queue(this, type, data);
                jQuery._queueHooks(this, type), "fx" === type && "inprogress" !== queue[0] && jQuery.dequeue(this, type);
            });
        },
        dequeue: function(type) {
            return this.each(function() {
                jQuery.dequeue(this, type);
            });
        },
        clearQueue: function(type) {
            return this.queue(type || "fx", []);
        },
        promise: function(type, obj) {
            function resolve() {
                --count || defer.resolveWith(elements, [ elements ]);
            }
            var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length;
            for ("string" != typeof type && (obj = type, type = void 0), type = type || "fx"; i--; ) (tmp = dataPriv.get(elements[i], type + "queueHooks")) && tmp.empty && (count++, 
            tmp.empty.add(resolve));
            return resolve(), defer.promise(obj);
        }
    });
    function isHiddenWithinTree(elem, el) {
        return "none" === (elem = el || elem).style.display || "" === elem.style.display && isAttached(elem) && "none" === jQuery.css(elem, "display");
    }
    var Sizzle = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, rcssNum = new RegExp("^(?:([+-])=|)(" + Sizzle + ")([a-z%]*)$", "i"), cssExpand = [ "Top", "Right", "Bottom", "Left" ], documentElement = document.documentElement, isAttached = function(elem) {
        return jQuery.contains(elem.ownerDocument, elem);
    }, composed = {
        composed: !0
    };
    documentElement.getRootNode && (isAttached = function(elem) {
        return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
    });
    function adjustCSS(elem, prop, valueParts, tween) {
        var adjusted, scale, maxIterations = 20, currentValue = tween ? function() {
            return tween.cur();
        } : function() {
            return jQuery.css(elem, prop, "");
        }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? "" : "px"), initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || "px" !== unit && +initial) && rcssNum.exec(jQuery.css(elem, prop));
        if (initialInUnit && initialInUnit[3] !== unit) {
            for (unit = unit || initialInUnit[3], initialInUnit = +(initial /= 2) || 1; maxIterations--; ) jQuery.style(elem, prop, initialInUnit + unit), 
            (1 - scale) * (1 - (scale = currentValue() / initial || .5)) <= 0 && (maxIterations = 0), 
            initialInUnit /= scale;
            jQuery.style(elem, prop, (initialInUnit *= 2) + unit), valueParts = valueParts || [];
        }
        return valueParts && (initialInUnit = +initialInUnit || +initial || 0, adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2], 
        tween && (tween.unit = unit, tween.start = initialInUnit, tween.end = adjusted)), 
        adjusted;
    }
    var defaultDisplayMap = {};
    function showHide(elements, show) {
        for (var display, elem, values = [], index = 0, length = elements.length; index < length; index++) (elem = elements[index]).style && (display = elem.style.display, 
        show ? ("none" === display && (values[index] = dataPriv.get(elem, "display") || null, 
        values[index] || (elem.style.display = "")), "" === elem.style.display && isHiddenWithinTree(elem) && (values[index] = function(elem) {
            var doc = elem.ownerDocument, elem = elem.nodeName, display = defaultDisplayMap[elem];
            return display || (doc = doc.body.appendChild(doc.createElement(elem)), 
            display = jQuery.css(doc, "display"), doc.parentNode.removeChild(doc), 
            defaultDisplayMap[elem] = display = "none" === display ? "block" : display), 
            display;
        }(elem))) : "none" !== display && (values[index] = "none", dataPriv.set(elem, "display", display)));
        for (index = 0; index < length; index++) null != values[index] && (elements[index].style.display = values[index]);
        return elements;
    }
    jQuery.fn.extend({
        show: function() {
            return showHide(this, !0);
        },
        hide: function() {
            return showHide(this);
        },
        toggle: function(state) {
            return "boolean" == typeof state ? state ? this.show() : this.hide() : this.each(function() {
                isHiddenWithinTree(this) ? jQuery(this).show() : jQuery(this).hide();
            });
        }
    });
    var div, rcheckableType = /^(?:checkbox|radio)$/i, rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, rscriptType = /^$|^module$|\/(?:java|ecma)script/i, wrapMap = (div = document.createDocumentFragment().appendChild(document.createElement("div")), 
    (input = document.createElement("input")).setAttribute("type", "radio"), input.setAttribute("checked", "checked"), 
    input.setAttribute("name", "t"), div.appendChild(input), support.checkClone = div.cloneNode(!0).cloneNode(!0).lastChild.checked, 
    div.innerHTML = "<textarea>x</textarea>", support.noCloneChecked = !!div.cloneNode(!0).lastChild.defaultValue, 
    div.innerHTML = "<option></option>", support.option = !!div.lastChild, {
        thead: [ 1, "<table>", "</table>" ],
        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: [ 0, "", "" ]
    });
    function getAll(context, tag) {
        var ret = void 0 !== context.getElementsByTagName ? context.getElementsByTagName(tag || "*") : void 0 !== context.querySelectorAll ? context.querySelectorAll(tag || "*") : [];
        return void 0 === tag || tag && nodeName(context, tag) ? jQuery.merge([ context ], ret) : ret;
    }
    function setGlobalEval(elems, refElements) {
        for (var i = 0, l = elems.length; i < l; i++) dataPriv.set(elems[i], "globalEval", !refElements || dataPriv.get(refElements[i], "globalEval"));
    }
    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead, 
    wrapMap.th = wrapMap.td, support.option || (wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ]);
    var rhtml = /<|&#?\w+;/;
    function buildFragment(elems, context, scripts, selection, ignored) {
        for (var elem, tmp, tag, attached, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length; i < l; i++) if ((elem = elems[i]) || 0 === elem) if ("object" === toType(elem)) jQuery.merge(nodes, elem.nodeType ? [ elem ] : elem); else if (rhtml.test(elem)) {
            for (tmp = tmp || fragment.appendChild(context.createElement("div")), 
            tag = (rtagName.exec(elem) || [ "", "" ])[1].toLowerCase(), tag = wrapMap[tag] || wrapMap._default, 
            tmp.innerHTML = tag[1] + jQuery.htmlPrefilter(elem) + tag[2], j = tag[0]; j--; ) tmp = tmp.lastChild;
            jQuery.merge(nodes, tmp.childNodes), (tmp = fragment.firstChild).textContent = "";
        } else nodes.push(context.createTextNode(elem));
        for (fragment.textContent = "", i = 0; elem = nodes[i++]; ) if (selection && -1 < jQuery.inArray(elem, selection)) ignored && ignored.push(elem); else if (attached = isAttached(elem), 
        tmp = getAll(fragment.appendChild(elem), "script"), attached && setGlobalEval(tmp), 
        scripts) for (j = 0; elem = tmp[j++]; ) rscriptType.test(elem.type || "") && scripts.push(elem);
        return fragment;
    }
    var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
    function returnTrue() {
        return !0;
    }
    function returnFalse() {
        return !1;
    }
    function expectSync(elem, type) {
        return elem === function() {
            try {
                return document.activeElement;
            } catch (err) {}
        }() == ("focus" === type);
    }
    function on(elem, types, selector, data, fn, one) {
        var origFn, type;
        if ("object" == typeof types) {
            for (type in "string" != typeof selector && (data = data || selector, 
            selector = void 0), types) on(elem, type, selector, data, types[type], one);
            return elem;
        }
        if (null == data && null == fn ? (fn = selector, data = selector = void 0) : null == fn && ("string" == typeof selector ? (fn = data, 
        data = void 0) : (fn = data, data = selector, selector = void 0)), !1 === fn) fn = returnFalse; else if (!fn) return elem;
        return 1 === one && (origFn = fn, (fn = function(event) {
            return jQuery().off(event), origFn.apply(this, arguments);
        }).guid = origFn.guid || (origFn.guid = jQuery.guid++)), elem.each(function() {
            jQuery.event.add(this, types, fn, data, selector);
        });
    }
    function leverageNative(el, type, expectSync) {
        expectSync ? (dataPriv.set(el, type, !1), jQuery.event.add(el, type, {
            namespace: !1,
            handler: function(event) {
                var notAsync, result, saved = dataPriv.get(this, type);
                if (1 & event.isTrigger && this[type]) {
                    if (saved.length) (jQuery.event.special[type] || {}).delegateType && event.stopPropagation(); else if (saved = slice.call(arguments), 
                    dataPriv.set(this, type, saved), notAsync = expectSync(this, type), 
                    this[type](), saved !== (result = dataPriv.get(this, type)) || notAsync ? dataPriv.set(this, type, !1) : result = {}, 
                    saved !== result) return event.stopImmediatePropagation(), event.preventDefault(), 
                    result && result.value;
                } else saved.length && (dataPriv.set(this, type, {
                    value: jQuery.event.trigger(jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)
                }), event.stopImmediatePropagation());
            }
        })) : void 0 === dataPriv.get(el, type) && jQuery.event.add(el, type, returnTrue);
    }
    jQuery.event = {
        global: {},
        add: function(elem, types, handler, data, selector) {
            var handleObjIn, eventHandle, events, t, special, handlers, type, tmp, origType, elemData = dataPriv.get(elem);
            if (acceptData(elem)) for (handler.handler && (handler = (handleObjIn = handler).handler, 
            selector = handleObjIn.selector), selector && jQuery.find.matchesSelector(documentElement, selector), 
            handler.guid || (handler.guid = jQuery.guid++), (events = elemData.events) || (events = elemData.events = Object.create(null)), 
            (eventHandle = elemData.handle) || (eventHandle = elemData.handle = function(e) {
                return void 0 !== jQuery && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : void 0;
            }), t = (types = (types || "").match(rnothtmlwhite) || [ "" ]).length; t--; ) type = origType = (tmp = rtypenamespace.exec(types[t]) || [])[1], 
            tmp = (tmp[2] || "").split(".").sort(), type && (special = jQuery.event.special[type] || {}, 
            type = (selector ? special.delegateType : special.bindType) || type, 
            special = jQuery.event.special[type] || {}, origType = jQuery.extend({
                type: type,
                origType: origType,
                data: data,
                handler: handler,
                guid: handler.guid,
                selector: selector,
                needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                namespace: tmp.join(".")
            }, handleObjIn), (handlers = events[type]) || ((handlers = events[type] = []).delegateCount = 0, 
            special.setup && !1 !== special.setup.call(elem, data, tmp, eventHandle) || elem.addEventListener && elem.addEventListener(type, eventHandle)), 
            special.add && (special.add.call(elem, origType), origType.handler.guid || (origType.handler.guid = handler.guid)), 
            selector ? handlers.splice(handlers.delegateCount++, 0, origType) : handlers.push(origType), 
            jQuery.event.global[type] = !0);
        },
        remove: function(elem, types, handler, selector, mappedTypes) {
            var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
            if (elemData && (events = elemData.events)) {
                for (t = (types = (types || "").match(rnothtmlwhite) || [ "" ]).length; t--; ) if (type = origType = (tmp = rtypenamespace.exec(types[t]) || [])[1], 
                namespaces = (tmp[2] || "").split(".").sort(), type) {
                    for (special = jQuery.event.special[type] || {}, handlers = events[type = (selector ? special.delegateType : special.bindType) || type] || [], 
                    tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"), 
                    origCount = j = handlers.length; j--; ) handleObj = handlers[j], 
                    !mappedTypes && origType !== handleObj.origType || handler && handler.guid !== handleObj.guid || tmp && !tmp.test(handleObj.namespace) || selector && selector !== handleObj.selector && ("**" !== selector || !handleObj.selector) || (handlers.splice(j, 1), 
                    handleObj.selector && handlers.delegateCount--, special.remove && special.remove.call(elem, handleObj));
                    origCount && !handlers.length && (special.teardown && !1 !== special.teardown.call(elem, namespaces, elemData.handle) || jQuery.removeEvent(elem, type, elemData.handle), 
                    delete events[type]);
                } else for (type in events) jQuery.event.remove(elem, type + types[t], handler, selector, !0);
                jQuery.isEmptyObject(events) && dataPriv.remove(elem, "handle events");
            }
        },
        dispatch: function(nativeEvent) {
            var i, j, matched, handleObj, handlerQueue, args = new Array(arguments.length), event = jQuery.event.fix(nativeEvent), nativeEvent = (dataPriv.get(this, "events") || Object.create(null))[event.type] || [], special = jQuery.event.special[event.type] || {};
            for (args[0] = event, i = 1; i < arguments.length; i++) args[i] = arguments[i];
            if (event.delegateTarget = this, !special.preDispatch || !1 !== special.preDispatch.call(this, event)) {
                for (handlerQueue = jQuery.event.handlers.call(this, event, nativeEvent), 
                i = 0; (matched = handlerQueue[i++]) && !event.isPropagationStopped(); ) for (event.currentTarget = matched.elem, 
                j = 0; (handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped(); ) event.rnamespace && !1 !== handleObj.namespace && !event.rnamespace.test(handleObj.namespace) || (event.handleObj = handleObj, 
                event.data = handleObj.data, void 0 !== (handleObj = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args)) && !1 === (event.result = handleObj) && (event.preventDefault(), 
                event.stopPropagation()));
                return special.postDispatch && special.postDispatch.call(this, event), 
                event.result;
            }
        },
        handlers: function(event, handlers) {
            var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
            if (delegateCount && cur.nodeType && !("click" === event.type && 1 <= event.button)) for (;cur !== this; cur = cur.parentNode || this) if (1 === cur.nodeType && ("click" !== event.type || !0 !== cur.disabled)) {
                for (matchedHandlers = [], matchedSelectors = {}, i = 0; i < delegateCount; i++) void 0 === matchedSelectors[sel = (handleObj = handlers[i]).selector + " "] && (matchedSelectors[sel] = handleObj.needsContext ? -1 < jQuery(sel, this).index(cur) : jQuery.find(sel, this, null, [ cur ]).length), 
                matchedSelectors[sel] && matchedHandlers.push(handleObj);
                matchedHandlers.length && handlerQueue.push({
                    elem: cur,
                    handlers: matchedHandlers
                });
            }
            return cur = this, delegateCount < handlers.length && handlerQueue.push({
                elem: cur,
                handlers: handlers.slice(delegateCount)
            }), handlerQueue;
        },
        addProp: function(name, hook) {
            Object.defineProperty(jQuery.Event.prototype, name, {
                enumerable: !0,
                configurable: !0,
                get: isFunction(hook) ? function() {
                    if (this.originalEvent) return hook(this.originalEvent);
                } : function() {
                    if (this.originalEvent) return this.originalEvent[name];
                },
                set: function(value) {
                    Object.defineProperty(this, name, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: value
                    });
                }
            });
        },
        fix: function(originalEvent) {
            return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);
        },
        special: {
            load: {
                noBubble: !0
            },
            click: {
                setup: function(data) {
                    data = this || data;
                    return rcheckableType.test(data.type) && data.click && nodeName(data, "input") && leverageNative(data, "click", returnTrue), 
                    !1;
                },
                trigger: function(data) {
                    data = this || data;
                    return rcheckableType.test(data.type) && data.click && nodeName(data, "input") && leverageNative(data, "click"), 
                    !0;
                },
                _default: function(event) {
                    event = event.target;
                    return rcheckableType.test(event.type) && event.click && nodeName(event, "input") && dataPriv.get(event, "click") || nodeName(event, "a");
                }
            },
            beforeunload: {
                postDispatch: function(event) {
                    void 0 !== event.result && event.originalEvent && (event.originalEvent.returnValue = event.result);
                }
            }
        }
    }, jQuery.removeEvent = function(elem, type, handle) {
        elem.removeEventListener && elem.removeEventListener(type, handle);
    }, jQuery.Event = function(src, props) {
        if (!(this instanceof jQuery.Event)) return new jQuery.Event(src, props);
        src && src.type ? (this.originalEvent = src, this.type = src.type, this.isDefaultPrevented = src.defaultPrevented || void 0 === src.defaultPrevented && !1 === src.returnValue ? returnTrue : returnFalse, 
        this.target = src.target && 3 === src.target.nodeType ? src.target.parentNode : src.target, 
        this.currentTarget = src.currentTarget, this.relatedTarget = src.relatedTarget) : this.type = src, 
        props && jQuery.extend(this, props), this.timeStamp = src && src.timeStamp || Date.now(), 
        this[jQuery.expando] = !0;
    }, jQuery.Event.prototype = {
        constructor: jQuery.Event,
        isDefaultPrevented: returnFalse,
        isPropagationStopped: returnFalse,
        isImmediatePropagationStopped: returnFalse,
        isSimulated: !1,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = returnTrue, e && !this.isSimulated && e.preventDefault();
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = returnTrue, e && !this.isSimulated && e.stopPropagation();
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = returnTrue, e && !this.isSimulated && e.stopImmediatePropagation(), 
            this.stopPropagation();
        }
    }, jQuery.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        char: !0,
        code: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: !0
    }, jQuery.event.addProp), jQuery.each({
        focus: "focusin",
        blur: "focusout"
    }, function(type, delegateType) {
        jQuery.event.special[type] = {
            setup: function() {
                return leverageNative(this, type, expectSync), !1;
            },
            trigger: function() {
                return leverageNative(this, type), !0;
            },
            _default: function() {
                return !0;
            },
            delegateType: delegateType
        };
    }), jQuery.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(orig, fix) {
        jQuery.event.special[orig] = {
            delegateType: fix,
            bindType: fix,
            handle: function(event) {
                var ret, related = event.relatedTarget, handleObj = event.handleObj;
                return related && (related === this || jQuery.contains(this, related)) || (event.type = handleObj.origType, 
                ret = handleObj.handler.apply(this, arguments), event.type = fix), 
                ret;
            }
        };
    }), jQuery.fn.extend({
        on: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn);
        },
        one: function(types, selector, data, fn) {
            return on(this, types, selector, data, fn, 1);
        },
        off: function(types, selector, fn) {
            var handleObj, type;
            if (types && types.preventDefault && types.handleObj) return handleObj = types.handleObj, 
            jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler), 
            this;
            if ("object" != typeof types) return !1 !== selector && "function" != typeof selector || (fn = selector, 
            selector = void 0), !1 === fn && (fn = returnFalse), this.each(function() {
                jQuery.event.remove(this, types, fn, selector);
            });
            for (type in types) this.off(type, selector, types[type]);
            return this;
        }
    });
    var rnoInnerhtml = /<script|<style|<link/i, rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    function manipulationTarget(elem, content) {
        return nodeName(elem, "table") && nodeName(11 !== content.nodeType ? content : content.firstChild, "tr") && jQuery(elem).children("tbody")[0] || elem;
    }
    function disableScript(elem) {
        return elem.type = (null !== elem.getAttribute("type")) + "/" + elem.type, 
        elem;
    }
    function restoreScript(elem) {
        return "true/" === (elem.type || "").slice(0, 5) ? elem.type = elem.type.slice(5) : elem.removeAttribute("type"), 
        elem;
    }
    function cloneCopyEvent(src, dest) {
        var i, l, type, events;
        if (1 === dest.nodeType) {
            if (dataPriv.hasData(src) && (events = dataPriv.get(src).events)) for (type in dataPriv.remove(dest, "handle events"), 
            events) for (i = 0, l = events[type].length; i < l; i++) jQuery.event.add(dest, type, events[type][i]);
            dataUser.hasData(src) && (src = dataUser.access(src), src = jQuery.extend({}, src), 
            dataUser.set(dest, src));
        }
    }
    function domManip(collection, args, callback, ignored) {
        args = flat(args);
        var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], valueIsFunction = isFunction(value);
        if (valueIsFunction || 1 < l && "string" == typeof value && !support.checkClone && rchecked.test(value)) return collection.each(function(index) {
            var self = collection.eq(index);
            valueIsFunction && (args[0] = value.call(this, index, self.html())), 
            domManip(self, args, callback, ignored);
        });
        if (l && (first = (fragment = buildFragment(args, collection[0].ownerDocument, !1, collection, ignored)).firstChild, 
        1 === fragment.childNodes.length && (fragment = first), first || ignored)) {
            for (hasScripts = (scripts = jQuery.map(getAll(fragment, "script"), disableScript)).length; i < l; i++) node = fragment, 
            i !== iNoClone && (node = jQuery.clone(node, !0, !0), hasScripts && jQuery.merge(scripts, getAll(node, "script"))), 
            callback.call(collection[i], node, i);
            if (hasScripts) for (doc = scripts[scripts.length - 1].ownerDocument, 
            jQuery.map(scripts, restoreScript), i = 0; i < hasScripts; i++) node = scripts[i], 
            rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery.contains(doc, node) && (node.src && "module" !== (node.type || "").toLowerCase() ? jQuery._evalUrl && !node.noModule && jQuery._evalUrl(node.src, {
                nonce: node.nonce || node.getAttribute("nonce")
            }, doc) : DOMEval(node.textContent.replace(rcleanScript, ""), node, doc));
        }
        return collection;
    }
    function remove(elem, selector, keepData) {
        for (var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0; null != (node = nodes[i]); i++) keepData || 1 !== node.nodeType || jQuery.cleanData(getAll(node)), 
        node.parentNode && (keepData && isAttached(node) && setGlobalEval(getAll(node, "script")), 
        node.parentNode.removeChild(node));
        return elem;
    }
    jQuery.extend({
        htmlPrefilter: function(html) {
            return html;
        },
        clone: function(elem, dataAndEvents, deepDataAndEvents) {
            var i, l, srcElements, destElements, src, dest, nodeName, clone = elem.cloneNode(!0), inPage = isAttached(elem);
            if (!(support.noCloneChecked || 1 !== elem.nodeType && 11 !== elem.nodeType || jQuery.isXMLDoc(elem))) for (destElements = getAll(clone), 
            i = 0, l = (srcElements = getAll(elem)).length; i < l; i++) src = srcElements[i], 
            dest = destElements[i], nodeName = void 0, "input" === (nodeName = dest.nodeName.toLowerCase()) && rcheckableType.test(src.type) ? dest.checked = src.checked : "input" !== nodeName && "textarea" !== nodeName || (dest.defaultValue = src.defaultValue);
            if (dataAndEvents) if (deepDataAndEvents) for (srcElements = srcElements || getAll(elem), 
            destElements = destElements || getAll(clone), i = 0, l = srcElements.length; i < l; i++) cloneCopyEvent(srcElements[i], destElements[i]); else cloneCopyEvent(elem, clone);
            return 0 < (destElements = getAll(clone, "script")).length && setGlobalEval(destElements, !inPage && getAll(elem, "script")), 
            clone;
        },
        cleanData: function(elems) {
            for (var data, elem, type, special = jQuery.event.special, i = 0; void 0 !== (elem = elems[i]); i++) if (acceptData(elem)) {
                if (data = elem[dataPriv.expando]) {
                    if (data.events) for (type in data.events) special[type] ? jQuery.event.remove(elem, type) : jQuery.removeEvent(elem, type, data.handle);
                    elem[dataPriv.expando] = void 0;
                }
                elem[dataUser.expando] && (elem[dataUser.expando] = void 0);
            }
        }
    }), jQuery.fn.extend({
        detach: function(selector) {
            return remove(this, selector, !0);
        },
        remove: function(selector) {
            return remove(this, selector);
        },
        text: function(value) {
            return access(this, function(value) {
                return void 0 === value ? jQuery.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = value);
                });
            }, null, value, arguments.length);
        },
        append: function() {
            return domManip(this, arguments, function(elem) {
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || manipulationTarget(this, elem).appendChild(elem);
            });
        },
        prepend: function() {
            return domManip(this, arguments, function(elem) {
                var target;
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (target = manipulationTarget(this, elem)).insertBefore(elem, target.firstChild);
            });
        },
        before: function() {
            return domManip(this, arguments, function(elem) {
                this.parentNode && this.parentNode.insertBefore(elem, this);
            });
        },
        after: function() {
            return domManip(this, arguments, function(elem) {
                this.parentNode && this.parentNode.insertBefore(elem, this.nextSibling);
            });
        },
        empty: function() {
            for (var elem, i = 0; null != (elem = this[i]); i++) 1 === elem.nodeType && (jQuery.cleanData(getAll(elem, !1)), 
            elem.textContent = "");
            return this;
        },
        clone: function(dataAndEvents, deepDataAndEvents) {
            return dataAndEvents = null != dataAndEvents && dataAndEvents, deepDataAndEvents = null == deepDataAndEvents ? dataAndEvents : deepDataAndEvents, 
            this.map(function() {
                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
            });
        },
        html: function(value) {
            return access(this, function(value) {
                var elem = this[0] || {}, i = 0, l = this.length;
                if (void 0 === value && 1 === elem.nodeType) return elem.innerHTML;
                if ("string" == typeof value && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [ "", "" ])[1].toLowerCase()]) {
                    value = jQuery.htmlPrefilter(value);
                    try {
                        for (;i < l; i++) 1 === (elem = this[i] || {}).nodeType && (jQuery.cleanData(getAll(elem, !1)), 
                        elem.innerHTML = value);
                        elem = 0;
                    } catch (e) {}
                }
                elem && this.empty().append(value);
            }, null, value, arguments.length);
        },
        replaceWith: function() {
            var ignored = [];
            return domManip(this, arguments, function(elem) {
                var parent = this.parentNode;
                jQuery.inArray(this, ignored) < 0 && (jQuery.cleanData(getAll(this)), 
                parent && parent.replaceChild(elem, this));
            }, ignored);
        }
    }), jQuery.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(name, original) {
        jQuery.fn[name] = function(selector) {
            for (var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0; i <= last; i++) elems = i === last ? this : this.clone(!0), 
            jQuery(insert[i])[original](elems), push.apply(ret, elems.get());
            return this.pushStack(ret);
        };
    });
    function getStyles(elem) {
        var view = elem.ownerDocument.defaultView;
        return (view = view && view.opener ? view : window).getComputedStyle(elem);
    }
    function swap(elem, options, callback) {
        var name, old = {};
        for (name in options) old[name] = elem.style[name], elem.style[name] = options[name];
        for (name in callback = callback.call(elem), options) elem.style[name] = old[name];
        return callback;
    }
    var rnumnonpx = new RegExp("^(" + Sizzle + ")(?!px)[a-z%]+$", "i"), rboxStyle = new RegExp(cssExpand.join("|"), "i");
    function curCSS(elem, name, computed) {
        var maxWidth, ret, style = elem.style;
        return (computed = computed || getStyles(elem)) && ("" !== (ret = computed.getPropertyValue(name) || computed[name]) || isAttached(elem) || (ret = jQuery.style(elem, name)), 
        !support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name) && (elem = style.width, 
        name = style.minWidth, maxWidth = style.maxWidth, style.minWidth = style.maxWidth = style.width = ret, 
        ret = computed.width, style.width = elem, style.minWidth = name, style.maxWidth = maxWidth)), 
        void 0 !== ret ? ret + "" : ret;
    }
    function addGetHookIf(conditionFn, hookFn) {
        return {
            get: function() {
                if (!conditionFn()) return (this.get = hookFn).apply(this, arguments);
                delete this.get;
            }
        };
    }
    !function() {
        function computeStyleTests() {
            var divStyle;
            div && (container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", 
            div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", 
            documentElement.appendChild(container).appendChild(div), divStyle = window.getComputedStyle(div), 
            pixelPositionVal = "1%" !== divStyle.top, reliableMarginLeftVal = 12 === roundPixelMeasures(divStyle.marginLeft), 
            div.style.right = "60%", pixelBoxStylesVal = 36 === roundPixelMeasures(divStyle.right), 
            boxSizingReliableVal = 36 === roundPixelMeasures(divStyle.width), div.style.position = "absolute", 
            scrollboxSizeVal = 12 === roundPixelMeasures(div.offsetWidth / 3), documentElement.removeChild(container), 
            div = null);
        }
        function roundPixelMeasures(measure) {
            return Math.round(parseFloat(measure));
        }
        var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal, reliableTrDimensionsVal, reliableMarginLeftVal, container = document.createElement("div"), div = document.createElement("div");
        div.style && (div.style.backgroundClip = "content-box", div.cloneNode(!0).style.backgroundClip = "", 
        support.clearCloneStyle = "content-box" === div.style.backgroundClip, jQuery.extend(support, {
            boxSizingReliable: function() {
                return computeStyleTests(), boxSizingReliableVal;
            },
            pixelBoxStyles: function() {
                return computeStyleTests(), pixelBoxStylesVal;
            },
            pixelPosition: function() {
                return computeStyleTests(), pixelPositionVal;
            },
            reliableMarginLeft: function() {
                return computeStyleTests(), reliableMarginLeftVal;
            },
            scrollboxSize: function() {
                return computeStyleTests(), scrollboxSizeVal;
            },
            reliableTrDimensions: function() {
                var table, tr, trChild;
                return null == reliableTrDimensionsVal && (table = document.createElement("table"), 
                tr = document.createElement("tr"), trChild = document.createElement("div"), 
                table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", 
                tr.style.cssText = "border:1px solid", tr.style.height = "1px", 
                trChild.style.height = "9px", trChild.style.display = "block", documentElement.appendChild(table).appendChild(tr).appendChild(trChild), 
                trChild = window.getComputedStyle(tr), reliableTrDimensionsVal = parseInt(trChild.height, 10) + parseInt(trChild.borderTopWidth, 10) + parseInt(trChild.borderBottomWidth, 10) === tr.offsetHeight, 
                documentElement.removeChild(table)), reliableTrDimensionsVal;
            }
        }));
    }();
    var cssPrefixes = [ "Webkit", "Moz", "ms" ], emptyStyle = document.createElement("div").style, vendorProps = {};
    function finalPropName(name) {
        var final = jQuery.cssProps[name] || vendorProps[name];
        return final || (name in emptyStyle ? name : vendorProps[name] = function(name) {
            for (var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length; i--; ) if ((name = cssPrefixes[i] + capName) in emptyStyle) return name;
        }(name) || name);
    }
    var rdisplayswap = /^(none|table(?!-c[ea]).+)/, rcustomProp = /^--/, cssShow = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, cssNormalTransform = {
        letterSpacing: "0",
        fontWeight: "400"
    };
    function setPositiveNumber(_elem, value, subtract) {
        var matches = rcssNum.exec(value);
        return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px") : value;
    }
    function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
        var i = "width" === dimension ? 1 : 0, extra = 0, delta = 0;
        if (box === (isBorderBox ? "border" : "content")) return 0;
        for (;i < 4; i += 2) "margin" === box && (delta += jQuery.css(elem, box + cssExpand[i], !0, styles)), 
        isBorderBox ? ("content" === box && (delta -= jQuery.css(elem, "padding" + cssExpand[i], !0, styles)), 
        "margin" !== box && (delta -= jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles))) : (delta += jQuery.css(elem, "padding" + cssExpand[i], !0, styles), 
        "padding" !== box ? delta += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles) : extra += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles));
        return !isBorderBox && 0 <= computedVal && (delta += Math.max(0, Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - .5)) || 0), 
        delta;
    }
    function getWidthOrHeight(elem, dimension, extra) {
        var styles = getStyles(elem), isBorderBox = (!support.boxSizingReliable() || extra) && "border-box" === jQuery.css(elem, "boxSizing", !1, styles), valueIsBorderBox = isBorderBox, val = curCSS(elem, dimension, styles), offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);
        if (rnumnonpx.test(val)) {
            if (!extra) return val;
            val = "auto";
        }
        return (!support.boxSizingReliable() && isBorderBox || !support.reliableTrDimensions() && nodeName(elem, "tr") || "auto" === val || !parseFloat(val) && "inline" === jQuery.css(elem, "display", !1, styles)) && elem.getClientRects().length && (isBorderBox = "border-box" === jQuery.css(elem, "boxSizing", !1, styles), 
        (valueIsBorderBox = offsetProp in elem) && (val = elem[offsetProp])), (val = parseFloat(val) || 0) + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles, val) + "px";
    }
    function Tween(elem, options, prop, end, easing) {
        return new Tween.prototype.init(elem, options, prop, end, easing);
    }
    jQuery.extend({
        cssHooks: {
            opacity: {
                get: function(elem, computed) {
                    if (computed) return "" === (computed = curCSS(elem, "opacity")) ? "1" : computed;
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            gridArea: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnStart: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowStart: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {},
        style: function(elem, name, value, extra) {
            if (elem && 3 !== elem.nodeType && 8 !== elem.nodeType && elem.style) {
                var ret, type, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;
                if (isCustomProp || (name = finalPropName(origName)), hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName], 
                void 0 === value) return hooks && "get" in hooks && void 0 !== (ret = hooks.get(elem, !1, extra)) ? ret : style[name];
                "string" === (type = typeof value) && (ret = rcssNum.exec(value)) && ret[1] && (value = adjustCSS(elem, name, ret), 
                type = "number"), null != value && value == value && ("number" !== type || isCustomProp || (value += ret && ret[3] || (jQuery.cssNumber[origName] ? "" : "px")), 
                support.clearCloneStyle || "" !== value || 0 !== name.indexOf("background") || (style[name] = "inherit"), 
                hooks && "set" in hooks && void 0 === (value = hooks.set(elem, value, extra)) || (isCustomProp ? style.setProperty(name, value) : style[name] = value));
            }
        },
        css: function(elem, name, extra, styles) {
            var val, origName = camelCase(name);
            return rcustomProp.test(name) || (name = finalPropName(origName)), "normal" === (val = void 0 === (val = (origName = jQuery.cssHooks[name] || jQuery.cssHooks[origName]) && "get" in origName ? origName.get(elem, !0, extra) : val) ? curCSS(elem, name, styles) : val) && name in cssNormalTransform && (val = cssNormalTransform[name]), 
            "" === extra || extra ? (origName = parseFloat(val), !0 === extra || isFinite(origName) ? origName || 0 : val) : val;
        }
    }), jQuery.each([ "height", "width" ], function(_i, dimension) {
        jQuery.cssHooks[dimension] = {
            get: function(elem, computed, extra) {
                if (computed) return !rdisplayswap.test(jQuery.css(elem, "display")) || elem.getClientRects().length && elem.getBoundingClientRect().width ? getWidthOrHeight(elem, dimension, extra) : swap(elem, cssShow, function() {
                    return getWidthOrHeight(elem, dimension, extra);
                });
            },
            set: function(elem, value, extra) {
                var styles = getStyles(elem), scrollboxSizeBuggy = !support.scrollboxSize() && "absolute" === styles.position, isBorderBox = (scrollboxSizeBuggy || extra) && "border-box" === jQuery.css(elem, "boxSizing", !1, styles), extra = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;
                return isBorderBox && scrollboxSizeBuggy && (extra -= Math.ceil(elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", !1, styles) - .5)), 
                extra && (isBorderBox = rcssNum.exec(value)) && "px" !== (isBorderBox[3] || "px") && (elem.style[dimension] = value, 
                value = jQuery.css(elem, dimension)), setPositiveNumber(0, value, extra);
            }
        };
    }), jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {
        if (computed) return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, {
            marginLeft: 0
        }, function() {
            return elem.getBoundingClientRect().left;
        })) + "px";
    }), jQuery.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(prefix, suffix) {
        jQuery.cssHooks[prefix + suffix] = {
            expand: function(value) {
                for (var i = 0, expanded = {}, parts = "string" == typeof value ? value.split(" ") : [ value ]; i < 4; i++) expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                return expanded;
            }
        }, "margin" !== prefix && (jQuery.cssHooks[prefix + suffix].set = setPositiveNumber);
    }), jQuery.fn.extend({
        css: function(name, value) {
            return access(this, function(elem, name, value) {
                var styles, len, map = {}, i = 0;
                if (Array.isArray(name)) {
                    for (styles = getStyles(elem), len = name.length; i < len; i++) map[name[i]] = jQuery.css(elem, name[i], !1, styles);
                    return map;
                }
                return void 0 !== value ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
            }, name, value, 1 < arguments.length);
        }
    }), ((jQuery.Tween = Tween).prototype = {
        constructor: Tween,
        init: function(elem, options, prop, end, easing, unit) {
            this.elem = elem, this.prop = prop, this.easing = easing || jQuery.easing._default, 
            this.options = options, this.start = this.now = this.cur(), this.end = end, 
            this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
        },
        cur: function() {
            var hooks = Tween.propHooks[this.prop];
            return (hooks && hooks.get ? hooks : Tween.propHooks._default).get(this);
        },
        run: function(percent) {
            var eased, hooks = Tween.propHooks[this.prop];
            return this.options.duration ? this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration) : this.pos = eased = percent, 
            this.now = (this.end - this.start) * eased + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), 
            (hooks && hooks.set ? hooks : Tween.propHooks._default).set(this), this;
        }
    }).init.prototype = Tween.prototype, (Tween.propHooks = {
        _default: {
            get: function(tween) {
                return 1 !== tween.elem.nodeType || null != tween.elem[tween.prop] && null == tween.elem.style[tween.prop] ? tween.elem[tween.prop] : (tween = jQuery.css(tween.elem, tween.prop, "")) && "auto" !== tween ? tween : 0;
            },
            set: function(tween) {
                jQuery.fx.step[tween.prop] ? jQuery.fx.step[tween.prop](tween) : 1 !== tween.elem.nodeType || !jQuery.cssHooks[tween.prop] && null == tween.elem.style[finalPropName(tween.prop)] ? tween.elem[tween.prop] = tween.now : jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
            }
        }
    }).scrollTop = Tween.propHooks.scrollLeft = {
        set: function(tween) {
            tween.elem.nodeType && tween.elem.parentNode && (tween.elem[tween.prop] = tween.now);
        }
    }, jQuery.easing = {
        linear: function(p) {
            return p;
        },
        swing: function(p) {
            return .5 - Math.cos(p * Math.PI) / 2;
        },
        _default: "swing"
    }, jQuery.fx = Tween.prototype.init, jQuery.fx.step = {};
    var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;
    function schedule() {
        inProgress && (!1 === document.hidden && window.requestAnimationFrame ? window.requestAnimationFrame(schedule) : window.setTimeout(schedule, jQuery.fx.interval), 
        jQuery.fx.tick());
    }
    function createFxNow() {
        return window.setTimeout(function() {
            fxNow = void 0;
        }), fxNow = Date.now();
    }
    function genFx(type, includeWidth) {
        var which, i = 0, attrs = {
            height: type
        };
        for (includeWidth = includeWidth ? 1 : 0; i < 4; i += 2 - includeWidth) attrs["margin" + (which = cssExpand[i])] = attrs["padding" + which] = type;
        return includeWidth && (attrs.opacity = attrs.width = type), attrs;
    }
    function createTween(value, prop, animation) {
        for (var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]), index = 0, length = collection.length; index < length; index++) if (tween = collection[index].call(animation, prop, value)) return tween;
    }
    function Animation(elem, properties, options) {
        var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always(function() {
            delete tick.elem;
        }), tick = function() {
            if (!stopped) {
                for (var currentTime = fxNow || createFxNow(), currentTime = Math.max(0, animation.startTime + animation.duration - currentTime), percent = 1 - (currentTime / animation.duration || 0), index = 0, length = animation.tweens.length; index < length; index++) animation.tweens[index].run(percent);
                if (deferred.notifyWith(elem, [ animation, percent, currentTime ]), 
                percent < 1 && length) return currentTime;
                length || deferred.notifyWith(elem, [ animation, 1, 0 ]), deferred.resolveWith(elem, [ animation ]);
            }
            return !1;
        }, animation = deferred.promise({
            elem: elem,
            props: jQuery.extend({}, properties),
            opts: jQuery.extend(!0, {
                specialEasing: {},
                easing: jQuery.easing._default
            }, options),
            originalProperties: properties,
            originalOptions: options,
            startTime: fxNow || createFxNow(),
            duration: options.duration,
            tweens: [],
            createTween: function(prop, end) {
                end = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                return animation.tweens.push(end), end;
            },
            stop: function(gotoEnd) {
                var index = 0, length = gotoEnd ? animation.tweens.length : 0;
                if (!stopped) {
                    for (stopped = !0; index < length; index++) animation.tweens[index].run(1);
                    gotoEnd ? (deferred.notifyWith(elem, [ animation, 1, 0 ]), deferred.resolveWith(elem, [ animation, gotoEnd ])) : deferred.rejectWith(elem, [ animation, gotoEnd ]);
                }
                return this;
            }
        }), props = animation.props;
        for (!function(props, specialEasing) {
            var index, name, easing, value, hooks;
            for (index in props) if (easing = specialEasing[name = camelCase(index)], 
            value = props[index], Array.isArray(value) && (easing = value[1], value = props[index] = value[0]), 
            index !== name && (props[name] = value, delete props[index]), (hooks = jQuery.cssHooks[name]) && "expand" in hooks) for (index in value = hooks.expand(value), 
            delete props[name], value) index in props || (props[index] = value[index], 
            specialEasing[index] = easing); else specialEasing[name] = easing;
        }(props, animation.opts.specialEasing); index < length; index++) if (result = Animation.prefilters[index].call(animation, elem, props, animation.opts)) return isFunction(result.stop) && (jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result)), 
        result;
        return jQuery.map(props, createTween, animation), isFunction(animation.opts.start) && animation.opts.start.call(elem, animation), 
        animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always), 
        jQuery.fx.timer(jQuery.extend(tick, {
            elem: elem,
            anim: animation,
            queue: animation.opts.queue
        })), animation;
    }
    jQuery.Animation = jQuery.extend(Animation, {
        tweeners: {
            "*": [ function(prop, value) {
                var tween = this.createTween(prop, value);
                return adjustCSS(tween.elem, prop, rcssNum.exec(value), tween), 
                tween;
            } ]
        },
        tweener: function(props, callback) {
            for (var prop, index = 0, length = (props = isFunction(props) ? (callback = props, 
            [ "*" ]) : props.match(rnothtmlwhite)).length; index < length; index++) prop = props[index], 
            Animation.tweeners[prop] = Animation.tweeners[prop] || [], Animation.tweeners[prop].unshift(callback);
        },
        prefilters: [ function(elem, props, opts) {
            var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, isBox = "width" in props || "height" in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, "fxshow");
            for (prop in opts.queue || (null == (hooks = jQuery._queueHooks(elem, "fx")).unqueued && (hooks.unqueued = 0, 
            oldfire = hooks.empty.fire, hooks.empty.fire = function() {
                hooks.unqueued || oldfire();
            }), hooks.unqueued++, anim.always(function() {
                anim.always(function() {
                    hooks.unqueued--, jQuery.queue(elem, "fx").length || hooks.empty.fire();
                });
            })), props) if (value = props[prop], rfxtypes.test(value)) {
                if (delete props[prop], toggle = toggle || "toggle" === value, value === (hidden ? "hide" : "show")) {
                    if ("show" !== value || !dataShow || void 0 === dataShow[prop]) continue;
                    hidden = !0;
                }
                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
            }
            if ((propTween = !jQuery.isEmptyObject(props)) || !jQuery.isEmptyObject(orig)) for (prop in isBox && 1 === elem.nodeType && (opts.overflow = [ style.overflow, style.overflowX, style.overflowY ], 
            null == (restoreDisplay = dataShow && dataShow.display) && (restoreDisplay = dataPriv.get(elem, "display")), 
            "none" === (isBox = jQuery.css(elem, "display")) && (restoreDisplay ? isBox = restoreDisplay : (showHide([ elem ], !0), 
            restoreDisplay = elem.style.display || restoreDisplay, isBox = jQuery.css(elem, "display"), 
            showHide([ elem ]))), ("inline" === isBox || "inline-block" === isBox && null != restoreDisplay) && "none" === jQuery.css(elem, "float") && (propTween || (anim.done(function() {
                style.display = restoreDisplay;
            }), null == restoreDisplay && (isBox = style.display, restoreDisplay = "none" === isBox ? "" : isBox)), 
            style.display = "inline-block")), opts.overflow && (style.overflow = "hidden", 
            anim.always(function() {
                style.overflow = opts.overflow[0], style.overflowX = opts.overflow[1], 
                style.overflowY = opts.overflow[2];
            })), propTween = !1, orig) propTween || (dataShow ? "hidden" in dataShow && (hidden = dataShow.hidden) : dataShow = dataPriv.access(elem, "fxshow", {
                display: restoreDisplay
            }), toggle && (dataShow.hidden = !hidden), hidden && showHide([ elem ], !0), 
            anim.done(function() {
                for (prop in hidden || showHide([ elem ]), dataPriv.remove(elem, "fxshow"), 
                orig) jQuery.style(elem, prop, orig[prop]);
            })), propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim), 
            prop in dataShow || (dataShow[prop] = propTween.start, hidden && (propTween.end = propTween.start, 
            propTween.start = 0));
        } ],
        prefilter: function(callback, prepend) {
            prepend ? Animation.prefilters.unshift(callback) : Animation.prefilters.push(callback);
        }
    }), jQuery.speed = function(speed, easing, fn) {
        var opt = speed && "object" == typeof speed ? jQuery.extend({}, speed) : {
            complete: fn || !fn && easing || isFunction(speed) && speed,
            duration: speed,
            easing: fn && easing || easing && !isFunction(easing) && easing
        };
        return jQuery.fx.off ? opt.duration = 0 : "number" != typeof opt.duration && (opt.duration in jQuery.fx.speeds ? opt.duration = jQuery.fx.speeds[opt.duration] : opt.duration = jQuery.fx.speeds._default), 
        null != opt.queue && !0 !== opt.queue || (opt.queue = "fx"), opt.old = opt.complete, 
        opt.complete = function() {
            isFunction(opt.old) && opt.old.call(this), opt.queue && jQuery.dequeue(this, opt.queue);
        }, opt;
    }, jQuery.fn.extend({
        fadeTo: function(speed, to, easing, callback) {
            return this.filter(isHiddenWithinTree).css("opacity", 0).show().end().animate({
                opacity: to
            }, speed, easing, callback);
        },
        animate: function(prop, speed, easing, callback) {
            function doAnimation() {
                var anim = Animation(this, jQuery.extend({}, prop), optall);
                (empty || dataPriv.get(this, "finish")) && anim.stop(!0);
            }
            var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback);
            return doAnimation.finish = doAnimation, empty || !1 === optall.queue ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
        },
        stop: function(type, clearQueue, gotoEnd) {
            function stopQueue(hooks) {
                var stop = hooks.stop;
                delete hooks.stop, stop(gotoEnd);
            }
            return "string" != typeof type && (gotoEnd = clearQueue, clearQueue = type, 
            type = void 0), clearQueue && this.queue(type || "fx", []), this.each(function() {
                var dequeue = !0, index = null != type && type + "queueHooks", timers = jQuery.timers, data = dataPriv.get(this);
                if (index) data[index] && data[index].stop && stopQueue(data[index]); else for (index in data) data[index] && data[index].stop && rrun.test(index) && stopQueue(data[index]);
                for (index = timers.length; index--; ) timers[index].elem !== this || null != type && timers[index].queue !== type || (timers[index].anim.stop(gotoEnd), 
                dequeue = !1, timers.splice(index, 1));
                !dequeue && gotoEnd || jQuery.dequeue(this, type);
            });
        },
        finish: function(type) {
            return !1 !== type && (type = type || "fx"), this.each(function() {
                var index, data = dataPriv.get(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"], timers = jQuery.timers, length = queue ? queue.length : 0;
                for (data.finish = !0, jQuery.queue(this, type, []), hooks && hooks.stop && hooks.stop.call(this, !0), 
                index = timers.length; index--; ) timers[index].elem === this && timers[index].queue === type && (timers[index].anim.stop(!0), 
                timers.splice(index, 1));
                for (index = 0; index < length; index++) queue[index] && queue[index].finish && queue[index].finish.call(this);
                delete data.finish;
            });
        }
    }), jQuery.each([ "toggle", "show", "hide" ], function(_i, name) {
        var cssFn = jQuery.fn[name];
        jQuery.fn[name] = function(speed, easing, callback) {
            return null == speed || "boolean" == typeof speed ? cssFn.apply(this, arguments) : this.animate(genFx(name, !0), speed, easing, callback);
        };
    }), jQuery.each({
        slideDown: genFx("show"),
        slideUp: genFx("hide"),
        slideToggle: genFx("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(name, props) {
        jQuery.fn[name] = function(speed, easing, callback) {
            return this.animate(props, speed, easing, callback);
        };
    }), jQuery.timers = [], jQuery.fx.tick = function() {
        var timer, i = 0, timers = jQuery.timers;
        for (fxNow = Date.now(); i < timers.length; i++) (timer = timers[i])() || timers[i] !== timer || timers.splice(i--, 1);
        timers.length || jQuery.fx.stop(), fxNow = void 0;
    }, jQuery.fx.timer = function(timer) {
        jQuery.timers.push(timer), jQuery.fx.start();
    }, jQuery.fx.interval = 13, jQuery.fx.start = function() {
        inProgress || (inProgress = !0, schedule());
    }, jQuery.fx.stop = function() {
        inProgress = null;
    }, jQuery.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, jQuery.fn.delay = function(time, type) {
        return time = jQuery.fx && jQuery.fx.speeds[time] || time, this.queue(type = type || "fx", function(next, hooks) {
            var timeout = window.setTimeout(next, time);
            hooks.stop = function() {
                window.clearTimeout(timeout);
            };
        });
    }, function() {
        var input = document.createElement("input"), opt = document.createElement("select").appendChild(document.createElement("option"));
        input.type = "checkbox", support.checkOn = "" !== input.value, support.optSelected = opt.selected, 
        (input = document.createElement("input")).value = "t", input.type = "radio", 
        support.radioValue = "t" === input.value;
    }();
    var boolHook, attrHandle = jQuery.expr.attrHandle, rfocusable = (jQuery.fn.extend({
        attr: function(name, value) {
            return access(this, jQuery.attr, name, value, 1 < arguments.length);
        },
        removeAttr: function(name) {
            return this.each(function() {
                jQuery.removeAttr(this, name);
            });
        }
    }), jQuery.extend({
        attr: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (3 !== nType && 8 !== nType && 2 !== nType) return void 0 === elem.getAttribute ? jQuery.prop(elem, name, value) : (1 === nType && jQuery.isXMLDoc(elem) || (hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : void 0)), 
            void 0 !== value ? null === value ? void jQuery.removeAttr(elem, name) : hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : (elem.setAttribute(name, value + ""), 
            value) : !(hooks && "get" in hooks && null !== (ret = hooks.get(elem, name))) && null == (ret = jQuery.find.attr(elem, name)) ? void 0 : ret);
        },
        attrHooks: {
            type: {
                set: function(elem, value) {
                    var val;
                    if (!support.radioValue && "radio" === value && nodeName(elem, "input")) return val = elem.value, 
                    elem.setAttribute("type", value), val && (elem.value = val), 
                    value;
                }
            }
        },
        removeAttr: function(elem, value) {
            var name, i = 0, attrNames = value && value.match(rnothtmlwhite);
            if (attrNames && 1 === elem.nodeType) for (;name = attrNames[i++]; ) elem.removeAttribute(name);
        }
    }), boolHook = {
        set: function(elem, value, name) {
            return !1 === value ? jQuery.removeAttr(elem, name) : elem.setAttribute(name, name), 
            name;
        }
    }, jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function(_i, name) {
        var getter = attrHandle[name] || jQuery.find.attr;
        attrHandle[name] = function(elem, name, isXML) {
            var ret, handle, lowercaseName = name.toLowerCase();
            return isXML || (handle = attrHandle[lowercaseName], attrHandle[lowercaseName] = ret, 
            ret = null != getter(elem, name, isXML) ? lowercaseName : null, attrHandle[lowercaseName] = handle), 
            ret;
        };
    }), /^(?:input|select|textarea|button)$/i), rclickable = /^(?:a|area)$/i;
    function stripAndCollapse(value) {
        return (value.match(rnothtmlwhite) || []).join(" ");
    }
    function getClass(elem) {
        return elem.getAttribute && elem.getAttribute("class") || "";
    }
    function classesToArray(value) {
        return Array.isArray(value) ? value : "string" == typeof value && value.match(rnothtmlwhite) || [];
    }
    jQuery.fn.extend({
        prop: function(name, value) {
            return access(this, jQuery.prop, name, value, 1 < arguments.length);
        },
        removeProp: function(name) {
            return this.each(function() {
                delete this[jQuery.propFix[name] || name];
            });
        }
    }), jQuery.extend({
        prop: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (3 !== nType && 8 !== nType && 2 !== nType) return 1 === nType && jQuery.isXMLDoc(elem) || (name = jQuery.propFix[name] || name, 
            hooks = jQuery.propHooks[name]), void 0 !== value ? hooks && "set" in hooks && void 0 !== (ret = hooks.set(elem, value, name)) ? ret : elem[name] = value : hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : elem[name];
        },
        propHooks: {
            tabIndex: {
                get: function(elem) {
                    var tabindex = jQuery.find.attr(elem, "tabindex");
                    return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1;
                }
            }
        },
        propFix: {
            for: "htmlFor",
            class: "className"
        }
    }), support.optSelected || (jQuery.propHooks.selected = {
        get: function(elem) {
            elem = elem.parentNode;
            return elem && elem.parentNode && elem.parentNode.selectedIndex, null;
        },
        set: function(elem) {
            elem = elem.parentNode;
            elem && (elem.selectedIndex, elem.parentNode && elem.parentNode.selectedIndex);
        }
    }), jQuery.each([ "tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable" ], function() {
        jQuery.propFix[this.toLowerCase()] = this;
    }), jQuery.fn.extend({
        addClass: function(value) {
            var classes, elem, cur, clazz, j, curValue, i = 0;
            if (isFunction(value)) return this.each(function(j) {
                jQuery(this).addClass(value.call(this, j, getClass(this)));
            });
            if ((classes = classesToArray(value)).length) for (;elem = this[i++]; ) if (curValue = getClass(elem), 
            cur = 1 === elem.nodeType && " " + stripAndCollapse(curValue) + " ") {
                for (j = 0; clazz = classes[j++]; ) cur.indexOf(" " + clazz + " ") < 0 && (cur += clazz + " ");
                curValue !== (curValue = stripAndCollapse(cur)) && elem.setAttribute("class", curValue);
            }
            return this;
        },
        removeClass: function(value) {
            var classes, elem, cur, clazz, j, curValue, i = 0;
            if (isFunction(value)) return this.each(function(j) {
                jQuery(this).removeClass(value.call(this, j, getClass(this)));
            });
            if (!arguments.length) return this.attr("class", "");
            if ((classes = classesToArray(value)).length) for (;elem = this[i++]; ) if (curValue = getClass(elem), 
            cur = 1 === elem.nodeType && " " + stripAndCollapse(curValue) + " ") {
                for (j = 0; clazz = classes[j++]; ) for (;-1 < cur.indexOf(" " + clazz + " "); ) cur = cur.replace(" " + clazz + " ", " ");
                curValue !== (curValue = stripAndCollapse(cur)) && elem.setAttribute("class", curValue);
            }
            return this;
        },
        toggleClass: function(value, stateVal) {
            var type = typeof value, isValidValue = "string" == type || Array.isArray(value);
            return "boolean" == typeof stateVal && isValidValue ? stateVal ? this.addClass(value) : this.removeClass(value) : isFunction(value) ? this.each(function(i) {
                jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
            }) : this.each(function() {
                var className, i, self, classNames;
                if (isValidValue) for (i = 0, self = jQuery(this), classNames = classesToArray(value); className = classNames[i++]; ) self.hasClass(className) ? self.removeClass(className) : self.addClass(className); else void 0 !== value && "boolean" != type || ((className = getClass(this)) && dataPriv.set(this, "__className__", className), 
                this.setAttribute && this.setAttribute("class", !className && !1 !== value && dataPriv.get(this, "__className__") || ""));
            });
        },
        hasClass: function(selector) {
            for (var elem, i = 0, className = " " + selector + " "; elem = this[i++]; ) if (1 === elem.nodeType && -1 < (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className)) return !0;
            return !1;
        }
    });
    function stopPropagationCallback(e) {
        e.stopPropagation();
    }
    var rreturn = /\r/g, rfocusMorph = (jQuery.fn.extend({
        val: function(value) {
            var hooks, ret, valueIsFunction, elem = this[0];
            return arguments.length ? (valueIsFunction = isFunction(value), this.each(function(i) {
                1 === this.nodeType && (null == (i = valueIsFunction ? value.call(this, i, jQuery(this).val()) : value) ? i = "" : "number" == typeof i ? i += "" : Array.isArray(i) && (i = jQuery.map(i, function(value) {
                    return null == value ? "" : value + "";
                })), (hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]) && "set" in hooks && void 0 !== hooks.set(this, i, "value") || (this.value = i));
            })) : elem ? (hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()]) && "get" in hooks && void 0 !== (ret = hooks.get(elem, "value")) ? ret : "string" == typeof (ret = elem.value) ? ret.replace(rreturn, "") : null == ret ? "" : ret : void 0;
        }
    }), jQuery.extend({
        valHooks: {
            option: {
                get: function(elem) {
                    var val = jQuery.find.attr(elem, "value");
                    return null != val ? val : stripAndCollapse(jQuery.text(elem));
                }
            },
            select: {
                get: function(elem) {
                    for (var option, options = elem.options, index = elem.selectedIndex, one = "select-one" === elem.type, values = one ? null : [], max = one ? index + 1 : options.length, i = index < 0 ? max : one ? index : 0; i < max; i++) if (((option = options[i]).selected || i === index) && !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
                        if (option = jQuery(option).val(), one) return option;
                        values.push(option);
                    }
                    return values;
                },
                set: function(elem, value) {
                    for (var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length; i--; ) ((option = options[i]).selected = -1 < jQuery.inArray(jQuery.valHooks.option.get(option), values)) && (optionSet = !0);
                    return optionSet || (elem.selectedIndex = -1), values;
                }
            }
        }
    }), jQuery.each([ "radio", "checkbox" ], function() {
        jQuery.valHooks[this] = {
            set: function(elem, value) {
                if (Array.isArray(value)) return elem.checked = -1 < jQuery.inArray(jQuery(elem).val(), value);
            }
        }, support.checkOn || (jQuery.valHooks[this].get = function(elem) {
            return null === elem.getAttribute("value") ? "on" : elem.value;
        });
    }), support.focusin = "onfocusin" in window, /^(?:focusinfocus|focusoutblur)$/), location = (jQuery.extend(jQuery.event, {
        trigger: function(event, data, elem, onlyHandlers) {
            var i, tmp, bubbleType, ontype, handle, special, lastElement, eventPath = [ elem || document ], type = hasOwn.call(event, "type") ? event.type : event, namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [], cur = lastElement = tmp = elem = elem || document;
            if (3 !== elem.nodeType && 8 !== elem.nodeType && !rfocusMorph.test(type + jQuery.event.triggered) && (-1 < type.indexOf(".") && (type = (namespaces = type.split(".")).shift(), 
            namespaces.sort()), ontype = type.indexOf(":") < 0 && "on" + type, (event = event[jQuery.expando] ? event : new jQuery.Event(type, "object" == typeof event && event)).isTrigger = onlyHandlers ? 2 : 3, 
            event.namespace = namespaces.join("."), event.rnamespace = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, 
            event.result = void 0, event.target || (event.target = elem), data = null == data ? [ event ] : jQuery.makeArray(data, [ event ]), 
            special = jQuery.event.special[type] || {}, onlyHandlers || !special.trigger || !1 !== special.trigger.apply(elem, data))) {
                if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
                    for (bubbleType = special.delegateType || type, rfocusMorph.test(bubbleType + type) || (cur = cur.parentNode); cur; cur = cur.parentNode) eventPath.push(cur), 
                    tmp = cur;
                    tmp === (elem.ownerDocument || document) && eventPath.push(tmp.defaultView || tmp.parentWindow || window);
                }
                for (i = 0; (cur = eventPath[i++]) && !event.isPropagationStopped(); ) lastElement = cur, 
                event.type = 1 < i ? bubbleType : special.bindType || type, (handle = (dataPriv.get(cur, "events") || Object.create(null))[event.type] && dataPriv.get(cur, "handle")) && handle.apply(cur, data), 
                (handle = ontype && cur[ontype]) && handle.apply && acceptData(cur) && (event.result = handle.apply(cur, data), 
                !1 === event.result && event.preventDefault());
                return event.type = type, onlyHandlers || event.isDefaultPrevented() || special._default && !1 !== special._default.apply(eventPath.pop(), data) || !acceptData(elem) || ontype && isFunction(elem[type]) && !isWindow(elem) && ((tmp = elem[ontype]) && (elem[ontype] = null), 
                jQuery.event.triggered = type, event.isPropagationStopped() && lastElement.addEventListener(type, stopPropagationCallback), 
                elem[type](), event.isPropagationStopped() && lastElement.removeEventListener(type, stopPropagationCallback), 
                jQuery.event.triggered = void 0, tmp && (elem[ontype] = tmp)), event.result;
            }
        },
        simulate: function(type, elem, event) {
            event = jQuery.extend(new jQuery.Event(), event, {
                type: type,
                isSimulated: !0
            });
            jQuery.event.trigger(event, null, elem);
        }
    }), jQuery.fn.extend({
        trigger: function(type, data) {
            return this.each(function() {
                jQuery.event.trigger(type, data, this);
            });
        },
        triggerHandler: function(type, data) {
            var elem = this[0];
            if (elem) return jQuery.event.trigger(type, data, elem, !0);
        }
    }), support.focusin || jQuery.each({
        focus: "focusin",
        blur: "focusout"
    }, function(orig, fix) {
        function handler(event) {
            jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
        }
        jQuery.event.special[fix] = {
            setup: function() {
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix);
                attaches || doc.addEventListener(orig, handler, !0), dataPriv.access(doc, fix, (attaches || 0) + 1);
            },
            teardown: function() {
                var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix) - 1;
                attaches ? dataPriv.access(doc, fix, attaches) : (doc.removeEventListener(orig, handler, !0), 
                dataPriv.remove(doc, fix));
            }
        };
    }), window.location), nonce = {
        guid: Date.now()
    }, rquery = /\?/, rbracket = (jQuery.parseXML = function(data) {
        var xml, parserErrorElem;
        if (!data || "string" != typeof data) return null;
        try {
            xml = new window.DOMParser().parseFromString(data, "text/xml");
        } catch (e) {}
        return parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0], 
        xml && !parserErrorElem || jQuery.error("Invalid XML: " + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function(el) {
            return el.textContent;
        }).join("\n") : data)), xml;
    }, /\[\]$/), rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
    jQuery.param = function(a, traditional) {
        function add(key, valueOrFunction) {
            valueOrFunction = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction, 
            s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(null == valueOrFunction ? "" : valueOrFunction);
        }
        var prefix, s = [];
        if (null == a) return "";
        if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) jQuery.each(a, function() {
            add(this.name, this.value);
        }); else for (prefix in a) !function buildParams(prefix, obj, traditional, add) {
            if (Array.isArray(obj)) jQuery.each(obj, function(i, v) {
                traditional || rbracket.test(prefix) ? add(prefix, v) : buildParams(prefix + "[" + ("object" == typeof v && null != v ? i : "") + "]", v, traditional, add);
            }); else if (traditional || "object" !== toType(obj)) add(prefix, obj); else for (var name in obj) buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
        }(prefix, a[prefix], traditional, add);
        return s.join("&");
    }, jQuery.fn.extend({
        serialize: function() {
            return jQuery.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                var elements = jQuery.prop(this, "elements");
                return elements ? jQuery.makeArray(elements) : this;
            }).filter(function() {
                var type = this.type;
                return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
            }).map(function(_i, elem) {
                var val = jQuery(this).val();
                return null == val ? null : Array.isArray(val) ? jQuery.map(val, function(val) {
                    return {
                        name: elem.name,
                        value: val.replace(rCRLF, "\r\n")
                    };
                }) : {
                    name: elem.name,
                    value: val.replace(rCRLF, "\r\n")
                };
            }).get();
        }
    });
    var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, prefilters = {}, transports = {}, allTypes = "*/".concat("*"), originAnchor = document.createElement("a");
    function addToPrefiltersOrTransports(structure) {
        return function(dataTypeExpression, func) {
            "string" != typeof dataTypeExpression && (func = dataTypeExpression, 
            dataTypeExpression = "*");
            var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
            if (isFunction(func)) for (;dataType = dataTypes[i++]; ) "+" === dataType[0] ? (dataType = dataType.slice(1) || "*", 
            (structure[dataType] = structure[dataType] || []).unshift(func)) : (structure[dataType] = structure[dataType] || []).push(func);
        };
    }
    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
        var inspected = {}, seekingTransport = structure === transports;
        function inspect(dataType) {
            var selected;
            return inspected[dataType] = !0, jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
                prefilterOrFactory = prefilterOrFactory(options, originalOptions, jqXHR);
                return "string" != typeof prefilterOrFactory || seekingTransport || inspected[prefilterOrFactory] ? seekingTransport ? !(selected = prefilterOrFactory) : void 0 : (options.dataTypes.unshift(prefilterOrFactory), 
                inspect(prefilterOrFactory), !1);
            }), selected;
        }
        return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
    }
    function ajaxExtend(target, src) {
        var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};
        for (key in src) void 0 !== src[key] && ((flatOptions[key] ? target : deep = deep || {})[key] = src[key]);
        return deep && jQuery.extend(!0, target, deep), target;
    }
    originAnchor.href = location.href, jQuery.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: location.href,
            type: "GET",
            isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(location.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": allTypes,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": JSON.parse,
                "text xml": jQuery.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(target, settings) {
            return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
        },
        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
        ajaxTransport: addToPrefiltersOrTransports(transports),
        ajax: function(url, options) {
            "object" == typeof url && (options = url, url = void 0);
            var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, completed, fireGlobals, i, s = jQuery.ajaxSetup({}, options = options || {}), callbackContext = s.context || s, globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event, deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks("once memory"), statusCode = s.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, strAbort = "canceled", jqXHR = {
                readyState: 0,
                getResponseHeader: function(key) {
                    var match;
                    if (completed) {
                        if (!responseHeaders) for (responseHeaders = {}; match = rheaders.exec(responseHeadersString); ) responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
                        match = responseHeaders[key.toLowerCase() + " "];
                    }
                    return null == match ? null : match.join(", ");
                },
                getAllResponseHeaders: function() {
                    return completed ? responseHeadersString : null;
                },
                setRequestHeader: function(name, value) {
                    return null == completed && (name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name, 
                    requestHeaders[name] = value), this;
                },
                overrideMimeType: function(type) {
                    return null == completed && (s.mimeType = type), this;
                },
                statusCode: function(map) {
                    if (map) if (completed) jqXHR.always(map[jqXHR.status]); else for (var code in map) statusCode[code] = [ statusCode[code], map[code] ];
                    return this;
                },
                abort: function(statusText) {
                    statusText = statusText || strAbort;
                    return transport && transport.abort(statusText), done(0, statusText), 
                    this;
                }
            };
            if (deferred.promise(jqXHR), s.url = ((url || s.url || location.href) + "").replace(rprotocol, location.protocol + "//"), 
            s.type = options.method || options.type || s.method || s.type, s.dataTypes = (s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [ "" ], 
            null == s.crossDomain) {
                url = document.createElement("a");
                try {
                    url.href = s.url, url.href = url.href, s.crossDomain = originAnchor.protocol + "//" + originAnchor.host != url.protocol + "//" + url.host;
                } catch (e) {
                    s.crossDomain = !0;
                }
            }
            if (s.data && s.processData && "string" != typeof s.data && (s.data = jQuery.param(s.data, s.traditional)), 
            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR), !completed) {
                for (i in (fireGlobals = jQuery.event && s.global) && 0 == jQuery.active++ && jQuery.event.trigger("ajaxStart"), 
                s.type = s.type.toUpperCase(), s.hasContent = !rnoContent.test(s.type), 
                cacheURL = s.url.replace(rhash, ""), s.hasContent ? s.data && s.processData && 0 === (s.contentType || "").indexOf("application/x-www-form-urlencoded") && (s.data = s.data.replace(r20, "+")) : (url = s.url.slice(cacheURL.length), 
                s.data && (s.processData || "string" == typeof s.data) && (cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s.data, 
                delete s.data), !1 === s.cache && (cacheURL = cacheURL.replace(rantiCache, "$1"), 
                url = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + url), 
                s.url = cacheURL + url), s.ifModified && (jQuery.lastModified[cacheURL] && jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]), 
                jQuery.etag[cacheURL] && jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL])), 
                (s.data && s.hasContent && !1 !== s.contentType || options.contentType) && jqXHR.setRequestHeader("Content-Type", s.contentType), 
                jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + ("*" !== s.dataTypes[0] ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]), 
                s.headers) jqXHR.setRequestHeader(i, s.headers[i]);
                if (s.beforeSend && (!1 === s.beforeSend.call(callbackContext, jqXHR, s) || completed)) return jqXHR.abort();
                if (strAbort = "abort", completeDeferred.add(s.complete), jqXHR.done(s.success), 
                jqXHR.fail(s.error), transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR)) {
                    if (jqXHR.readyState = 1, fireGlobals && globalEventContext.trigger("ajaxSend", [ jqXHR, s ]), 
                    completed) return jqXHR;
                    s.async && 0 < s.timeout && (timeoutTimer = window.setTimeout(function() {
                        jqXHR.abort("timeout");
                    }, s.timeout));
                    try {
                        completed = !1, transport.send(requestHeaders, done);
                    } catch (e) {
                        if (completed) throw e;
                        done(-1, e);
                    }
                } else done(-1, "No Transport");
            }
            return jqXHR;
            function done(status, nativeStatusText, responses, headers) {
                var success, error, response, statusText = nativeStatusText;
                completed || (completed = !0, timeoutTimer && window.clearTimeout(timeoutTimer), 
                transport = void 0, responseHeadersString = headers || "", jqXHR.readyState = 0 < status ? 4 : 0, 
                headers = 200 <= status && status < 300 || 304 === status, responses && (response = function(s, jqXHR, responses) {
                    for (var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes; "*" === dataTypes[0]; ) dataTypes.shift(), 
                    void 0 === ct && (ct = s.mimeType || jqXHR.getResponseHeader("Content-Type"));
                    if (ct) for (type in contents) if (contents[type] && contents[type].test(ct)) {
                        dataTypes.unshift(type);
                        break;
                    }
                    if (dataTypes[0] in responses) finalDataType = dataTypes[0]; else {
                        for (type in responses) {
                            if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                                finalDataType = type;
                                break;
                            }
                            firstDataType = firstDataType || type;
                        }
                        finalDataType = finalDataType || firstDataType;
                    }
                    if (finalDataType) return finalDataType !== dataTypes[0] && dataTypes.unshift(finalDataType), 
                    responses[finalDataType];
                }(s, jqXHR, responses)), !headers && -1 < jQuery.inArray("script", s.dataTypes) && jQuery.inArray("json", s.dataTypes) < 0 && (s.converters["text script"] = function() {}), 
                response = function(s, response, jqXHR, isSuccess) {
                    var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s.dataTypes.slice();
                    if (dataTypes[1]) for (conv in s.converters) converters[conv.toLowerCase()] = s.converters[conv];
                    for (current = dataTypes.shift(); current; ) if (s.responseFields[current] && (jqXHR[s.responseFields[current]] = response), 
                    !prev && isSuccess && s.dataFilter && (response = s.dataFilter(response, s.dataType)), 
                    prev = current, current = dataTypes.shift()) if ("*" === current) current = prev; else if ("*" !== prev && prev !== current) {
                        if (!(conv = converters[prev + " " + current] || converters["* " + current])) for (conv2 in converters) if ((tmp = conv2.split(" "))[1] === current && (conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]])) {
                            !0 === conv ? conv = converters[conv2] : !0 !== converters[conv2] && (current = tmp[0], 
                            dataTypes.unshift(tmp[1]));
                            break;
                        }
                        if (!0 !== conv) if (conv && s.throws) response = conv(response); else try {
                            response = conv(response);
                        } catch (e) {
                            return {
                                state: "parsererror",
                                error: conv ? e : "No conversion from " + prev + " to " + current
                            };
                        }
                    }
                    return {
                        state: "success",
                        data: response
                    };
                }(s, response, jqXHR, headers), headers ? (s.ifModified && ((responses = jqXHR.getResponseHeader("Last-Modified")) && (jQuery.lastModified[cacheURL] = responses), 
                (responses = jqXHR.getResponseHeader("etag")) && (jQuery.etag[cacheURL] = responses)), 
                204 === status || "HEAD" === s.type ? statusText = "nocontent" : 304 === status ? statusText = "notmodified" : (statusText = response.state, 
                success = response.data, headers = !(error = response.error))) : (error = statusText, 
                !status && statusText || (statusText = "error", status < 0 && (status = 0))), 
                jqXHR.status = status, jqXHR.statusText = (nativeStatusText || statusText) + "", 
                headers ? deferred.resolveWith(callbackContext, [ success, statusText, jqXHR ]) : deferred.rejectWith(callbackContext, [ jqXHR, statusText, error ]), 
                jqXHR.statusCode(statusCode), statusCode = void 0, fireGlobals && globalEventContext.trigger(headers ? "ajaxSuccess" : "ajaxError", [ jqXHR, s, headers ? success : error ]), 
                completeDeferred.fireWith(callbackContext, [ jqXHR, statusText ]), 
                fireGlobals && (globalEventContext.trigger("ajaxComplete", [ jqXHR, s ]), 
                --jQuery.active || jQuery.event.trigger("ajaxStop")));
            }
        },
        getJSON: function(url, data, callback) {
            return jQuery.get(url, data, callback, "json");
        },
        getScript: function(url, callback) {
            return jQuery.get(url, void 0, callback, "script");
        }
    }), jQuery.each([ "get", "post" ], function(_i, method) {
        jQuery[method] = function(url, data, callback, type) {
            return isFunction(data) && (type = type || callback, callback = data, 
            data = void 0), jQuery.ajax(jQuery.extend({
                url: url,
                type: method,
                dataType: type,
                data: data,
                success: callback
            }, jQuery.isPlainObject(url) && url));
        };
    }), jQuery.ajaxPrefilter(function(s) {
        for (var i in s.headers) "content-type" === i.toLowerCase() && (s.contentType = s.headers[i] || "");
    }), jQuery._evalUrl = function(url, options, doc) {
        return jQuery.ajax({
            url: url,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            converters: {
                "text script": function() {}
            },
            dataFilter: function(response) {
                jQuery.globalEval(response, options, doc);
            }
        });
    }, jQuery.fn.extend({
        wrapAll: function(html) {
            return this[0] && (isFunction(html) && (html = html.call(this[0])), 
            html = jQuery(html, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && html.insertBefore(this[0]), 
            html.map(function() {
                for (var elem = this; elem.firstElementChild; ) elem = elem.firstElementChild;
                return elem;
            }).append(this)), this;
        },
        wrapInner: function(html) {
            return isFunction(html) ? this.each(function(i) {
                jQuery(this).wrapInner(html.call(this, i));
            }) : this.each(function() {
                var self = jQuery(this), contents = self.contents();
                contents.length ? contents.wrapAll(html) : self.append(html);
            });
        },
        wrap: function(html) {
            var htmlIsFunction = isFunction(html);
            return this.each(function(i) {
                jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);
            });
        },
        unwrap: function(selector) {
            return this.parent(selector).not("body").each(function() {
                jQuery(this).replaceWith(this.childNodes);
            }), this;
        }
    }), jQuery.expr.pseudos.hidden = function(elem) {
        return !jQuery.expr.pseudos.visible(elem);
    }, jQuery.expr.pseudos.visible = function(elem) {
        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
    }, jQuery.ajaxSettings.xhr = function() {
        try {
            return new window.XMLHttpRequest();
        } catch (e) {}
    };
    var input, xhrSuccessStatus = {
        0: 200,
        1223: 204
    }, xhrSupported = jQuery.ajaxSettings.xhr(), oldCallbacks = (support.cors = !!xhrSupported && "withCredentials" in xhrSupported, 
    support.ajax = xhrSupported = !!xhrSupported, jQuery.ajaxTransport(function(options) {
        var callback, errorCallback;
        if (support.cors || xhrSupported && !options.crossDomain) return {
            send: function(headers, complete) {
                var i, xhr = options.xhr();
                if (xhr.open(options.type, options.url, options.async, options.username, options.password), 
                options.xhrFields) for (i in options.xhrFields) xhr[i] = options.xhrFields[i];
                for (i in options.mimeType && xhr.overrideMimeType && xhr.overrideMimeType(options.mimeType), 
                options.crossDomain || headers["X-Requested-With"] || (headers["X-Requested-With"] = "XMLHttpRequest"), 
                headers) xhr.setRequestHeader(i, headers[i]);
                callback = function(type) {
                    return function() {
                        callback && (callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null, 
                        "abort" === type ? xhr.abort() : "error" === type ? "number" != typeof xhr.status ? complete(0, "error") : complete(xhr.status, xhr.statusText) : complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, "text" !== (xhr.responseType || "text") || "string" != typeof xhr.responseText ? {
                            binary: xhr.response
                        } : {
                            text: xhr.responseText
                        }, xhr.getAllResponseHeaders()));
                    };
                }, xhr.onload = callback(), errorCallback = xhr.onerror = xhr.ontimeout = callback("error"), 
                void 0 !== xhr.onabort ? xhr.onabort = errorCallback : xhr.onreadystatechange = function() {
                    4 === xhr.readyState && window.setTimeout(function() {
                        callback && errorCallback();
                    });
                }, callback = callback("abort");
                try {
                    xhr.send(options.hasContent && options.data || null);
                } catch (e) {
                    if (callback) throw e;
                }
            },
            abort: function() {
                callback && callback();
            }
        };
    }), jQuery.ajaxPrefilter(function(s) {
        s.crossDomain && (s.contents.script = !1);
    }), jQuery.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(text) {
                return jQuery.globalEval(text), text;
            }
        }
    }), jQuery.ajaxPrefilter("script", function(s) {
        void 0 === s.cache && (s.cache = !1), s.crossDomain && (s.type = "GET");
    }), jQuery.ajaxTransport("script", function(s) {
        var script, callback;
        if (s.crossDomain || s.scriptAttrs) return {
            send: function(_, complete) {
                script = jQuery("<script>").attr(s.scriptAttrs || {}).prop({
                    charset: s.scriptCharset,
                    src: s.url
                }).on("load error", callback = function(evt) {
                    script.remove(), callback = null, evt && complete("error" === evt.type ? 404 : 200, evt.type);
                }), document.head.appendChild(script[0]);
            },
            abort: function() {
                callback && callback();
            }
        };
    }), []), rjsonp = /(=)\?(?=&|$)|\?\?/, rtrim = (jQuery.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce.guid++;
            return this[callback] = !0, callback;
        }
    }), jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
        var callbackName, overwritten, responseContainer, jsonProp = !1 !== s.jsonp && (rjsonp.test(s.url) ? "url" : "string" == typeof s.data && 0 === (s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(s.data) && "data");
        if (jsonProp || "jsonp" === s.dataTypes[0]) return callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback, 
        jsonProp ? s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName) : !1 !== s.jsonp && (s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName), 
        s.converters["script json"] = function() {
            return responseContainer || jQuery.error(callbackName + " was not called"), 
            responseContainer[0];
        }, s.dataTypes[0] = "json", overwritten = window[callbackName], window[callbackName] = function() {
            responseContainer = arguments;
        }, jqXHR.always(function() {
            void 0 === overwritten ? jQuery(window).removeProp(callbackName) : window[callbackName] = overwritten, 
            s[callbackName] && (s.jsonpCallback = originalSettings.jsonpCallback, 
            oldCallbacks.push(callbackName)), responseContainer && isFunction(overwritten) && overwritten(responseContainer[0]), 
            responseContainer = overwritten = void 0;
        }), "script";
    }), support.createHTMLDocument = ((input = document.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", 
    2 === input.childNodes.length), jQuery.parseHTML = function(data, context, keepScripts) {
        return "string" != typeof data ? [] : ("boolean" == typeof context && (keepScripts = context, 
        context = !1), context || (support.createHTMLDocument ? ((base = (context = document.implementation.createHTMLDocument("")).createElement("base")).href = document.location.href, 
        context.head.appendChild(base)) : context = document), base = !keepScripts && [], 
        (keepScripts = rsingleTag.exec(data)) ? [ context.createElement(keepScripts[1]) ] : (keepScripts = buildFragment([ data ], context, base), 
        base && base.length && jQuery(base).remove(), jQuery.merge([], keepScripts.childNodes)));
        var base;
    }, jQuery.fn.load = function(url, params, callback) {
        var selector, type, response, self = this, off = url.indexOf(" ");
        return -1 < off && (selector = stripAndCollapse(url.slice(off)), url = url.slice(0, off)), 
        isFunction(params) ? (callback = params, params = void 0) : params && "object" == typeof params && (type = "POST"), 
        0 < self.length && jQuery.ajax({
            url: url,
            type: type || "GET",
            dataType: "html",
            data: params
        }).done(function(responseText) {
            response = arguments, self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText);
        }).always(callback && function(jqXHR, status) {
            self.each(function() {
                callback.apply(this, response || [ jqXHR.responseText, status, jqXHR ]);
            });
        }), this;
    }, jQuery.expr.pseudos.animated = function(elem) {
        return jQuery.grep(jQuery.timers, function(fn) {
            return elem === fn.elem;
        }).length;
    }, jQuery.offset = {
        setOffset: function(elem, options, i) {
            var curCSSTop, curTop, curOffset, curCSSLeft, position = jQuery.css(elem, "position"), curElem = jQuery(elem), props = {};
            "static" === position && (elem.style.position = "relative"), curOffset = curElem.offset(), 
            curCSSTop = jQuery.css(elem, "top"), curCSSLeft = jQuery.css(elem, "left"), 
            position = ("absolute" === position || "fixed" === position) && -1 < (curCSSTop + curCSSLeft).indexOf("auto") ? (curTop = (position = curElem.position()).top, 
            position.left) : (curTop = parseFloat(curCSSTop) || 0, parseFloat(curCSSLeft) || 0), 
            null != (options = isFunction(options) ? options.call(elem, i, jQuery.extend({}, curOffset)) : options).top && (props.top = options.top - curOffset.top + curTop), 
            null != options.left && (props.left = options.left - curOffset.left + position), 
            "using" in options ? options.using.call(elem, props) : curElem.css(props);
        }
    }, jQuery.fn.extend({
        offset: function(options) {
            if (arguments.length) return void 0 === options ? this : this.each(function(i) {
                jQuery.offset.setOffset(this, options, i);
            });
            var rect, elem = this[0];
            return elem ? elem.getClientRects().length ? (rect = elem.getBoundingClientRect(), 
            elem = elem.ownerDocument.defaultView, {
                top: rect.top + elem.pageYOffset,
                left: rect.left + elem.pageXOffset
            }) : {
                top: 0,
                left: 0
            } : void 0;
        },
        position: function() {
            if (this[0]) {
                var offsetParent, offset, doc, elem = this[0], parentOffset = {
                    top: 0,
                    left: 0
                };
                if ("fixed" === jQuery.css(elem, "position")) offset = elem.getBoundingClientRect(); else {
                    for (offset = this.offset(), doc = elem.ownerDocument, offsetParent = elem.offsetParent || doc.documentElement; offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && "static" === jQuery.css(offsetParent, "position"); ) offsetParent = offsetParent.parentNode;
                    offsetParent && offsetParent !== elem && 1 === offsetParent.nodeType && ((parentOffset = jQuery(offsetParent).offset()).top += jQuery.css(offsetParent, "borderTopWidth", !0), 
                    parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", !0));
                }
                return {
                    top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", !0),
                    left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", !0)
                };
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var offsetParent = this.offsetParent; offsetParent && "static" === jQuery.css(offsetParent, "position"); ) offsetParent = offsetParent.offsetParent;
                return offsetParent || documentElement;
            });
        }
    }), jQuery.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(method, prop) {
        var top = "pageYOffset" === prop;
        jQuery.fn[method] = function(val) {
            return access(this, function(elem, method, val) {
                var win;
                if (isWindow(elem) ? win = elem : 9 === elem.nodeType && (win = elem.defaultView), 
                void 0 === val) return win ? win[prop] : elem[method];
                win ? win.scrollTo(top ? win.pageXOffset : val, top ? val : win.pageYOffset) : elem[method] = val;
            }, method, val, arguments.length);
        };
    }), jQuery.each([ "top", "left" ], function(_i, prop) {
        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {
            if (computed) return computed = curCSS(elem, prop), rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
        });
    }), jQuery.each({
        Height: "height",
        Width: "width"
    }, function(name, type) {
        jQuery.each({
            padding: "inner" + name,
            content: type,
            "": "outer" + name
        }, function(defaultExtra, funcName) {
            jQuery.fn[funcName] = function(margin, value) {
                var chainable = arguments.length && (defaultExtra || "boolean" != typeof margin), extra = defaultExtra || (!0 === margin || !0 === value ? "margin" : "border");
                return access(this, function(elem, type, value) {
                    var doc;
                    return isWindow(elem) ? 0 === funcName.indexOf("outer") ? elem["inner" + name] : elem.document.documentElement["client" + name] : 9 === elem.nodeType ? (doc = elem.documentElement, 
                    Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name])) : void 0 === value ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
                }, type, chainable ? margin : void 0, chainable);
            };
        });
    }), jQuery.each([ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function(_i, type) {
        jQuery.fn[type] = function(fn) {
            return this.on(type, fn);
        };
    }), jQuery.fn.extend({
        bind: function(types, data, fn) {
            return this.on(types, null, data, fn);
        },
        unbind: function(types, fn) {
            return this.off(types, null, fn);
        },
        delegate: function(selector, types, data, fn) {
            return this.on(types, selector, data, fn);
        },
        undelegate: function(selector, types, fn) {
            return 1 === arguments.length ? this.off(selector, "**") : this.off(types, selector || "**", fn);
        },
        hover: function(fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
        }
    }), jQuery.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(_i, name) {
        jQuery.fn[name] = function(data, fn) {
            return 0 < arguments.length ? this.on(name, null, data, fn) : this.trigger(name);
        };
    }), /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g), _jQuery = (jQuery.proxy = function(fn, context) {
        var args, tmp;
        if ("string" == typeof context && (tmp = fn[context], context = fn, fn = tmp), 
        isFunction(fn)) return args = slice.call(arguments, 2), (tmp = function() {
            return fn.apply(context || this, args.concat(slice.call(arguments)));
        }).guid = fn.guid = fn.guid || jQuery.guid++, tmp;
    }, jQuery.holdReady = function(hold) {
        hold ? jQuery.readyWait++ : jQuery.ready(!0);
    }, jQuery.isArray = Array.isArray, jQuery.parseJSON = JSON.parse, jQuery.nodeName = nodeName, 
    jQuery.isFunction = isFunction, jQuery.isWindow = isWindow, jQuery.camelCase = camelCase, 
    jQuery.type = toType, jQuery.now = Date.now, jQuery.isNumeric = function(obj) {
        var type = jQuery.type(obj);
        return ("number" === type || "string" === type) && !isNaN(obj - parseFloat(obj));
    }, jQuery.trim = function(text) {
        return null == text ? "" : (text + "").replace(rtrim, "");
    }, "function" == typeof define && define.amd && define("jquery", [], function() {
        return jQuery;
    }), window.jQuery), _$ = window.$;
    return jQuery.noConflict = function(deep) {
        return window.$ === jQuery && (window.$ = _$), deep && window.jQuery === jQuery && (window.jQuery = _jQuery), 
        jQuery;
    }, void 0 === noGlobal && (window.jQuery = window.$ = jQuery), jQuery;
}), function(factory) {
    "use strict";
    "function" == typeof define && define.amd ? define([ "jquery" ], factory) : "undefined" != typeof exports ? module.exports = factory(require("jquery")) : factory(jQuery);
}(function($) {
    "use strict";
    var instanceUid, Slick = window.Slick || {};
    instanceUid = 0, (Slick = function(element, settings) {
        var _ = this;
        _.defaults = {
            accessibility: !0,
            adaptiveHeight: !1,
            appendArrows: $(element),
            appendDots: $(element),
            arrows: !0,
            asNavFor: null,
            prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
            nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
            autoplay: !1,
            autoplaySpeed: 3e3,
            centerMode: !1,
            centerPadding: "50px",
            cssEase: "ease",
            customPaging: function(slider, i) {
                return $('<button type="button" />').text(i + 1);
            },
            dots: !1,
            dotsClass: "slick-dots",
            draggable: !0,
            easing: "linear",
            edgeFriction: .35,
            fade: !1,
            focusOnSelect: !1,
            focusOnChange: !1,
            infinite: !0,
            initialSlide: 0,
            lazyLoad: "ondemand",
            mobileFirst: !1,
            pauseOnHover: !0,
            pauseOnFocus: !0,
            pauseOnDotsHover: !1,
            respondTo: "window",
            responsive: null,
            rows: 1,
            rtl: !1,
            slide: "",
            slidesPerRow: 1,
            slidesToShow: 1,
            slidesToScroll: 1,
            speed: 500,
            swipe: !0,
            swipeToSlide: !1,
            touchMove: !0,
            touchThreshold: 5,
            useCSS: !0,
            useTransform: !0,
            variableWidth: !1,
            vertical: !1,
            verticalSwiping: !1,
            waitForAnimate: !0,
            zIndex: 1e3
        }, _.initials = {
            animating: !1,
            dragging: !1,
            autoPlayTimer: null,
            currentDirection: 0,
            currentLeft: null,
            currentSlide: 0,
            direction: 1,
            $dots: null,
            listWidth: null,
            listHeight: null,
            loadIndex: 0,
            $nextArrow: null,
            $prevArrow: null,
            scrolling: !1,
            slideCount: null,
            slideWidth: null,
            $slideTrack: null,
            $slides: null,
            sliding: !1,
            slideOffset: 0,
            swipeLeft: null,
            swiping: !1,
            $list: null,
            touchObject: {},
            transformsEnabled: !1,
            unslicked: !1
        }, $.extend(_, _.initials), _.activeBreakpoint = null, _.animType = null, 
        _.animProp = null, _.breakpoints = [], _.breakpointSettings = [], _.cssTransitions = !1, 
        _.focussed = !1, _.interrupted = !1, _.hidden = "hidden", _.paused = !0, 
        _.positionProp = null, _.respondTo = null, _.rowCount = 1, _.shouldClick = !0, 
        _.$slider = $(element), _.$slidesCache = null, _.transformType = null, _.transitionType = null, 
        _.visibilityChange = "visibilitychange", _.windowWidth = 0, _.windowTimer = null, 
        element = $(element).data("slick") || {}, _.options = $.extend({}, _.defaults, settings, element), 
        _.currentSlide = _.options.initialSlide, _.originalSettings = _.options, 
        void 0 !== document.mozHidden ? (_.hidden = "mozHidden", _.visibilityChange = "mozvisibilitychange") : void 0 !== document.webkitHidden && (_.hidden = "webkitHidden", 
        _.visibilityChange = "webkitvisibilitychange"), _.autoPlay = $.proxy(_.autoPlay, _), 
        _.autoPlayClear = $.proxy(_.autoPlayClear, _), _.autoPlayIterator = $.proxy(_.autoPlayIterator, _), 
        _.changeSlide = $.proxy(_.changeSlide, _), _.clickHandler = $.proxy(_.clickHandler, _), 
        _.selectHandler = $.proxy(_.selectHandler, _), _.setPosition = $.proxy(_.setPosition, _), 
        _.swipeHandler = $.proxy(_.swipeHandler, _), _.dragHandler = $.proxy(_.dragHandler, _), 
        _.keyHandler = $.proxy(_.keyHandler, _), _.instanceUid = instanceUid++, 
        _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, _.registerBreakpoints(), _.init(!0);
    }).prototype.activateADA = function() {
        this.$slideTrack.find(".slick-active").attr({
            "aria-hidden": "false"
        }).find("a, input, button, select").attr({
            tabindex: "0"
        });
    }, Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {
        var _ = this;
        if ("boolean" == typeof index) addBefore = index, index = null; else if (index < 0 || index >= _.slideCount) return !1;
        _.unload(), "number" == typeof index ? 0 === index && 0 === _.$slides.length ? $(markup).appendTo(_.$slideTrack) : addBefore ? $(markup).insertBefore(_.$slides.eq(index)) : $(markup).insertAfter(_.$slides.eq(index)) : !0 === addBefore ? $(markup).prependTo(_.$slideTrack) : $(markup).appendTo(_.$slideTrack), 
        _.$slides = _.$slideTrack.children(this.options.slide), _.$slideTrack.children(this.options.slide).detach(), 
        _.$slideTrack.append(_.$slides), _.$slides.each(function(index, element) {
            $(element).attr("data-slick-index", index);
        }), _.$slidesCache = _.$slides, _.reinit();
    }, Slick.prototype.animateHeight = function() {
        var targetHeight, _ = this;
        1 === _.options.slidesToShow && !0 === _.options.adaptiveHeight && !1 === _.options.vertical && (targetHeight = _.$slides.eq(_.currentSlide).outerHeight(!0), 
        _.$list.animate({
            height: targetHeight
        }, _.options.speed));
    }, Slick.prototype.animateSlide = function(targetLeft, callback) {
        var animProps = {}, _ = this;
        _.animateHeight(), !0 === _.options.rtl && !1 === _.options.vertical && (targetLeft = -targetLeft), 
        !1 === _.transformsEnabled ? !1 === _.options.vertical ? _.$slideTrack.animate({
            left: targetLeft
        }, _.options.speed, _.options.easing, callback) : _.$slideTrack.animate({
            top: targetLeft
        }, _.options.speed, _.options.easing, callback) : !1 === _.cssTransitions ? (!0 === _.options.rtl && (_.currentLeft = -_.currentLeft), 
        $({
            animStart: _.currentLeft
        }).animate({
            animStart: targetLeft
        }, {
            duration: _.options.speed,
            easing: _.options.easing,
            step: function(now) {
                now = Math.ceil(now), !1 === _.options.vertical ? animProps[_.animType] = "translate(" + now + "px, 0px)" : animProps[_.animType] = "translate(0px," + now + "px)", 
                _.$slideTrack.css(animProps);
            },
            complete: function() {
                callback && callback.call();
            }
        })) : (_.applyTransition(), targetLeft = Math.ceil(targetLeft), !1 === _.options.vertical ? animProps[_.animType] = "translate3d(" + targetLeft + "px, 0px, 0px)" : animProps[_.animType] = "translate3d(0px," + targetLeft + "px, 0px)", 
        _.$slideTrack.css(animProps), callback && setTimeout(function() {
            _.disableTransition(), callback.call();
        }, _.options.speed));
    }, Slick.prototype.getNavTarget = function() {
        var asNavFor = this.options.asNavFor;
        return asNavFor = asNavFor && null !== asNavFor ? $(asNavFor).not(this.$slider) : asNavFor;
    }, Slick.prototype.asNavFor = function(index) {
        var asNavFor = this.getNavTarget();
        null !== asNavFor && "object" == typeof asNavFor && asNavFor.each(function() {
            var target = $(this).slick("getSlick");
            target.unslicked || target.slideHandler(index, !0);
        });
    }, Slick.prototype.applyTransition = function(slide) {
        var _ = this, transition = {};
        !1 === _.options.fade ? transition[_.transitionType] = _.transformType + " " + _.options.speed + "ms " + _.options.cssEase : transition[_.transitionType] = "opacity " + _.options.speed + "ms " + _.options.cssEase, 
        (!1 === _.options.fade ? _.$slideTrack : _.$slides.eq(slide)).css(transition);
    }, Slick.prototype.autoPlay = function() {
        var _ = this;
        _.autoPlayClear(), _.slideCount > _.options.slidesToShow && (_.autoPlayTimer = setInterval(_.autoPlayIterator, _.options.autoplaySpeed));
    }, Slick.prototype.autoPlayClear = function() {
        this.autoPlayTimer && clearInterval(this.autoPlayTimer);
    }, Slick.prototype.autoPlayIterator = function() {
        var _ = this, slideTo = _.currentSlide + _.options.slidesToScroll;
        _.paused || _.interrupted || _.focussed || (!1 === _.options.infinite && (1 === _.direction && _.currentSlide + 1 === _.slideCount - 1 ? _.direction = 0 : 0 === _.direction && (slideTo = _.currentSlide - _.options.slidesToScroll, 
        _.currentSlide - 1 == 0 && (_.direction = 1))), _.slideHandler(slideTo));
    }, Slick.prototype.buildArrows = function() {
        var _ = this;
        !0 === _.options.arrows && (_.$prevArrow = $(_.options.prevArrow).addClass("slick-arrow"), 
        _.$nextArrow = $(_.options.nextArrow).addClass("slick-arrow"), _.slideCount > _.options.slidesToShow ? (_.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), 
        _.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), 
        _.htmlExpr.test(_.options.prevArrow) && _.$prevArrow.prependTo(_.options.appendArrows), 
        _.htmlExpr.test(_.options.nextArrow) && _.$nextArrow.appendTo(_.options.appendArrows), 
        !0 !== _.options.infinite && _.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : _.$prevArrow.add(_.$nextArrow).addClass("slick-hidden").attr({
            "aria-disabled": "true",
            tabindex: "-1"
        }));
    }, Slick.prototype.buildDots = function() {
        var i, dot, _ = this;
        if (!0 === _.options.dots && _.slideCount > _.options.slidesToShow) {
            for (_.$slider.addClass("slick-dotted"), dot = $("<ul />").addClass(_.options.dotsClass), 
            i = 0; i <= _.getDotCount(); i += 1) dot.append($("<li />").append(_.options.customPaging.call(this, _, i)));
            _.$dots = dot.appendTo(_.options.appendDots), _.$dots.find("li").first().addClass("slick-active");
        }
    }, Slick.prototype.buildOut = function() {
        var _ = this;
        _.$slides = _.$slider.children(_.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), 
        _.slideCount = _.$slides.length, _.$slides.each(function(index, element) {
            $(element).attr("data-slick-index", index).data("originalStyling", $(element).attr("style") || "");
        }), _.$slider.addClass("slick-slider"), _.$slideTrack = 0 === _.slideCount ? $('<div class="slick-track"/>').appendTo(_.$slider) : _.$slides.wrapAll('<div class="slick-track"/>').parent(), 
        _.$list = _.$slideTrack.wrap('<div class="slick-list"/>').parent(), _.$slideTrack.css("opacity", 0), 
        !0 !== _.options.centerMode && !0 !== _.options.swipeToSlide || (_.options.slidesToScroll = 1), 
        $("img[data-lazy]", _.$slider).not("[src]").addClass("slick-loading"), _.setupInfinite(), 
        _.buildArrows(), _.buildDots(), _.updateDots(), _.setSlideClasses("number" == typeof _.currentSlide ? _.currentSlide : 0), 
        !0 === _.options.draggable && _.$list.addClass("draggable");
    }, Slick.prototype.buildRows = function() {
        var a, numOfSlides, slidesPerSection, _ = this, newSlides = document.createDocumentFragment(), originalSlides = _.$slider.children();
        if (0 < _.options.rows) {
            for (slidesPerSection = _.options.slidesPerRow * _.options.rows, numOfSlides = Math.ceil(originalSlides.length / slidesPerSection), 
            a = 0; a < numOfSlides; a++) {
                for (var slide = document.createElement("div"), b = 0; b < _.options.rows; b++) {
                    for (var row = document.createElement("div"), c = 0; c < _.options.slidesPerRow; c++) {
                        var target = a * slidesPerSection + (b * _.options.slidesPerRow + c);
                        originalSlides.get(target) && row.appendChild(originalSlides.get(target));
                    }
                    slide.appendChild(row);
                }
                newSlides.appendChild(slide);
            }
            _.$slider.empty().append(newSlides), _.$slider.children().children().children().css({
                width: 100 / _.options.slidesPerRow + "%",
                display: "inline-block"
            });
        }
    }, Slick.prototype.checkResponsive = function(initial, forceUpdate) {
        var breakpoint, targetBreakpoint, respondToWidth, _ = this, triggerBreakpoint = !1, sliderWidth = _.$slider.width(), windowWidth = window.innerWidth || $(window).width();
        if ("window" === _.respondTo ? respondToWidth = windowWidth : "slider" === _.respondTo ? respondToWidth = sliderWidth : "min" === _.respondTo && (respondToWidth = Math.min(windowWidth, sliderWidth)), 
        _.options.responsive && _.options.responsive.length && null !== _.options.responsive) {
            for (breakpoint in targetBreakpoint = null, _.breakpoints) _.breakpoints.hasOwnProperty(breakpoint) && (!1 === _.originalSettings.mobileFirst ? respondToWidth < _.breakpoints[breakpoint] && (targetBreakpoint = _.breakpoints[breakpoint]) : respondToWidth > _.breakpoints[breakpoint] && (targetBreakpoint = _.breakpoints[breakpoint]));
            null !== targetBreakpoint ? null !== _.activeBreakpoint && targetBreakpoint === _.activeBreakpoint && !forceUpdate || (_.activeBreakpoint = targetBreakpoint, 
            "unslick" === _.breakpointSettings[targetBreakpoint] ? _.unslick(targetBreakpoint) : (_.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]), 
            !0 === initial && (_.currentSlide = _.options.initialSlide), _.refresh(initial)), 
            triggerBreakpoint = targetBreakpoint) : null !== _.activeBreakpoint && (_.activeBreakpoint = null, 
            _.options = _.originalSettings, !0 === initial && (_.currentSlide = _.options.initialSlide), 
            _.refresh(initial), triggerBreakpoint = targetBreakpoint), initial || !1 === triggerBreakpoint || _.$slider.trigger("breakpoint", [ _, triggerBreakpoint ]);
        }
    }, Slick.prototype.changeSlide = function(event, dontAnimate) {
        var indexOffset, _ = this, $target = $(event.currentTarget);
        switch ($target.is("a") && event.preventDefault(), $target.is("li") || ($target = $target.closest("li")), 
        indexOffset = _.slideCount % _.options.slidesToScroll != 0 ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll, 
        event.data.message) {
          case "previous":
            slideOffset = 0 == indexOffset ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset, 
            _.slideCount > _.options.slidesToShow && _.slideHandler(_.currentSlide - slideOffset, !1, dontAnimate);
            break;

          case "next":
            slideOffset = 0 == indexOffset ? _.options.slidesToScroll : indexOffset, 
            _.slideCount > _.options.slidesToShow && _.slideHandler(_.currentSlide + slideOffset, !1, dontAnimate);
            break;

          case "index":
            var slideOffset = 0 === event.data.index ? 0 : event.data.index || $target.index() * _.options.slidesToScroll;
            _.slideHandler(_.checkNavigable(slideOffset), !1, dontAnimate), $target.children().trigger("focus");
            break;

          default:
            return;
        }
    }, Slick.prototype.checkNavigable = function(index) {
        var navigables = this.getNavigableIndexes(), prevNavigable = 0;
        if (index > navigables[navigables.length - 1]) index = navigables[navigables.length - 1]; else for (var n in navigables) {
            if (index < navigables[n]) {
                index = prevNavigable;
                break;
            }
            prevNavigable = navigables[n];
        }
        return index;
    }, Slick.prototype.cleanUpEvents = function() {
        var _ = this;
        _.options.dots && null !== _.$dots && ($("li", _.$dots).off("click.slick", _.changeSlide).off("mouseenter.slick", $.proxy(_.interrupt, _, !0)).off("mouseleave.slick", $.proxy(_.interrupt, _, !1)), 
        !0 === _.options.accessibility && _.$dots.off("keydown.slick", _.keyHandler)), 
        _.$slider.off("focus.slick blur.slick"), !0 === _.options.arrows && _.slideCount > _.options.slidesToShow && (_.$prevArrow && _.$prevArrow.off("click.slick", _.changeSlide), 
        _.$nextArrow && _.$nextArrow.off("click.slick", _.changeSlide), !0 === _.options.accessibility && (_.$prevArrow && _.$prevArrow.off("keydown.slick", _.keyHandler), 
        _.$nextArrow && _.$nextArrow.off("keydown.slick", _.keyHandler))), _.$list.off("touchstart.slick mousedown.slick", _.swipeHandler), 
        _.$list.off("touchmove.slick mousemove.slick", _.swipeHandler), _.$list.off("touchend.slick mouseup.slick", _.swipeHandler), 
        _.$list.off("touchcancel.slick mouseleave.slick", _.swipeHandler), _.$list.off("click.slick", _.clickHandler), 
        $(document).off(_.visibilityChange, _.visibility), _.cleanUpSlideEvents(), 
        !0 === _.options.accessibility && _.$list.off("keydown.slick", _.keyHandler), 
        !0 === _.options.focusOnSelect && $(_.$slideTrack).children().off("click.slick", _.selectHandler), 
        $(window).off("orientationchange.slick.slick-" + _.instanceUid, _.orientationChange), 
        $(window).off("resize.slick.slick-" + _.instanceUid, _.resize), $("[draggable!=true]", _.$slideTrack).off("dragstart", _.preventDefault), 
        $(window).off("load.slick.slick-" + _.instanceUid, _.setPosition);
    }, Slick.prototype.cleanUpSlideEvents = function() {
        var _ = this;
        _.$list.off("mouseenter.slick", $.proxy(_.interrupt, _, !0)), _.$list.off("mouseleave.slick", $.proxy(_.interrupt, _, !1));
    }, Slick.prototype.cleanUpRows = function() {
        var originalSlides, _ = this;
        0 < _.options.rows && ((originalSlides = _.$slides.children().children()).removeAttr("style"), 
        _.$slider.empty().append(originalSlides));
    }, Slick.prototype.clickHandler = function(event) {
        !1 === this.shouldClick && (event.stopImmediatePropagation(), event.stopPropagation(), 
        event.preventDefault());
    }, Slick.prototype.destroy = function(refresh) {
        var _ = this;
        _.autoPlayClear(), _.touchObject = {}, _.cleanUpEvents(), $(".slick-cloned", _.$slider).detach(), 
        _.$dots && _.$dots.remove(), _.$prevArrow && _.$prevArrow.length && (_.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), 
        _.htmlExpr.test(_.options.prevArrow) && _.$prevArrow.remove()), _.$nextArrow && _.$nextArrow.length && (_.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), 
        _.htmlExpr.test(_.options.nextArrow) && _.$nextArrow.remove()), _.$slides && (_.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function() {
            $(this).attr("style", $(this).data("originalStyling"));
        }), _.$slideTrack.children(this.options.slide).detach(), _.$slideTrack.detach(), 
        _.$list.detach(), _.$slider.append(_.$slides)), _.cleanUpRows(), _.$slider.removeClass("slick-slider"), 
        _.$slider.removeClass("slick-initialized"), _.$slider.removeClass("slick-dotted"), 
        _.unslicked = !0, refresh || _.$slider.trigger("destroy", [ _ ]);
    }, Slick.prototype.disableTransition = function(slide) {
        var _ = this, transition = {};
        transition[_.transitionType] = "", (!1 === _.options.fade ? _.$slideTrack : _.$slides.eq(slide)).css(transition);
    }, Slick.prototype.fadeSlide = function(slideIndex, callback) {
        var _ = this;
        !1 === _.cssTransitions ? (_.$slides.eq(slideIndex).css({
            zIndex: _.options.zIndex
        }), _.$slides.eq(slideIndex).animate({
            opacity: 1
        }, _.options.speed, _.options.easing, callback)) : (_.applyTransition(slideIndex), 
        _.$slides.eq(slideIndex).css({
            opacity: 1,
            zIndex: _.options.zIndex
        }), callback && setTimeout(function() {
            _.disableTransition(slideIndex), callback.call();
        }, _.options.speed));
    }, Slick.prototype.fadeSlideOut = function(slideIndex) {
        var _ = this;
        !1 === _.cssTransitions ? _.$slides.eq(slideIndex).animate({
            opacity: 0,
            zIndex: _.options.zIndex - 2
        }, _.options.speed, _.options.easing) : (_.applyTransition(slideIndex), 
        _.$slides.eq(slideIndex).css({
            opacity: 0,
            zIndex: _.options.zIndex - 2
        }));
    }, Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {
        var _ = this;
        null !== filter && (_.$slidesCache = _.$slides, _.unload(), _.$slideTrack.children(this.options.slide).detach(), 
        _.$slidesCache.filter(filter).appendTo(_.$slideTrack), _.reinit());
    }, Slick.prototype.focusHandler = function() {
        var _ = this;
        _.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*", function(event) {
            event.stopImmediatePropagation();
            var $sf = $(this);
            setTimeout(function() {
                _.options.pauseOnFocus && (_.focussed = $sf.is(":focus"), _.autoPlay());
            }, 0);
        });
    }, Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {
        return this.currentSlide;
    }, Slick.prototype.getDotCount = function() {
        var _ = this, breakPoint = 0, counter = 0, pagerQty = 0;
        if (!0 === _.options.infinite) if (_.slideCount <= _.options.slidesToShow) ++pagerQty; else for (;breakPoint < _.slideCount; ) ++pagerQty, 
        breakPoint = counter + _.options.slidesToScroll, counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow; else if (!0 === _.options.centerMode) pagerQty = _.slideCount; else if (_.options.asNavFor) for (;breakPoint < _.slideCount; ) ++pagerQty, 
        breakPoint = counter + _.options.slidesToScroll, counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow; else pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);
        return pagerQty - 1;
    }, Slick.prototype.getLeft = function(slideIndex) {
        var verticalHeight, coef, _ = this, verticalOffset = 0;
        return _.slideOffset = 0, verticalHeight = _.$slides.first().outerHeight(!0), 
        !0 === _.options.infinite ? (_.slideCount > _.options.slidesToShow && (_.slideOffset = _.slideWidth * _.options.slidesToShow * -1, 
        coef = -1, !0 === _.options.vertical && !0 === _.options.centerMode && (2 === _.options.slidesToShow ? coef = -1.5 : 1 === _.options.slidesToShow && (coef = -2)), 
        verticalOffset = verticalHeight * _.options.slidesToShow * coef), _.slideCount % _.options.slidesToScroll != 0 && slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow && (verticalOffset = slideIndex > _.slideCount ? (_.slideOffset = (_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth * -1, 
        (_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight * -1) : (_.slideOffset = _.slideCount % _.options.slidesToScroll * _.slideWidth * -1, 
        _.slideCount % _.options.slidesToScroll * verticalHeight * -1))) : slideIndex + _.options.slidesToShow > _.slideCount && (_.slideOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * _.slideWidth, 
        verticalOffset = (slideIndex + _.options.slidesToShow - _.slideCount) * verticalHeight), 
        _.slideCount <= _.options.slidesToShow && (verticalOffset = _.slideOffset = 0), 
        !0 === _.options.centerMode && _.slideCount <= _.options.slidesToShow ? _.slideOffset = _.slideWidth * Math.floor(_.options.slidesToShow) / 2 - _.slideWidth * _.slideCount / 2 : !0 === _.options.centerMode && !0 === _.options.infinite ? _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth : !0 === _.options.centerMode && (_.slideOffset = 0, 
        _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2)), 
        coef = !1 === _.options.vertical ? slideIndex * _.slideWidth * -1 + _.slideOffset : slideIndex * verticalHeight * -1 + verticalOffset, 
        !0 === _.options.variableWidth && (verticalHeight = _.slideCount <= _.options.slidesToShow || !1 === _.options.infinite ? _.$slideTrack.children(".slick-slide").eq(slideIndex) : _.$slideTrack.children(".slick-slide").eq(slideIndex + _.options.slidesToShow), 
        coef = !0 === _.options.rtl ? verticalHeight[0] ? -1 * (_.$slideTrack.width() - verticalHeight[0].offsetLeft - verticalHeight.width()) : 0 : verticalHeight[0] ? -1 * verticalHeight[0].offsetLeft : 0, 
        !0 === _.options.centerMode && (verticalHeight = _.slideCount <= _.options.slidesToShow || !1 === _.options.infinite ? _.$slideTrack.children(".slick-slide").eq(slideIndex) : _.$slideTrack.children(".slick-slide").eq(slideIndex + _.options.slidesToShow + 1), 
        coef = !0 === _.options.rtl ? verticalHeight[0] ? -1 * (_.$slideTrack.width() - verticalHeight[0].offsetLeft - verticalHeight.width()) : 0 : verticalHeight[0] ? -1 * verticalHeight[0].offsetLeft : 0, 
        coef += (_.$list.width() - verticalHeight.outerWidth()) / 2)), coef;
    }, Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {
        return this.options[option];
    }, Slick.prototype.getNavigableIndexes = function() {
        for (var _ = this, breakPoint = 0, counter = 0, indexes = [], max = !1 === _.options.infinite ? _.slideCount : (breakPoint = -1 * _.options.slidesToScroll, 
        counter = -1 * _.options.slidesToScroll, 2 * _.slideCount); breakPoint < max; ) indexes.push(breakPoint), 
        breakPoint = counter + _.options.slidesToScroll, counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
        return indexes;
    }, Slick.prototype.getSlick = function() {
        return this;
    }, Slick.prototype.getSlideCount = function() {
        var swipedSlide, _ = this, centerOffset = !0 === _.options.centerMode ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;
        return !0 === _.options.swipeToSlide ? (_.$slideTrack.find(".slick-slide").each(function(index, slide) {
            if (slide.offsetLeft - centerOffset + $(slide).outerWidth() / 2 > -1 * _.swipeLeft) return swipedSlide = slide, 
            !1;
        }), Math.abs($(swipedSlide).attr("data-slick-index") - _.currentSlide) || 1) : _.options.slidesToScroll;
    }, Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {
        this.changeSlide({
            data: {
                message: "index",
                index: parseInt(slide)
            }
        }, dontAnimate);
    }, Slick.prototype.init = function(creation) {
        var _ = this;
        $(_.$slider).hasClass("slick-initialized") || ($(_.$slider).addClass("slick-initialized"), 
        _.buildRows(), _.buildOut(), _.setProps(), _.startLoad(), _.loadSlider(), 
        _.initializeEvents(), _.updateArrows(), _.updateDots(), _.checkResponsive(!0), 
        _.focusHandler()), creation && _.$slider.trigger("init", [ _ ]), !0 === _.options.accessibility && _.initADA(), 
        _.options.autoplay && (_.paused = !1, _.autoPlay());
    }, Slick.prototype.initADA = function() {
        var _ = this, numDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow), tabControlIndexes = _.getNavigableIndexes().filter(function(val) {
            return 0 <= val && val < _.slideCount;
        });
        _.$slides.add(_.$slideTrack.find(".slick-cloned")).attr({
            "aria-hidden": "true",
            tabindex: "-1"
        }).find("a, input, button, select").attr({
            tabindex: "-1"
        }), null !== _.$dots && (_.$slides.not(_.$slideTrack.find(".slick-cloned")).each(function(i) {
            var slideControlIndex = tabControlIndexes.indexOf(i);
            $(this).attr({
                role: "tabpanel",
                id: "slick-slide" + _.instanceUid + i,
                tabindex: -1
            }), -1 !== slideControlIndex && (i = "slick-slide-control" + _.instanceUid + slideControlIndex, 
            $("#" + i).length && $(this).attr({
                "aria-describedby": i
            }));
        }), _.$dots.attr("role", "tablist").find("li").each(function(i) {
            var mappedSlideIndex = tabControlIndexes[i];
            $(this).attr({
                role: "presentation"
            }), $(this).find("button").first().attr({
                role: "tab",
                id: "slick-slide-control" + _.instanceUid + i,
                "aria-controls": "slick-slide" + _.instanceUid + mappedSlideIndex,
                "aria-label": i + 1 + " of " + numDotGroups,
                "aria-selected": null,
                tabindex: "-1"
            });
        }).eq(_.currentSlide).find("button").attr({
            "aria-selected": "true",
            tabindex: "0"
        }).end());
        for (var i = _.currentSlide, max = i + _.options.slidesToShow; i < max; i++) _.options.focusOnChange ? _.$slides.eq(i).attr({
            tabindex: "0"
        }) : _.$slides.eq(i).removeAttr("tabindex");
        _.activateADA();
    }, Slick.prototype.initArrowEvents = function() {
        var _ = this;
        !0 === _.options.arrows && _.slideCount > _.options.slidesToShow && (_.$prevArrow.off("click.slick").on("click.slick", {
            message: "previous"
        }, _.changeSlide), _.$nextArrow.off("click.slick").on("click.slick", {
            message: "next"
        }, _.changeSlide), !0 === _.options.accessibility && (_.$prevArrow.on("keydown.slick", _.keyHandler), 
        _.$nextArrow.on("keydown.slick", _.keyHandler)));
    }, Slick.prototype.initDotEvents = function() {
        var _ = this;
        !0 === _.options.dots && _.slideCount > _.options.slidesToShow && ($("li", _.$dots).on("click.slick", {
            message: "index"
        }, _.changeSlide), !0 === _.options.accessibility && _.$dots.on("keydown.slick", _.keyHandler)), 
        !0 === _.options.dots && !0 === _.options.pauseOnDotsHover && _.slideCount > _.options.slidesToShow && $("li", _.$dots).on("mouseenter.slick", $.proxy(_.interrupt, _, !0)).on("mouseleave.slick", $.proxy(_.interrupt, _, !1));
    }, Slick.prototype.initSlideEvents = function() {
        var _ = this;
        _.options.pauseOnHover && (_.$list.on("mouseenter.slick", $.proxy(_.interrupt, _, !0)), 
        _.$list.on("mouseleave.slick", $.proxy(_.interrupt, _, !1)));
    }, Slick.prototype.initializeEvents = function() {
        var _ = this;
        _.initArrowEvents(), _.initDotEvents(), _.initSlideEvents(), _.$list.on("touchstart.slick mousedown.slick", {
            action: "start"
        }, _.swipeHandler), _.$list.on("touchmove.slick mousemove.slick", {
            action: "move"
        }, _.swipeHandler), _.$list.on("touchend.slick mouseup.slick", {
            action: "end"
        }, _.swipeHandler), _.$list.on("touchcancel.slick mouseleave.slick", {
            action: "end"
        }, _.swipeHandler), _.$list.on("click.slick", _.clickHandler), $(document).on(_.visibilityChange, $.proxy(_.visibility, _)), 
        !0 === _.options.accessibility && _.$list.on("keydown.slick", _.keyHandler), 
        !0 === _.options.focusOnSelect && $(_.$slideTrack).children().on("click.slick", _.selectHandler), 
        $(window).on("orientationchange.slick.slick-" + _.instanceUid, $.proxy(_.orientationChange, _)), 
        $(window).on("resize.slick.slick-" + _.instanceUid, $.proxy(_.resize, _)), 
        $("[draggable!=true]", _.$slideTrack).on("dragstart", _.preventDefault), 
        $(window).on("load.slick.slick-" + _.instanceUid, _.setPosition), $(_.setPosition);
    }, Slick.prototype.initUI = function() {
        var _ = this;
        !0 === _.options.arrows && _.slideCount > _.options.slidesToShow && (_.$prevArrow.show(), 
        _.$nextArrow.show()), !0 === _.options.dots && _.slideCount > _.options.slidesToShow && _.$dots.show();
    }, Slick.prototype.keyHandler = function(event) {
        var _ = this;
        event.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === event.keyCode && !0 === _.options.accessibility ? _.changeSlide({
            data: {
                message: !0 === _.options.rtl ? "next" : "previous"
            }
        }) : 39 === event.keyCode && !0 === _.options.accessibility && _.changeSlide({
            data: {
                message: !0 === _.options.rtl ? "previous" : "next"
            }
        }));
    }, Slick.prototype.lazyLoad = function() {
        var loadRange, rangeStart, rangeEnd, _ = this;
        function loadImages(imagesScope) {
            $("img[data-lazy]", imagesScope).each(function() {
                var image = $(this), imageSource = $(this).attr("data-lazy"), imageSrcSet = $(this).attr("data-srcset"), imageSizes = $(this).attr("data-sizes") || _.$slider.attr("data-sizes"), imageToLoad = document.createElement("img");
                imageToLoad.onload = function() {
                    image.animate({
                        opacity: 0
                    }, 100, function() {
                        imageSrcSet && (image.attr("srcset", imageSrcSet), imageSizes && image.attr("sizes", imageSizes)), 
                        image.attr("src", imageSource).animate({
                            opacity: 1
                        }, 200, function() {
                            image.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading");
                        }), _.$slider.trigger("lazyLoaded", [ _, image, imageSource ]);
                    });
                }, imageToLoad.onerror = function() {
                    image.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), 
                    _.$slider.trigger("lazyLoadError", [ _, image, imageSource ]);
                }, imageToLoad.src = imageSource;
            });
        }
        if (!0 === _.options.centerMode ? rangeEnd = !0 === _.options.infinite ? (rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1)) + _.options.slidesToShow + 2 : (rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1)), 
        _.options.slidesToShow / 2 + 1 + 2 + _.currentSlide) : (rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide, 
        rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow), !0 === _.options.fade && (0 < rangeStart && rangeStart--, 
        rangeEnd <= _.slideCount && rangeEnd++)), loadRange = _.$slider.find(".slick-slide").slice(rangeStart, rangeEnd), 
        "anticipated" === _.options.lazyLoad) for (var prevSlide = rangeStart - 1, nextSlide = rangeEnd, $slides = _.$slider.find(".slick-slide"), i = 0; i < _.options.slidesToScroll; i++) prevSlide < 0 && (prevSlide = _.slideCount - 1), 
        loadRange = (loadRange = loadRange.add($slides.eq(prevSlide))).add($slides.eq(nextSlide)), 
        prevSlide--, nextSlide++;
        loadImages(loadRange), _.slideCount <= _.options.slidesToShow ? loadImages(_.$slider.find(".slick-slide")) : _.currentSlide >= _.slideCount - _.options.slidesToShow ? loadImages(_.$slider.find(".slick-cloned").slice(0, _.options.slidesToShow)) : 0 === _.currentSlide && loadImages(_.$slider.find(".slick-cloned").slice(-1 * _.options.slidesToShow));
    }, Slick.prototype.loadSlider = function() {
        var _ = this;
        _.setPosition(), _.$slideTrack.css({
            opacity: 1
        }), _.$slider.removeClass("slick-loading"), _.initUI(), "progressive" === _.options.lazyLoad && _.progressiveLazyLoad();
    }, Slick.prototype.next = Slick.prototype.slickNext = function() {
        this.changeSlide({
            data: {
                message: "next"
            }
        });
    }, Slick.prototype.orientationChange = function() {
        this.checkResponsive(), this.setPosition();
    }, Slick.prototype.pause = Slick.prototype.slickPause = function() {
        this.autoPlayClear(), this.paused = !0;
    }, Slick.prototype.play = Slick.prototype.slickPlay = function() {
        var _ = this;
        _.autoPlay(), _.options.autoplay = !0, _.paused = !1, _.focussed = !1, _.interrupted = !1;
    }, Slick.prototype.postSlide = function(index) {
        var _ = this;
        _.unslicked || (_.$slider.trigger("afterChange", [ _, index ]), _.animating = !1, 
        _.slideCount > _.options.slidesToShow && _.setPosition(), _.swipeLeft = null, 
        _.options.autoplay && _.autoPlay(), !0 === _.options.accessibility && (_.initADA(), 
        _.options.focusOnChange && $(_.$slides.get(_.currentSlide)).attr("tabindex", 0).focus()));
    }, Slick.prototype.prev = Slick.prototype.slickPrev = function() {
        this.changeSlide({
            data: {
                message: "previous"
            }
        });
    }, Slick.prototype.preventDefault = function(event) {
        event.preventDefault();
    }, Slick.prototype.progressiveLazyLoad = function(tryCount) {
        tryCount = tryCount || 1;
        var image, imageSource, imageSrcSet, imageSizes, _ = this, $imgsToLoad = $("img[data-lazy]", _.$slider);
        $imgsToLoad.length ? (image = $imgsToLoad.first(), imageSource = image.attr("data-lazy"), 
        imageSrcSet = image.attr("data-srcset"), imageSizes = image.attr("data-sizes") || _.$slider.attr("data-sizes"), 
        ($imgsToLoad = document.createElement("img")).onload = function() {
            imageSrcSet && (image.attr("srcset", imageSrcSet), imageSizes && image.attr("sizes", imageSizes)), 
            image.attr("src", imageSource).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"), 
            !0 === _.options.adaptiveHeight && _.setPosition(), _.$slider.trigger("lazyLoaded", [ _, image, imageSource ]), 
            _.progressiveLazyLoad();
        }, $imgsToLoad.onerror = function() {
            tryCount < 3 ? setTimeout(function() {
                _.progressiveLazyLoad(tryCount + 1);
            }, 500) : (image.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), 
            _.$slider.trigger("lazyLoadError", [ _, image, imageSource ]), _.progressiveLazyLoad());
        }, $imgsToLoad.src = imageSource) : _.$slider.trigger("allImagesLoaded", [ _ ]);
    }, Slick.prototype.refresh = function(initializing) {
        var _ = this, lastVisibleIndex = _.slideCount - _.options.slidesToShow;
        !_.options.infinite && _.currentSlide > lastVisibleIndex && (_.currentSlide = lastVisibleIndex), 
        _.slideCount <= _.options.slidesToShow && (_.currentSlide = 0), lastVisibleIndex = _.currentSlide, 
        _.destroy(!0), $.extend(_, _.initials, {
            currentSlide: lastVisibleIndex
        }), _.init(), initializing || _.changeSlide({
            data: {
                message: "index",
                index: lastVisibleIndex
            }
        }, !1);
    }, Slick.prototype.registerBreakpoints = function() {
        var breakpoint, currentBreakpoint, l, _ = this, responsiveSettings = _.options.responsive || null;
        if ("array" === $.type(responsiveSettings) && responsiveSettings.length) {
            for (breakpoint in _.respondTo = _.options.respondTo || "window", responsiveSettings) if (l = _.breakpoints.length - 1, 
            responsiveSettings.hasOwnProperty(breakpoint)) {
                for (currentBreakpoint = responsiveSettings[breakpoint].breakpoint; 0 <= l; ) _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint && _.breakpoints.splice(l, 1), 
                l--;
                _.breakpoints.push(currentBreakpoint), _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;
            }
            _.breakpoints.sort(function(a, b) {
                return _.options.mobileFirst ? a - b : b - a;
            });
        }
    }, Slick.prototype.reinit = function() {
        var _ = this;
        _.$slides = _.$slideTrack.children(_.options.slide).addClass("slick-slide"), 
        _.slideCount = _.$slides.length, _.currentSlide >= _.slideCount && 0 !== _.currentSlide && (_.currentSlide = _.currentSlide - _.options.slidesToScroll), 
        _.slideCount <= _.options.slidesToShow && (_.currentSlide = 0), _.registerBreakpoints(), 
        _.setProps(), _.setupInfinite(), _.buildArrows(), _.updateArrows(), _.initArrowEvents(), 
        _.buildDots(), _.updateDots(), _.initDotEvents(), _.cleanUpSlideEvents(), 
        _.initSlideEvents(), _.checkResponsive(!1, !0), !0 === _.options.focusOnSelect && $(_.$slideTrack).children().on("click.slick", _.selectHandler), 
        _.setSlideClasses("number" == typeof _.currentSlide ? _.currentSlide : 0), 
        _.setPosition(), _.focusHandler(), _.paused = !_.options.autoplay, _.autoPlay(), 
        _.$slider.trigger("reInit", [ _ ]);
    }, Slick.prototype.resize = function() {
        var _ = this;
        $(window).width() !== _.windowWidth && (clearTimeout(_.windowDelay), _.windowDelay = window.setTimeout(function() {
            _.windowWidth = $(window).width(), _.checkResponsive(), _.unslicked || _.setPosition();
        }, 50));
    }, Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {
        var _ = this;
        if (index = "boolean" == typeof index ? !0 === (removeBefore = index) ? 0 : _.slideCount - 1 : !0 === removeBefore ? --index : index, 
        _.slideCount < 1 || index < 0 || index > _.slideCount - 1) return !1;
        _.unload(), (!0 === removeAll ? _.$slideTrack.children() : _.$slideTrack.children(this.options.slide).eq(index)).remove(), 
        _.$slides = _.$slideTrack.children(this.options.slide), _.$slideTrack.children(this.options.slide).detach(), 
        _.$slideTrack.append(_.$slides), _.$slidesCache = _.$slides, _.reinit();
    }, Slick.prototype.setCSS = function(position) {
        var x, y, _ = this, positionProps = {};
        !0 === _.options.rtl && (position = -position), x = "left" == _.positionProp ? Math.ceil(position) + "px" : "0px", 
        y = "top" == _.positionProp ? Math.ceil(position) + "px" : "0px", positionProps[_.positionProp] = position, 
        !1 !== _.transformsEnabled && (!(positionProps = {}) === _.cssTransitions ? positionProps[_.animType] = "translate(" + x + ", " + y + ")" : positionProps[_.animType] = "translate3d(" + x + ", " + y + ", 0px)"), 
        _.$slideTrack.css(positionProps);
    }, Slick.prototype.setDimensions = function() {
        var _ = this, offset = (!1 === _.options.vertical ? !0 === _.options.centerMode && _.$list.css({
            padding: "0px " + _.options.centerPadding
        }) : (_.$list.height(_.$slides.first().outerHeight(!0) * _.options.slidesToShow), 
        !0 === _.options.centerMode && _.$list.css({
            padding: _.options.centerPadding + " 0px"
        })), _.listWidth = _.$list.width(), _.listHeight = _.$list.height(), !1 === _.options.vertical && !1 === _.options.variableWidth ? (_.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow), 
        _.$slideTrack.width(Math.ceil(_.slideWidth * _.$slideTrack.children(".slick-slide").length))) : !0 === _.options.variableWidth ? _.$slideTrack.width(5e3 * _.slideCount) : (_.slideWidth = Math.ceil(_.listWidth), 
        _.$slideTrack.height(Math.ceil(_.$slides.first().outerHeight(!0) * _.$slideTrack.children(".slick-slide").length))), 
        _.$slides.first().outerWidth(!0) - _.$slides.first().width());
        !1 === _.options.variableWidth && _.$slideTrack.children(".slick-slide").width(_.slideWidth - offset);
    }, Slick.prototype.setFade = function() {
        var targetLeft, _ = this;
        _.$slides.each(function(index, element) {
            targetLeft = _.slideWidth * index * -1, !0 === _.options.rtl ? $(element).css({
                position: "relative",
                right: targetLeft,
                top: 0,
                zIndex: _.options.zIndex - 2,
                opacity: 0
            }) : $(element).css({
                position: "relative",
                left: targetLeft,
                top: 0,
                zIndex: _.options.zIndex - 2,
                opacity: 0
            });
        }), _.$slides.eq(_.currentSlide).css({
            zIndex: _.options.zIndex - 1,
            opacity: 1
        });
    }, Slick.prototype.setHeight = function() {
        var targetHeight, _ = this;
        1 === _.options.slidesToShow && !0 === _.options.adaptiveHeight && !1 === _.options.vertical && (targetHeight = _.$slides.eq(_.currentSlide).outerHeight(!0), 
        _.$list.css("height", targetHeight));
    }, Slick.prototype.setOption = Slick.prototype.slickSetOption = function() {
        var l, item, option, value, type, _ = this, refresh = !1;
        if ("object" === $.type(arguments[0]) ? (option = arguments[0], refresh = arguments[1], 
        type = "multiple") : "string" === $.type(arguments[0]) && (option = arguments[0], 
        value = arguments[1], refresh = arguments[2], "responsive" === arguments[0] && "array" === $.type(arguments[1]) ? type = "responsive" : void 0 !== arguments[1] && (type = "single")), 
        "single" === type) _.options[option] = value; else if ("multiple" === type) $.each(option, function(opt, val) {
            _.options[opt] = val;
        }); else if ("responsive" === type) for (item in value) if ("array" !== $.type(_.options.responsive)) _.options.responsive = [ value[item] ]; else {
            for (l = _.options.responsive.length - 1; 0 <= l; ) _.options.responsive[l].breakpoint === value[item].breakpoint && _.options.responsive.splice(l, 1), 
            l--;
            _.options.responsive.push(value[item]);
        }
        refresh && (_.unload(), _.reinit());
    }, Slick.prototype.setPosition = function() {
        var _ = this;
        _.setDimensions(), _.setHeight(), !1 === _.options.fade ? _.setCSS(_.getLeft(_.currentSlide)) : _.setFade(), 
        _.$slider.trigger("setPosition", [ _ ]);
    }, Slick.prototype.setProps = function() {
        var _ = this, bodyStyle = document.body.style;
        _.positionProp = !0 === _.options.vertical ? "top" : "left", "top" === _.positionProp ? _.$slider.addClass("slick-vertical") : _.$slider.removeClass("slick-vertical"), 
        void 0 === bodyStyle.WebkitTransition && void 0 === bodyStyle.MozTransition && void 0 === bodyStyle.msTransition || !0 === _.options.useCSS && (_.cssTransitions = !0), 
        _.options.fade && ("number" == typeof _.options.zIndex ? _.options.zIndex < 3 && (_.options.zIndex = 3) : _.options.zIndex = _.defaults.zIndex), 
        void 0 !== bodyStyle.OTransform && (_.animType = "OTransform", _.transformType = "-o-transform", 
        _.transitionType = "OTransition", void 0 === bodyStyle.perspectiveProperty && void 0 === bodyStyle.webkitPerspective && (_.animType = !1)), 
        void 0 !== bodyStyle.MozTransform && (_.animType = "MozTransform", _.transformType = "-moz-transform", 
        _.transitionType = "MozTransition", void 0 === bodyStyle.perspectiveProperty && void 0 === bodyStyle.MozPerspective && (_.animType = !1)), 
        void 0 !== bodyStyle.webkitTransform && (_.animType = "webkitTransform", 
        _.transformType = "-webkit-transform", _.transitionType = "webkitTransition", 
        void 0 === bodyStyle.perspectiveProperty && void 0 === bodyStyle.webkitPerspective && (_.animType = !1)), 
        void 0 !== bodyStyle.msTransform && (_.animType = "msTransform", _.transformType = "-ms-transform", 
        _.transitionType = "msTransition", void 0 === bodyStyle.msTransform && (_.animType = !1)), 
        void 0 !== bodyStyle.transform && !1 !== _.animType && (_.animType = "transform", 
        _.transformType = "transform", _.transitionType = "transition"), _.transformsEnabled = _.options.useTransform && null !== _.animType && !1 !== _.animType;
    }, Slick.prototype.setSlideClasses = function(index) {
        var indexOffset, evenCoef, centerOffset, _ = this, allSlides = _.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true");
        _.$slides.eq(index).addClass("slick-current"), !0 === _.options.centerMode ? (evenCoef = _.options.slidesToShow % 2 == 0 ? 1 : 0, 
        centerOffset = Math.floor(_.options.slidesToShow / 2), !0 === _.options.infinite && (centerOffset <= index && index <= _.slideCount - 1 - centerOffset ? _.$slides.slice(index - centerOffset + evenCoef, index + centerOffset + 1).addClass("slick-active").attr("aria-hidden", "false") : (indexOffset = _.options.slidesToShow + index, 
        allSlides.slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2).addClass("slick-active").attr("aria-hidden", "false")), 
        0 === index ? allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass("slick-center") : index === _.slideCount - 1 && allSlides.eq(_.options.slidesToShow).addClass("slick-center")), 
        _.$slides.eq(index).addClass("slick-center")) : 0 <= index && index <= _.slideCount - _.options.slidesToShow ? _.$slides.slice(index, index + _.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : allSlides.length <= _.options.slidesToShow ? allSlides.addClass("slick-active").attr("aria-hidden", "false") : (evenCoef = _.slideCount % _.options.slidesToShow, 
        indexOffset = !0 === _.options.infinite ? _.options.slidesToShow + index : index, 
        (_.options.slidesToShow == _.options.slidesToScroll && _.slideCount - index < _.options.slidesToShow ? allSlides.slice(indexOffset - (_.options.slidesToShow - evenCoef), indexOffset + evenCoef) : allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow)).addClass("slick-active").attr("aria-hidden", "false")), 
        "ondemand" !== _.options.lazyLoad && "anticipated" !== _.options.lazyLoad || _.lazyLoad();
    }, Slick.prototype.setupInfinite = function() {
        var i, slideIndex, infiniteCount, _ = this;
        if (!0 === _.options.fade && (_.options.centerMode = !1), !0 === _.options.infinite && !1 === _.options.fade && (slideIndex = null, 
        _.slideCount > _.options.slidesToShow)) {
            for (infiniteCount = !0 === _.options.centerMode ? _.options.slidesToShow + 1 : _.options.slidesToShow, 
            i = _.slideCount; i > _.slideCount - infiniteCount; --i) $(_.$slides[slideIndex = i - 1]).clone(!0).attr("id", "").attr("data-slick-index", slideIndex - _.slideCount).prependTo(_.$slideTrack).addClass("slick-cloned");
            for (i = 0; i < infiniteCount + _.slideCount; i += 1) slideIndex = i, 
            $(_.$slides[slideIndex]).clone(!0).attr("id", "").attr("data-slick-index", slideIndex + _.slideCount).appendTo(_.$slideTrack).addClass("slick-cloned");
            _.$slideTrack.find(".slick-cloned").find("[id]").each(function() {
                $(this).attr("id", "");
            });
        }
    }, Slick.prototype.interrupt = function(toggle) {
        toggle || this.autoPlay(), this.interrupted = toggle;
    }, Slick.prototype.selectHandler = function(event) {
        var _ = this, event = $(event.target).is(".slick-slide") ? $(event.target) : $(event.target).parents(".slick-slide"), event = (event = parseInt(event.attr("data-slick-index"))) || 0;
        _.slideCount <= _.options.slidesToShow ? _.slideHandler(event, !1, !0) : _.slideHandler(event);
    }, Slick.prototype.slideHandler = function(index, sync, dontAnimate) {
        var targetSlide, animSlide, slideLeft, _ = this;
        if (sync = sync || !1, !(!0 === _.animating && !0 === _.options.waitForAnimate || !0 === _.options.fade && _.currentSlide === index)) if (!1 === sync && _.asNavFor(index), 
        targetSlide = index, sync = _.getLeft(targetSlide), slideLeft = _.getLeft(_.currentSlide), 
        _.currentLeft = null === _.swipeLeft ? slideLeft : _.swipeLeft, !1 === _.options.infinite && !1 === _.options.centerMode && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) !1 === _.options.fade && (targetSlide = _.currentSlide, 
        !0 !== dontAnimate && _.slideCount > _.options.slidesToShow ? _.animateSlide(slideLeft, function() {
            _.postSlide(targetSlide);
        }) : _.postSlide(targetSlide)); else if (!1 === _.options.infinite && !0 === _.options.centerMode && (index < 0 || index > _.slideCount - _.options.slidesToScroll)) !1 === _.options.fade && (targetSlide = _.currentSlide, 
        !0 !== dontAnimate && _.slideCount > _.options.slidesToShow ? _.animateSlide(slideLeft, function() {
            _.postSlide(targetSlide);
        }) : _.postSlide(targetSlide)); else {
            if (_.options.autoplay && clearInterval(_.autoPlayTimer), animSlide = targetSlide < 0 ? _.slideCount % _.options.slidesToScroll != 0 ? _.slideCount - _.slideCount % _.options.slidesToScroll : _.slideCount + targetSlide : targetSlide >= _.slideCount ? _.slideCount % _.options.slidesToScroll != 0 ? 0 : targetSlide - _.slideCount : targetSlide, 
            _.animating = !0, _.$slider.trigger("beforeChange", [ _, _.currentSlide, animSlide ]), 
            index = _.currentSlide, _.currentSlide = animSlide, _.setSlideClasses(_.currentSlide), 
            _.options.asNavFor && (slideLeft = (slideLeft = _.getNavTarget()).slick("getSlick")).slideCount <= slideLeft.options.slidesToShow && slideLeft.setSlideClasses(_.currentSlide), 
            _.updateDots(), _.updateArrows(), !0 === _.options.fade) return !0 !== dontAnimate ? (_.fadeSlideOut(index), 
            _.fadeSlide(animSlide, function() {
                _.postSlide(animSlide);
            })) : _.postSlide(animSlide), void _.animateHeight();
            !0 !== dontAnimate && _.slideCount > _.options.slidesToShow ? _.animateSlide(sync, function() {
                _.postSlide(animSlide);
            }) : _.postSlide(animSlide);
        }
    }, Slick.prototype.startLoad = function() {
        var _ = this;
        !0 === _.options.arrows && _.slideCount > _.options.slidesToShow && (_.$prevArrow.hide(), 
        _.$nextArrow.hide()), !0 === _.options.dots && _.slideCount > _.options.slidesToShow && _.$dots.hide(), 
        _.$slider.addClass("slick-loading");
    }, Slick.prototype.swipeDirection = function() {
        var _ = this, xDist = _.touchObject.startX - _.touchObject.curX, yDist = _.touchObject.startY - _.touchObject.curY, yDist = Math.atan2(yDist, xDist), xDist = Math.round(180 * yDist / Math.PI);
        return (xDist = xDist < 0 ? 360 - Math.abs(xDist) : xDist) <= 45 && 0 <= xDist || xDist <= 360 && 315 <= xDist ? !1 === _.options.rtl ? "left" : "right" : 135 <= xDist && xDist <= 225 ? !1 === _.options.rtl ? "right" : "left" : !0 === _.options.verticalSwiping ? 35 <= xDist && xDist <= 135 ? "down" : "up" : "vertical";
    }, Slick.prototype.swipeEnd = function(event) {
        var slideCount, direction, _ = this;
        if (_.dragging = !1, _.swiping = !1, _.scrolling) return _.scrolling = !1;
        if (_.interrupted = !1, _.shouldClick = !(10 < _.touchObject.swipeLength), 
        void 0 === _.touchObject.curX) return !1;
        if (!0 === _.touchObject.edgeHit && _.$slider.trigger("edge", [ _, _.swipeDirection() ]), 
        _.touchObject.swipeLength >= _.touchObject.minSwipe) {
            switch (direction = _.swipeDirection()) {
              case "left":
              case "down":
                slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount(), 
                _.currentDirection = 0;
                break;

              case "right":
              case "up":
                slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount(), 
                _.currentDirection = 1;
            }
            "vertical" != direction && (_.slideHandler(slideCount), _.touchObject = {}, 
            _.$slider.trigger("swipe", [ _, direction ]));
        } else _.touchObject.startX !== _.touchObject.curX && (_.slideHandler(_.currentSlide), 
        _.touchObject = {});
    }, Slick.prototype.swipeHandler = function(event) {
        var _ = this;
        if (!(!1 === _.options.swipe || "ontouchend" in document && !1 === _.options.swipe || !1 === _.options.draggable && -1 !== event.type.indexOf("mouse"))) switch (_.touchObject.fingerCount = event.originalEvent && void 0 !== event.originalEvent.touches ? event.originalEvent.touches.length : 1, 
        _.touchObject.minSwipe = _.listWidth / _.options.touchThreshold, !0 === _.options.verticalSwiping && (_.touchObject.minSwipe = _.listHeight / _.options.touchThreshold), 
        event.data.action) {
          case "start":
            _.swipeStart(event);
            break;

          case "move":
            _.swipeMove(event);
            break;

          case "end":
            _.swipeEnd(event);
        }
    }, Slick.prototype.swipeMove = function(event) {
        var curLeft, swipeLength, _ = this, touches = void 0 !== event.originalEvent ? event.originalEvent.touches : null;
        return !(!_.dragging || _.scrolling || touches && 1 !== touches.length) && (curLeft = _.getLeft(_.currentSlide), 
        _.touchObject.curX = void 0 !== touches ? touches[0].pageX : event.clientX, 
        _.touchObject.curY = void 0 !== touches ? touches[0].pageY : event.clientY, 
        _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curX - _.touchObject.startX, 2))), 
        touches = Math.round(Math.sqrt(Math.pow(_.touchObject.curY - _.touchObject.startY, 2))), 
        !_.options.verticalSwiping && !_.swiping && 4 < touches ? !(_.scrolling = !0) : (!0 === _.options.verticalSwiping && (_.touchObject.swipeLength = touches), 
        touches = _.swipeDirection(), void 0 !== event.originalEvent && 4 < _.touchObject.swipeLength && (_.swiping = !0, 
        event.preventDefault()), event = (!1 === _.options.rtl ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1), 
        !0 === _.options.verticalSwiping && (event = _.touchObject.curY > _.touchObject.startY ? 1 : -1), 
        swipeLength = _.touchObject.swipeLength, (_.touchObject.edgeHit = !1) === _.options.infinite && (0 === _.currentSlide && "right" === touches || _.currentSlide >= _.getDotCount() && "left" === touches) && (swipeLength = _.touchObject.swipeLength * _.options.edgeFriction, 
        _.touchObject.edgeHit = !0), !1 === _.options.vertical ? _.swipeLeft = curLeft + swipeLength * event : _.swipeLeft = curLeft + swipeLength * (_.$list.height() / _.listWidth) * event, 
        !0 === _.options.verticalSwiping && (_.swipeLeft = curLeft + swipeLength * event), 
        !0 !== _.options.fade && !1 !== _.options.touchMove && (!0 === _.animating ? (_.swipeLeft = null, 
        !1) : void _.setCSS(_.swipeLeft))));
    }, Slick.prototype.swipeStart = function(event) {
        var touches, _ = this;
        if (_.interrupted = !0, 1 !== _.touchObject.fingerCount || _.slideCount <= _.options.slidesToShow) return !(_.touchObject = {});
        void 0 !== event.originalEvent && void 0 !== event.originalEvent.touches && (touches = event.originalEvent.touches[0]), 
        _.touchObject.startX = _.touchObject.curX = void 0 !== touches ? touches.pageX : event.clientX, 
        _.touchObject.startY = _.touchObject.curY = void 0 !== touches ? touches.pageY : event.clientY, 
        _.dragging = !0;
    }, Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {
        var _ = this;
        null !== _.$slidesCache && (_.unload(), _.$slideTrack.children(this.options.slide).detach(), 
        _.$slidesCache.appendTo(_.$slideTrack), _.reinit());
    }, Slick.prototype.unload = function() {
        var _ = this;
        $(".slick-cloned", _.$slider).remove(), _.$dots && _.$dots.remove(), _.$prevArrow && _.htmlExpr.test(_.options.prevArrow) && _.$prevArrow.remove(), 
        _.$nextArrow && _.htmlExpr.test(_.options.nextArrow) && _.$nextArrow.remove(), 
        _.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "");
    }, Slick.prototype.unslick = function(fromBreakpoint) {
        var _ = this;
        _.$slider.trigger("unslick", [ _, fromBreakpoint ]), _.destroy();
    }, Slick.prototype.updateArrows = function() {
        var _ = this;
        Math.floor(_.options.slidesToShow / 2);
        !0 === _.options.arrows && _.slideCount > _.options.slidesToShow && !_.options.infinite && (_.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 
        _.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 
        0 === _.currentSlide ? (_.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        _.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : (_.currentSlide >= _.slideCount - _.options.slidesToShow && !1 === _.options.centerMode || _.currentSlide >= _.slideCount - 1 && !0 === _.options.centerMode) && (_.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        _.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")));
    }, Slick.prototype.updateDots = function() {
        var _ = this;
        null !== _.$dots && (_.$dots.find("li").removeClass("slick-active").end(), 
        _.$dots.find("li").eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass("slick-active"));
    }, Slick.prototype.visibility = function() {
        var _ = this;
        _.options.autoplay && (document[_.hidden] ? _.interrupted = !0 : _.interrupted = !1);
    }, $.fn.slick = function() {
        for (var ret, _ = this, opt = arguments[0], args = Array.prototype.slice.call(arguments, 1), l = _.length, i = 0; i < l; i++) if ("object" == typeof opt || void 0 === opt ? _[i].slick = new Slick(_[i], opt) : ret = _[i].slick[opt].apply(_[i].slick, args), 
        void 0 !== ret) return ret;
        return _;
    };
}), function(window, document, $) {
    "use strict";
    var $W, $D, called, requestAFrame, cancelAFrame, transitionEnd, forceRedraw, mergeOpts, FancyBox, defaults, $pressed;
    function _run(e, opts) {
        var $target, value, instance, items = [], index = 0;
        e && e.isDefaultPrevented() || (e.preventDefault(), opts = opts || {}, $target = (opts = e && e.data ? mergeOpts(e.data.options, opts) : opts).$target || $(e.currentTarget).trigger("blur"), 
        (instance = $.fancybox.getInstance()) && instance.$trigger && instance.$trigger.is($target) || (items = opts.selector ? $(opts.selector) : (value = $target.attr("data-fancybox") || "") ? (items = e.data ? e.data.items : []).length ? items.filter('[data-fancybox="' + value + '"]') : $('[data-fancybox="' + value + '"]') : [ $target ], 
        index = $(items).index($target), (instance = $.fancybox.open(items, opts, index = index < 0 ? 0 : index)).$trigger = $target));
    }
    window.console = window.console || {
        info: function(stuff) {}
    }, $ && ($.fn.fancybox ? console.info("fancyBox already initialized") : (defaults = {
        closeExisting: !1,
        loop: !1,
        gutter: 50,
        keyboard: !0,
        preventCaptionOverlap: !0,
        arrows: !0,
        infobar: !0,
        smallBtn: "auto",
        toolbar: "auto",
        buttons: [ "zoom", "slideShow", "thumbs", "close" ],
        idleTime: 3,
        protect: !1,
        modal: !1,
        image: {
            preload: !1
        },
        ajax: {
            settings: {
                data: {
                    fancybox: !0
                }
            }
        },
        iframe: {
            tpl: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen="allowfullscreen" allow="autoplay; fullscreen" src=""></iframe>',
            preload: !0,
            css: {},
            attr: {
                scrolling: "auto"
            }
        },
        video: {
            tpl: '<video class="fancybox-video" controls controlsList="nodownload" poster="{{poster}}"><source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos, <a href="{{src}}">download</a> and watch with your favorite video player!</video>',
            format: "",
            autoStart: !0
        },
        defaultType: "image",
        animationEffect: "zoom",
        animationDuration: 366,
        zoomOpacity: "auto",
        transitionEffect: "fade",
        transitionDuration: 366,
        slideClass: "",
        baseClass: "",
        baseTpl: '<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"><div class="fancybox-caption__body"></div></div></div></div>',
        spinnerTpl: '<div class="fancybox-loading"></div>',
        errorTpl: '<div class="fancybox-error"><p>{{ERROR}}</p></div>',
        btnTpl: {
            download: '<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',
            zoom: '<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',
            close: '<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',
            arrowLeft: '<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',
            arrowRight: '<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',
            smallBtn: '<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>'
        },
        parentEl: "body",
        hideScrollbar: !0,
        autoFocus: !0,
        backFocus: !0,
        trapFocus: !0,
        fullScreen: {
            autoStart: !1
        },
        touch: {
            vertical: !0,
            momentum: !0
        },
        hash: null,
        media: {},
        slideShow: {
            autoStart: !1,
            speed: 3e3
        },
        thumbs: {
            autoStart: !1,
            hideOnClose: !0,
            parentEl: ".fancybox-container",
            axis: "y"
        },
        wheel: "auto",
        onInit: $.noop,
        beforeLoad: $.noop,
        afterLoad: $.noop,
        beforeShow: $.noop,
        afterShow: $.noop,
        beforeClose: $.noop,
        afterClose: $.noop,
        onActivate: $.noop,
        onDeactivate: $.noop,
        clickContent: function(current, event) {
            return "image" === current.type && "zoom";
        },
        clickSlide: "close",
        clickOutside: "close",
        dblclickContent: !1,
        dblclickSlide: !1,
        dblclickOutside: !1,
        mobile: {
            preventCaptionOverlap: !1,
            idleTime: !1,
            clickContent: function(current, event) {
                return "image" === current.type && "toggleControls";
            },
            clickSlide: function(current, event) {
                return "image" === current.type ? "toggleControls" : "close";
            },
            dblclickContent: function(current, event) {
                return "image" === current.type && "zoom";
            },
            dblclickSlide: function(current, event) {
                return "image" === current.type && "zoom";
            }
        },
        lang: "en",
        i18n: {
            en: {
                CLOSE: "Close",
                NEXT: "Next",
                PREV: "Previous",
                ERROR: "The requested content cannot be loaded. <br/> Please try again later.",
                PLAY_START: "Start slideshow",
                PLAY_STOP: "Pause slideshow",
                FULL_SCREEN: "Full screen",
                THUMBS: "Thumbnails",
                DOWNLOAD: "Download",
                SHARE: "Share",
                ZOOM: "Zoom"
            },
            de: {
                CLOSE: "Schlie&szlig;en",
                NEXT: "Weiter",
                PREV: "Zur&uuml;ck",
                ERROR: "Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es sp&auml;ter nochmal.",
                PLAY_START: "Diaschau starten",
                PLAY_STOP: "Diaschau beenden",
                FULL_SCREEN: "Vollbild",
                THUMBS: "Vorschaubilder",
                DOWNLOAD: "Herunterladen",
                SHARE: "Teilen",
                ZOOM: "Vergr&ouml;&szlig;ern"
            }
        }
    }, $W = $(window), $D = $(document), called = 0, requestAFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) {
        return window.setTimeout(callback, 1e3 / 60);
    }, cancelAFrame = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || function(id) {
        window.clearTimeout(id);
    }, transitionEnd = function() {
        var t, el = document.createElement("fakeelement"), transitions = {
            transition: "transitionend",
            OTransition: "oTransitionEnd",
            MozTransition: "transitionend",
            WebkitTransition: "webkitTransitionEnd"
        };
        for (t in transitions) if (void 0 !== el.style[t]) return transitions[t];
        return "transitionend";
    }(), forceRedraw = function($el) {
        return $el && $el.length && $el[0].offsetHeight;
    }, mergeOpts = function(opts1, opts2) {
        var rez = $.extend(!0, {}, opts1, opts2);
        return $.each(opts2, function(key, value) {
            $.isArray(value) && (rez[key] = value);
        }), rez;
    }, $.extend((FancyBox = function(content, opts, index) {
        this.opts = mergeOpts({
            index: index
        }, $.fancybox.defaults), $.isPlainObject(opts) && (this.opts = mergeOpts(this.opts, opts)), 
        $.fancybox.isMobile && (this.opts = mergeOpts(this.opts, this.opts.mobile)), 
        this.id = this.opts.id || ++called, this.currIndex = parseInt(this.opts.index, 10) || 0, 
        this.prevIndex = null, this.prevPos = null, this.currPos = 0, this.firstRun = !0, 
        this.group = [], this.slides = {}, this.addContent(content), this.group.length && this.init();
    }).prototype, {
        init: function() {
            var $container, buttonStr, self = this, firstItemOpts = self.group[self.currIndex].opts;
            firstItemOpts.closeExisting && $.fancybox.close(!0), $("body").addClass("fancybox-active"), 
            !$.fancybox.getInstance() && !1 !== firstItemOpts.hideScrollbar && !$.fancybox.isMobile && document.body.scrollHeight > window.innerHeight && ($("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:' + (window.innerWidth - document.documentElement.clientWidth) + "px;}</style>"), 
            $("body").addClass("compensate-for-scrollbar")), buttonStr = "", $.each(firstItemOpts.buttons, function(index, value) {
                buttonStr += firstItemOpts.btnTpl[value] || "";
            }), $container = $(self.translate(self, firstItemOpts.baseTpl.replace("{{buttons}}", buttonStr).replace("{{arrows}}", firstItemOpts.btnTpl.arrowLeft + firstItemOpts.btnTpl.arrowRight))).attr("id", "fancybox-container-" + self.id).addClass(firstItemOpts.baseClass).data("FancyBox", self).appendTo(firstItemOpts.parentEl), 
            self.$refs = {
                container: $container
            }, [ "bg", "inner", "infobar", "toolbar", "stage", "caption", "navigation" ].forEach(function(item) {
                self.$refs[item] = $container.find(".fancybox-" + item);
            }), self.trigger("onInit"), self.activate(), self.jumpTo(self.currIndex);
        },
        translate: function(obj, str) {
            var arr = obj.opts.i18n[obj.opts.lang] || obj.opts.i18n.en;
            return str.replace(/\{\{(\w+)\}\}/g, function(match, n) {
                return void 0 === arr[n] ? match : arr[n];
            });
        },
        addContent: function(content) {
            var self = this, content = $.makeArray(content);
            $.each(content, function(i, item) {
                var $item, found, obj = {}, opts = {};
                $.isPlainObject(item) ? opts = (obj = item).opts || item : "object" === $.type(item) && $(item).length ? (opts = ($item = $(item)).data() || {}, 
                (opts = $.extend(!0, {}, opts, opts.options)).$orig = $item, obj.src = self.opts.src || opts.src || $item.attr("href"), 
                obj.type || obj.src || (obj.type = "inline", obj.src = item)) : obj = {
                    type: "html",
                    src: item + ""
                }, obj.opts = $.extend(!0, {}, self.opts, opts), $.isArray(opts.buttons) && (obj.opts.buttons = opts.buttons), 
                $.fancybox.isMobile && obj.opts.mobile && (obj.opts = mergeOpts(obj.opts, obj.opts.mobile)), 
                $item = obj.type || obj.opts.type, opts = obj.src || "", !$item && opts && ((found = opts.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i)) ? ($item = "video", 
                obj.opts.video.format || (obj.opts.video.format = "video/" + ("ogv" === found[1] ? "ogg" : found[1]))) : opts.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i) ? $item = "image" : opts.match(/\.(pdf)((\?|#).*)?$/i) ? obj = $.extend(!0, obj, {
                    contentType: "pdf",
                    opts: {
                        iframe: {
                            preload: !($item = "iframe")
                        }
                    }
                }) : "#" === opts.charAt(0) && ($item = "inline")), $item ? obj.type = $item : self.trigger("objectNeedsType", obj), 
                obj.contentType || (obj.contentType = -1 < $.inArray(obj.type, [ "html", "inline", "ajax" ]) ? "html" : obj.type), 
                obj.index = self.group.length, "auto" == obj.opts.smallBtn && (obj.opts.smallBtn = -1 < $.inArray(obj.type, [ "html", "inline", "ajax" ])), 
                "auto" === obj.opts.toolbar && (obj.opts.toolbar = !obj.opts.smallBtn), 
                obj.$thumb = obj.opts.$thumb || null, obj.opts.$trigger && obj.index === self.opts.index && (obj.$thumb = obj.opts.$trigger.find("img:first"), 
                obj.$thumb.length && (obj.opts.$orig = obj.opts.$trigger)), obj.$thumb && obj.$thumb.length || !obj.opts.$orig || (obj.$thumb = obj.opts.$orig.find("img:first")), 
                obj.$thumb && !obj.$thumb.length && (obj.$thumb = null), obj.thumb = obj.opts.thumb || (obj.$thumb ? obj.$thumb[0].src : null), 
                "function" === $.type(obj.opts.caption) && (obj.opts.caption = obj.opts.caption.apply(item, [ self, obj ])), 
                "function" === $.type(self.opts.caption) && (obj.opts.caption = self.opts.caption.apply(item, [ self, obj ])), 
                obj.opts.caption instanceof $ || (obj.opts.caption = void 0 === obj.opts.caption ? "" : obj.opts.caption + ""), 
                "ajax" === obj.type && 1 < (found = opts.split(/\s+/, 2)).length && (obj.src = found.shift(), 
                obj.opts.filter = found.shift()), obj.opts.modal && (obj.opts = $.extend(!0, obj.opts, {
                    trapFocus: !0,
                    infobar: 0,
                    toolbar: 0,
                    smallBtn: 0,
                    keyboard: 0,
                    slideShow: 0,
                    fullScreen: 0,
                    thumbs: 0,
                    touch: 0,
                    clickContent: !1,
                    clickSlide: !1,
                    clickOutside: !1,
                    dblclickContent: !1,
                    dblclickSlide: !1,
                    dblclickOutside: !1
                })), self.group.push(obj);
            }), Object.keys(self.slides).length && (self.updateControls(), (content = self.Thumbs) && content.isActive && (content.create(), 
            content.focus()));
        },
        addEvents: function() {
            var self = this;
            self.removeEvents(), self.$refs.container.on("click.fb-close", "[data-fancybox-close]", function(e) {
                e.stopPropagation(), e.preventDefault(), self.close(e);
            }).on("touchstart.fb-prev click.fb-prev", "[data-fancybox-prev]", function(e) {
                e.stopPropagation(), e.preventDefault(), self.previous();
            }).on("touchstart.fb-next click.fb-next", "[data-fancybox-next]", function(e) {
                e.stopPropagation(), e.preventDefault(), self.next();
            }).on("click.fb", "[data-fancybox-zoom]", function(e) {
                self[self.isScaledDown() ? "scaleToActual" : "scaleToFit"]();
            }), $W.on("orientationchange.fb resize.fb", function(e) {
                e && e.originalEvent && "resize" === e.originalEvent.type ? (self.requestId && cancelAFrame(self.requestId), 
                self.requestId = requestAFrame(function() {
                    self.update(e);
                })) : (self.current && "iframe" === self.current.type && self.$refs.stage.hide(), 
                setTimeout(function() {
                    self.$refs.stage.show(), self.update(e);
                }, $.fancybox.isMobile ? 600 : 250));
            }), $D.on("keydown.fb", function(e) {
                var current = ($.fancybox ? $.fancybox.getInstance() : null).current, keycode = e.keyCode || e.which;
                if (9 == keycode) current.opts.trapFocus && self.focus(e); else if (!(!current.opts.keyboard || e.ctrlKey || e.altKey || e.shiftKey || $(e.target).is("input,textarea,video,audio,select"))) return 8 === keycode || 27 === keycode ? (e.preventDefault(), 
                void self.close(e)) : 37 === keycode || 38 === keycode ? (e.preventDefault(), 
                void self.previous()) : 39 === keycode || 40 === keycode ? (e.preventDefault(), 
                void self.next()) : void self.trigger("afterKeydown", e, keycode);
            }), self.group[self.currIndex].opts.idleTime && (self.idleSecondsCounter = 0, 
            $D.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle", function(e) {
                self.idleSecondsCounter = 0, self.isIdle && self.showControls(), 
                self.isIdle = !1;
            }), self.idleInterval = window.setInterval(function() {
                self.idleSecondsCounter++, self.idleSecondsCounter >= self.group[self.currIndex].opts.idleTime && !self.isDragging && (self.isIdle = !0, 
                self.idleSecondsCounter = 0, self.hideControls());
            }, 1e3));
        },
        removeEvents: function() {
            $W.off("orientationchange.fb resize.fb"), $D.off("keydown.fb .fb-idle"), 
            this.$refs.container.off(".fb-close .fb-prev .fb-next"), this.idleInterval && (window.clearInterval(this.idleInterval), 
            this.idleInterval = null);
        },
        previous: function(duration) {
            return this.jumpTo(this.currPos - 1, duration);
        },
        next: function(duration) {
            return this.jumpTo(this.currPos + 1, duration);
        },
        jumpTo: function(pos, duration) {
            var firstRun, loop, current, previous, slidePos, stagePos, prop, diff, self = this, groupLen = self.group.length;
            if (!(self.isDragging || self.isClosing || self.isAnimating && self.firstRun)) return pos = parseInt(pos, 10), 
            !(!(loop = (self.current || self).opts.loop) && (pos < 0 || groupLen <= pos)) && (firstRun = self.firstRun = !Object.keys(self.slides).length, 
            previous = self.current, self.prevIndex = self.currIndex, self.prevPos = self.currPos, 
            current = self.createSlide(pos), 1 < groupLen && ((loop || current.index < groupLen - 1) && self.createSlide(pos + 1), 
            (loop || 0 < current.index) && self.createSlide(pos - 1)), self.current = current, 
            self.currIndex = current.index, self.currPos = current.pos, self.trigger("beforeShow", firstRun), 
            self.updateControls(), current.forcedDuration = void 0, $.isNumeric(duration) ? current.forcedDuration = duration : duration = current.opts[firstRun ? "animationDuration" : "transitionDuration"], 
            duration = parseInt(duration, 10), groupLen = self.isMoved(current), 
            current.$slide.addClass("fancybox-slide--current"), firstRun ? (current.opts.animationEffect && duration && self.$refs.container.css("transition-duration", duration + "ms"), 
            self.$refs.container.addClass("fancybox-is-open").trigger("focus"), 
            self.loadSlide(current)) : (slidePos = $.fancybox.getTranslate(previous.$slide), 
            stagePos = $.fancybox.getTranslate(self.$refs.stage), $.each(self.slides, function(index, slide) {
                $.fancybox.stop(slide.$slide, !0);
            }), previous.pos !== current.pos && (previous.isComplete = !1), previous.$slide.removeClass("fancybox-slide--complete fancybox-slide--current"), 
            groupLen ? (diff = slidePos.left - (previous.pos * slidePos.width + previous.pos * previous.opts.gutter), 
            $.each(self.slides, function(index, slide) {
                slide.$slide.removeClass("fancybox-animated").removeClass(function(index, className) {
                    return (className.match(/(^|\s)fancybox-fx-\S+/g) || []).join(" ");
                });
                var leftPos = slide.pos * slidePos.width + slide.pos * slide.opts.gutter;
                $.fancybox.setTranslate(slide.$slide, {
                    top: 0,
                    left: leftPos - stagePos.left + diff
                }), slide.pos !== current.pos && slide.$slide.addClass("fancybox-slide--" + (slide.pos > current.pos ? "next" : "previous")), 
                forceRedraw(slide.$slide), $.fancybox.animate(slide.$slide, {
                    top: 0,
                    left: (slide.pos - current.pos) * slidePos.width + (slide.pos - current.pos) * slide.opts.gutter
                }, duration, function() {
                    slide.$slide.css({
                        transform: "",
                        opacity: ""
                    }).removeClass("fancybox-slide--next fancybox-slide--previous"), 
                    slide.pos === self.currPos && self.complete();
                });
            })) : duration && current.opts.transitionEffect && (prop = "fancybox-animated fancybox-fx-" + current.opts.transitionEffect, 
            previous.$slide.addClass("fancybox-slide--" + (previous.pos > current.pos ? "next" : "previous")), 
            $.fancybox.animate(previous.$slide, prop, duration, function() {
                previous.$slide.removeClass(prop).removeClass("fancybox-slide--next fancybox-slide--previous");
            }, !1)), current.isLoaded ? self.revealContent(current) : self.loadSlide(current)), 
            void self.preload("image"));
        },
        createSlide: function(pos) {
            var $slide, index = pos % this.group.length;
            return index = index < 0 ? this.group.length + index : index, !this.slides[pos] && this.group[index] && ($slide = $('<div class="fancybox-slide"></div>').appendTo(this.$refs.stage), 
            this.slides[pos] = $.extend(!0, {}, this.group[index], {
                pos: pos,
                $slide: $slide,
                isLoaded: !1
            }), this.updateSlide(this.slides[pos])), this.slides[pos];
        },
        scaleToActual: function(x, y, duration) {
            var imgPos, posX, posY, scaleY, self = this, current = self.current, $content = current.$content, canvasWidth = $.fancybox.getTranslate(current.$slide).width, canvasHeight = $.fancybox.getTranslate(current.$slide).height, newImgWidth = current.width, newImgHeight = current.height;
            self.isAnimating || self.isMoved() || !$content || "image" != current.type || !current.isLoaded || current.hasError || (self.isAnimating = !0, 
            $.fancybox.stop($content), x = void 0 === x ? .5 * canvasWidth : x, 
            y = void 0 === y ? .5 * canvasHeight : y, (imgPos = $.fancybox.getTranslate($content)).top -= $.fancybox.getTranslate(current.$slide).top, 
            imgPos.left -= $.fancybox.getTranslate(current.$slide).left, current = newImgWidth / imgPos.width, 
            scaleY = newImgHeight / imgPos.height, posX = .5 * canvasWidth - .5 * newImgWidth, 
            posY = .5 * canvasHeight - .5 * newImgHeight, canvasWidth < newImgWidth && (posX = 0 < (posX = imgPos.left * current - (x * current - x)) ? 0 : posX) < canvasWidth - newImgWidth && (posX = canvasWidth - newImgWidth), 
            canvasHeight < newImgHeight && (posY = 0 < (posY = imgPos.top * scaleY - (y * scaleY - y)) ? 0 : posY) < canvasHeight - newImgHeight && (posY = canvasHeight - newImgHeight), 
            self.updateCursor(newImgWidth, newImgHeight), $.fancybox.animate($content, {
                top: posY,
                left: posX,
                scaleX: current,
                scaleY: scaleY
            }, duration || 366, function() {
                self.isAnimating = !1;
            }), self.SlideShow && self.SlideShow.isActive && self.SlideShow.stop());
        },
        scaleToFit: function(duration) {
            var self = this, current = self.current, $content = current.$content;
            self.isAnimating || self.isMoved() || !$content || "image" != current.type || !current.isLoaded || current.hasError || (self.isAnimating = !0, 
            $.fancybox.stop($content), current = self.getFitPos(current), self.updateCursor(current.width, current.height), 
            $.fancybox.animate($content, {
                top: current.top,
                left: current.left,
                scaleX: current.width / $content.width(),
                scaleY: current.height / $content.height()
            }, duration || 366, function() {
                self.isAnimating = !1;
            }));
        },
        getFitPos: function(slide) {
            var maxWidth, maxHeight, $content = slide.$content, $slide = slide.$slide, width = slide.width || slide.opts.width, height = slide.height || slide.opts.height, rez = {};
            return !!(slide.isLoaded && $content && $content.length) && (maxWidth = $.fancybox.getTranslate(this.$refs.stage).width, 
            maxHeight = $.fancybox.getTranslate(this.$refs.stage).height, maxWidth -= parseFloat($slide.css("paddingLeft")) + parseFloat($slide.css("paddingRight")) + parseFloat($content.css("marginLeft")) + parseFloat($content.css("marginRight")), 
            maxHeight -= parseFloat($slide.css("paddingTop")) + parseFloat($slide.css("paddingBottom")) + parseFloat($content.css("marginTop")) + parseFloat($content.css("marginBottom")), 
            width && height || (width = maxWidth, height = maxHeight), maxWidth - .5 < (width *= $content = Math.min(1, maxWidth / width, maxHeight / height)) && (width = maxWidth), 
            maxHeight - .5 < (height *= $content) && (height = maxHeight), "image" === slide.type ? (rez.top = Math.floor(.5 * (maxHeight - height)) + parseFloat($slide.css("paddingTop")), 
            rez.left = Math.floor(.5 * (maxWidth - width)) + parseFloat($slide.css("paddingLeft"))) : "video" === slide.contentType && (width / ($content = slide.opts.width && slide.opts.height ? width / height : slide.opts.ratio || 16 / 9) < height ? height = width / $content : height * $content < width && (width = height * $content)), 
            rez.width = width, rez.height = height, rez);
        },
        update: function(e) {
            var self = this;
            $.each(self.slides, function(key, slide) {
                self.updateSlide(slide, e);
            });
        },
        updateSlide: function(slide, e) {
            var $content = slide && slide.$content, width = slide.width || slide.opts.width, height = slide.height || slide.opts.height, $slide = slide.$slide;
            this.adjustCaption(slide), $content && (width || height || "video" === slide.contentType) && !slide.hasError && ($.fancybox.stop($content), 
            $.fancybox.setTranslate($content, this.getFitPos(slide)), slide.pos === this.currPos && (this.isAnimating = !1, 
            this.updateCursor())), this.adjustLayout(slide), $slide.length && ($slide.trigger("refresh"), 
            slide.pos === this.currPos && this.$refs.toolbar.add(this.$refs.navigation.find(".fancybox-button--arrow_right")).toggleClass("compensate-for-scrollbar", $slide.get(0).scrollHeight > $slide.get(0).clientHeight)), 
            this.trigger("onUpdate", slide, e);
        },
        centerSlide: function(duration) {
            var self = this, current = self.current, $slide = current.$slide;
            !self.isClosing && current && ($slide.siblings().css({
                transform: "",
                opacity: ""
            }), $slide.parent().children().removeClass("fancybox-slide--previous fancybox-slide--next"), 
            $.fancybox.animate($slide, {
                top: 0,
                left: 0,
                opacity: 1
            }, void 0 === duration ? 0 : duration, function() {
                $slide.css({
                    transform: "",
                    opacity: ""
                }), current.isComplete || self.complete();
            }, !1));
        },
        isMoved: function(slide) {
            var slidePos, stagePos, slide = slide || this.current;
            return !!slide && (stagePos = $.fancybox.getTranslate(this.$refs.stage), 
            slidePos = $.fancybox.getTranslate(slide.$slide), !slide.$slide.hasClass("fancybox-animated") && (.5 < Math.abs(slidePos.top - stagePos.top) || .5 < Math.abs(slidePos.left - stagePos.left)));
        },
        updateCursor: function(nextWidth, nextHeight) {
            var current = this.current, $container = this.$refs.container;
            current && !this.isClosing && this.Guestures && ($container.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"), 
            nextHeight = !!(nextWidth = this.canPan(nextWidth, nextHeight)) || this.isZoomable(), 
            $container.toggleClass("fancybox-is-zoomable", nextHeight), $("[data-fancybox-zoom]").prop("disabled", !nextHeight), 
            nextWidth ? $container.addClass("fancybox-can-pan") : nextHeight && ("zoom" === current.opts.clickContent || $.isFunction(current.opts.clickContent) && "zoom" == current.opts.clickContent(current)) ? $container.addClass("fancybox-can-zoomIn") : current.opts.touch && (current.opts.touch.vertical || 1 < this.group.length) && "video" !== current.contentType && $container.addClass("fancybox-can-swipe"));
        },
        isZoomable: function() {
            var fitPos, current = this.current;
            if (current && !this.isClosing && "image" === current.type && !current.hasError) {
                if (!current.isLoaded) return !0;
                if ((fitPos = this.getFitPos(current)) && (current.width > fitPos.width || current.height > fitPos.height)) return !0;
            }
            return !1;
        },
        isScaledDown: function(nextWidth, nextHeight) {
            var rez = !1, current = this.current, $content = current.$content;
            return void 0 !== nextWidth && void 0 !== nextHeight ? rez = nextWidth < current.width && nextHeight < current.height : $content && (rez = (rez = $.fancybox.getTranslate($content)).width < current.width && rez.height < current.height), 
            rez;
        },
        canPan: function(nextWidth, nextHeight) {
            var current = this.current, pos = null, rez = !1;
            return "image" === current.type && (current.isComplete || nextWidth && nextHeight) && !current.hasError && (rez = this.getFitPos(current), 
            void 0 !== nextWidth && void 0 !== nextHeight ? pos = {
                width: nextWidth,
                height: nextHeight
            } : current.isComplete && (pos = $.fancybox.getTranslate(current.$content)), 
            pos && rez && (rez = 1.5 < Math.abs(pos.width - rez.width) || 1.5 < Math.abs(pos.height - rez.height))), 
            rez;
        },
        loadSlide: function(slide) {
            var type, $slide, ajaxLoad, self = this;
            if (!slide.isLoading && !slide.isLoaded) {
                if (!(slide.isLoading = !0) === self.trigger("beforeLoad", slide)) return slide.isLoading = !1;
                switch (type = slide.type, ($slide = slide.$slide).off("refresh").trigger("onReset").addClass(slide.opts.slideClass), 
                type) {
                  case "image":
                    self.setImage(slide);
                    break;

                  case "iframe":
                    self.setIframe(slide);
                    break;

                  case "html":
                    self.setContent(slide, slide.src || slide.content);
                    break;

                  case "video":
                    self.setContent(slide, slide.opts.video.tpl.replace(/\{\{src\}\}/gi, slide.src).replace("{{format}}", slide.opts.videoFormat || slide.opts.video.format || "").replace("{{poster}}", slide.thumb || ""));
                    break;

                  case "inline":
                    $(slide.src).length ? self.setContent(slide, $(slide.src)) : self.setError(slide);
                    break;

                  case "ajax":
                    self.showLoading(slide), ajaxLoad = $.ajax($.extend({}, slide.opts.ajax.settings, {
                        url: slide.src,
                        success: function(data, textStatus) {
                            "success" === textStatus && self.setContent(slide, data);
                        },
                        error: function(jqXHR, textStatus) {
                            jqXHR && "abort" !== textStatus && self.setError(slide);
                        }
                    })), $slide.one("onReset", function() {
                        ajaxLoad.abort();
                    });
                    break;

                  default:
                    self.setError(slide);
                }
                return !0;
            }
        },
        setImage: function(slide) {
            var ghost, self = this;
            setTimeout(function() {
                var $img = slide.$image;
                self.isClosing || !slide.isLoading || $img && $img.length && $img[0].complete || slide.hasError || self.showLoading(slide);
            }, 50), self.checkSrcset(slide), slide.$content = $('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(slide.$slide.addClass("fancybox-slide--image")), 
            !1 !== slide.opts.preload && slide.opts.width && slide.opts.height && slide.thumb && (slide.width = slide.opts.width, 
            slide.height = slide.opts.height, (ghost = document.createElement("img")).onerror = function() {
                $(this).remove(), slide.$ghost = null;
            }, ghost.onload = function() {
                self.afterLoad(slide);
            }, slide.$ghost = $(ghost).addClass("fancybox-image").appendTo(slide.$content).attr("src", slide.thumb)), 
            self.setBigImage(slide);
        },
        checkSrcset: function(slide) {
            var found, temp, pxRatio, windowWidth, srcset = slide.opts.srcset || slide.opts.image.srcset;
            if (srcset) {
                pxRatio = window.devicePixelRatio || 1, windowWidth = window.innerWidth * pxRatio, 
                (temp = srcset.split(",").map(function(el) {
                    var ret = {};
                    return el.trim().split(/\s+/).forEach(function(el, i) {
                        var value = parseInt(el.substring(0, el.length - 1), 10);
                        if (0 === i) return ret.url = el;
                        value && (ret.value = value, ret.postfix = el[el.length - 1]);
                    }), ret;
                })).sort(function(a, b) {
                    return a.value - b.value;
                });
                for (var j = 0; j < temp.length; j++) {
                    var el = temp[j];
                    if ("w" === el.postfix && el.value >= windowWidth || "x" === el.postfix && el.value >= pxRatio) {
                        found = el;
                        break;
                    }
                }
                (found = !found && temp.length ? temp[temp.length - 1] : found) && (slide.src = found.url, 
                slide.width && slide.height && "w" == found.postfix && (slide.height = slide.width / slide.height * found.value, 
                slide.width = found.value), slide.opts.srcset = srcset);
            }
        },
        setBigImage: function(slide) {
            var self = this, img = document.createElement("img"), $img = $(img);
            slide.$image = $img.one("error", function() {
                self.setError(slide);
            }).one("load", function() {
                var sizes;
                slide.$ghost || (self.resolveImageSlideSize(slide, this.naturalWidth, this.naturalHeight), 
                self.afterLoad(slide)), self.isClosing || (slide.opts.srcset && ((sizes = slide.opts.sizes) && "auto" !== sizes || (sizes = (1 < slide.width / slide.height && 1 < $W.width() / $W.height() ? "100" : Math.round(slide.width / slide.height * 100)) + "vw"), 
                $img.attr("sizes", sizes).attr("srcset", slide.opts.srcset)), slide.$ghost && setTimeout(function() {
                    slide.$ghost && !self.isClosing && slide.$ghost.hide();
                }, Math.min(300, Math.max(1e3, slide.height / 1600))), self.hideLoading(slide));
            }).addClass("fancybox-image").attr("src", slide.src).appendTo(slide.$content), 
            (img.complete || "complete" == img.readyState) && $img.naturalWidth && $img.naturalHeight ? $img.trigger("load") : img.error && $img.trigger("error");
        },
        resolveImageSlideSize: function(slide, imgWidth, imgHeight) {
            var maxWidth = parseInt(slide.opts.width, 10), maxHeight = parseInt(slide.opts.height, 10);
            slide.width = imgWidth, slide.height = imgHeight, 0 < maxWidth && (slide.width = maxWidth, 
            slide.height = Math.floor(maxWidth * imgHeight / imgWidth)), 0 < maxHeight && (slide.width = Math.floor(maxHeight * imgWidth / imgHeight), 
            slide.height = maxHeight);
        },
        setIframe: function(slide) {
            var $iframe, self = this, opts = slide.opts.iframe, $slide = slide.$slide;
            slide.$content = $('<div class="fancybox-content' + (opts.preload ? " fancybox-is-hidden" : "") + '"></div>').css(opts.css).appendTo($slide), 
            $slide.addClass("fancybox-slide--" + slide.contentType), slide.$iframe = $iframe = $(opts.tpl.replace(/\{rnd\}/g, new Date().getTime())).attr(opts.attr).appendTo(slide.$content), 
            opts.preload ? (self.showLoading(slide), $iframe.on("load.fb error.fb", function(e) {
                this.isReady = 1, slide.$slide.trigger("refresh"), self.afterLoad(slide);
            }), $slide.on("refresh.fb", function() {
                var $body, $content = slide.$content, frameWidth = opts.css.width, frameHeight = opts.css.height;
                if (1 === $iframe[0].isReady) {
                    try {
                        $body = $iframe.contents().find("body");
                    } catch (ignore) {}
                    $body && $body.length && $body.children().length && ($slide.css("overflow", "visible"), 
                    $content.css({
                        width: "100%",
                        "max-width": "100%",
                        height: "9999px"
                    }), void 0 === frameWidth && (frameWidth = Math.ceil(Math.max($body[0].clientWidth, $body.outerWidth(!0)))), 
                    $content.css("width", frameWidth || "").css("max-width", ""), 
                    void 0 === frameHeight && (frameHeight = Math.ceil(Math.max($body[0].clientHeight, $body.outerHeight(!0)))), 
                    $content.css("height", frameHeight || ""), $slide.css("overflow", "auto")), 
                    $content.removeClass("fancybox-is-hidden");
                }
            })) : self.afterLoad(slide), $iframe.attr("src", slide.src), $slide.one("onReset", function() {
                try {
                    $(this).find("iframe").hide().unbind().attr("src", "//about:blank");
                } catch (ignore) {}
                $(this).off("refresh.fb").empty(), slide.isLoaded = !1, slide.isRevealed = !1;
            });
        },
        setContent: function(slide, content) {
            var obj;
            this.isClosing || (this.hideLoading(slide), slide.$content && $.fancybox.stop(slide.$content), 
            slide.$slide.empty(), (obj = content) && obj.hasOwnProperty && obj instanceof $ && content.parent().length ? ((content.hasClass("fancybox-content") || content.parent().hasClass("fancybox-content")) && content.parents(".fancybox-slide").trigger("onReset"), 
            slide.$placeholder = $("<div>").hide().insertAfter(content), content.css("display", "inline-block")) : slide.hasError || ("string" === $.type(content) && (content = $("<div>").append($.trim(content)).contents()), 
            slide.opts.filter && (content = $("<div>").html(content).find(slide.opts.filter))), 
            slide.$slide.one("onReset", function() {
                $(this).find("video,audio").trigger("pause"), slide.$placeholder && (slide.$placeholder.after(content.removeClass("fancybox-content").hide()).remove(), 
                slide.$placeholder = null), slide.$smallBtn && (slide.$smallBtn.remove(), 
                slide.$smallBtn = null), slide.hasError || ($(this).empty(), slide.isLoaded = !1, 
                slide.isRevealed = !1);
            }), $(content).appendTo(slide.$slide), $(content).is("video,audio") && ($(content).addClass("fancybox-video"), 
            $(content).wrap("<div></div>"), slide.contentType = "video", slide.opts.width = slide.opts.width || $(content).attr("width"), 
            slide.opts.height = slide.opts.height || $(content).attr("height")), 
            slide.$content = slide.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first(), 
            slide.$content.siblings().hide(), slide.$content.length || (slide.$content = slide.$slide.wrapInner("<div></div>").children().first()), 
            slide.$content.addClass("fancybox-content"), slide.$slide.addClass("fancybox-slide--" + slide.contentType), 
            this.afterLoad(slide));
        },
        setError: function(slide) {
            slide.hasError = !0, slide.$slide.trigger("onReset").removeClass("fancybox-slide--" + slide.contentType).addClass("fancybox-slide--error"), 
            slide.contentType = "html", this.setContent(slide, this.translate(slide, slide.opts.errorTpl)), 
            slide.pos === this.currPos && (this.isAnimating = !1);
        },
        showLoading: function(slide) {
            (slide = slide || this.current) && !slide.$spinner && (slide.$spinner = $(this.translate(this, this.opts.spinnerTpl)).appendTo(slide.$slide).hide().fadeIn("fast"));
        },
        hideLoading: function(slide) {
            (slide = slide || this.current) && slide.$spinner && (slide.$spinner.stop().remove(), 
            delete slide.$spinner);
        },
        afterLoad: function(slide) {
            this.isClosing || (slide.isLoading = !1, slide.isLoaded = !0, this.trigger("afterLoad", slide), 
            this.hideLoading(slide), !slide.opts.smallBtn || slide.$smallBtn && slide.$smallBtn.length || (slide.$smallBtn = $(this.translate(slide, slide.opts.btnTpl.smallBtn)).appendTo(slide.$content)), 
            slide.opts.protect && slide.$content && !slide.hasError && (slide.$content.on("contextmenu.fb", function(e) {
                return 2 == e.button && e.preventDefault(), !0;
            }), "image" === slide.type && $('<div class="fancybox-spaceball"></div>').appendTo(slide.$content)), 
            this.adjustCaption(slide), this.adjustLayout(slide), slide.pos === this.currPos && this.updateCursor(), 
            this.revealContent(slide));
        },
        adjustCaption: function(slide) {
            var slide = slide || this.current, caption = slide.opts.caption, preventOverlap = slide.opts.preventCaptionOverlap, $caption = this.$refs.caption, captionH = !1;
            $caption.toggleClass("fancybox-caption--separate", preventOverlap), 
            preventOverlap && caption && caption.length && (slide.pos !== this.currPos ? ((preventOverlap = $caption.clone().appendTo($caption.parent())).children().eq(0).empty().html(caption), 
            captionH = preventOverlap.outerHeight(!0), preventOverlap.empty().remove()) : this.$caption && (captionH = this.$caption.outerHeight(!0)), 
            slide.$slide.css("padding-bottom", captionH || ""));
        },
        adjustLayout: function(slide) {
            var scrollHeight, marginBottom, inlinePadding, actualPadding, slide = slide || this.current;
            slide.isLoaded && !0 !== slide.opts.disableLayoutFix && (slide.$content.css("margin-bottom", ""), 
            slide.$content.outerHeight() > slide.$slide.height() + .5 && (inlinePadding = slide.$slide[0].style["padding-bottom"], 
            actualPadding = slide.$slide.css("padding-bottom"), 0 < parseFloat(actualPadding) && (scrollHeight = slide.$slide[0].scrollHeight, 
            slide.$slide.css("padding-bottom", 0), Math.abs(scrollHeight - slide.$slide[0].scrollHeight) < 1 && (marginBottom = actualPadding), 
            slide.$slide.css("padding-bottom", inlinePadding))), slide.$content.css("margin-bottom", marginBottom));
        },
        revealContent: function(slide) {
            var effect, effectClassName, duration, opacity, self = this, $slide = slide.$slide, end = !1, start = !1, isMoved = self.isMoved(slide), isRevealed = slide.isRevealed;
            return slide.isRevealed = !0, effect = slide.opts[self.firstRun ? "animationEffect" : "transitionEffect"], 
            duration = slide.opts[self.firstRun ? "animationDuration" : "transitionDuration"], 
            duration = parseInt(void 0 === slide.forcedDuration ? duration : slide.forcedDuration, 10), 
            "zoom" === (effect = !isMoved && slide.pos === self.currPos && duration ? effect : !1) && (slide.pos === self.currPos && duration && "image" === slide.type && !slide.hasError && (start = self.getThumbPos(slide)) ? end = self.getFitPos(slide) : effect = "fade"), 
            "zoom" === effect ? (self.isAnimating = !0, end.scaleX = end.width / start.width, 
            end.scaleY = end.height / start.height, (opacity = "auto" == (opacity = slide.opts.zoomOpacity) ? .1 < Math.abs(slide.width / slide.height - start.width / start.height) : opacity) && (start.opacity = .1, 
            end.opacity = 1), $.fancybox.setTranslate(slide.$content.removeClass("fancybox-is-hidden"), start), 
            forceRedraw(slide.$content), void $.fancybox.animate(slide.$content, end, duration, function() {
                self.isAnimating = !1, self.complete();
            })) : (self.updateSlide(slide), effect ? ($.fancybox.stop($slide), effectClassName = "fancybox-slide--" + (slide.pos >= self.prevPos ? "next" : "previous") + " fancybox-animated fancybox-fx-" + effect, 
            $slide.addClass(effectClassName).removeClass("fancybox-slide--current"), 
            slide.$content.removeClass("fancybox-is-hidden"), forceRedraw($slide), 
            "image" !== slide.type && slide.$content.hide().show(0), void $.fancybox.animate($slide, "fancybox-slide--current", duration, function() {
                $slide.removeClass(effectClassName).css({
                    transform: "",
                    opacity: ""
                }), slide.pos === self.currPos && self.complete();
            }, !0)) : (slide.$content.removeClass("fancybox-is-hidden"), isRevealed || !isMoved || "image" !== slide.type || slide.hasError || slide.$content.hide().fadeIn("fast"), 
            void (slide.pos === self.currPos && self.complete())));
        },
        getThumbPos: function(slide) {
            var brw, bbw, elem, elemCenter, slide = slide.$thumb;
            return !!(slide && (elem = slide[0]) && elem.ownerDocument === document && ($(".fancybox-container").css("pointer-events", "none"), 
            elemCenter = {
                x: elem.getBoundingClientRect().left + elem.offsetWidth / 2,
                y: elem.getBoundingClientRect().top + elem.offsetHeight / 2
            }, elemCenter = document.elementFromPoint(elemCenter.x, elemCenter.y) === elem, 
            $(".fancybox-container").css("pointer-events", ""), elemCenter)) && (elem = $.fancybox.getTranslate(slide), 
            elemCenter = parseFloat(slide.css("border-top-width") || 0), brw = parseFloat(slide.css("border-right-width") || 0), 
            bbw = parseFloat(slide.css("border-bottom-width") || 0), slide = parseFloat(slide.css("border-left-width") || 0), 
            brw = {
                top: elem.top + elemCenter,
                left: elem.left + slide,
                width: elem.width - brw - slide,
                height: elem.height - elemCenter - bbw,
                scaleX: 1,
                scaleY: 1
            }, 0 < elem.width && 0 < elem.height && brw);
        },
        complete: function() {
            var $el, self = this, current = self.current, slides = {};
            !self.isMoved() && current.isLoaded && (current.isComplete || (current.isComplete = !0, 
            current.$slide.siblings().trigger("onReset"), self.preload("inline"), 
            forceRedraw(current.$slide), current.$slide.addClass("fancybox-slide--complete"), 
            $.each(self.slides, function(key, slide) {
                slide.pos >= self.currPos - 1 && slide.pos <= self.currPos + 1 ? slides[slide.pos] = slide : slide && ($.fancybox.stop(slide.$slide), 
                slide.$slide.off().remove());
            }), self.slides = slides), self.isAnimating = !1, self.updateCursor(), 
            self.trigger("afterShow"), current.opts.video.autoStart && current.$slide.find("video,audio").filter(":visible:first").trigger("play").one("ended", function() {
                Document.exitFullscreen ? Document.exitFullscreen() : this.webkitExitFullscreen && this.webkitExitFullscreen(), 
                self.next();
            }), current.opts.autoFocus && "html" === current.contentType && (($el = current.$content.find("input[autofocus]:enabled:visible:first")).length ? $el.trigger("focus") : self.focus(null, !0)), 
            current.$slide.scrollTop(0).scrollLeft(0));
        },
        preload: function(type) {
            var prev, next;
            this.group.length < 2 || (next = this.slides[this.currPos + 1], (prev = this.slides[this.currPos - 1]) && prev.type === type && this.loadSlide(prev), 
            next && next.type === type && this.loadSlide(next));
        },
        focus: function(e, firstRun) {
            var focusableStr = [ "a[href]", "area[href]", 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', "select:not([disabled]):not([aria-hidden])", "textarea:not([disabled]):not([aria-hidden])", "button:not([disabled]):not([aria-hidden])", "iframe", "object", "embed", "video", "audio", "[contenteditable]", '[tabindex]:not([tabindex^="-"])' ].join(",");
            this.isClosing || ((firstRun = (firstRun = !e && this.current && this.current.isComplete ? this.current.$slide.find("*:visible" + (firstRun ? ":not(.fancybox-close-small)" : "")) : this.$refs.container.find("*:visible")).filter(focusableStr).filter(function() {
                return "hidden" !== $(this).css("visibility") && !$(this).hasClass("disabled");
            })).length ? (focusableStr = firstRun.index(document.activeElement), 
            e && e.shiftKey ? (focusableStr < 0 || 0 == focusableStr) && (e.preventDefault(), 
            firstRun.eq(firstRun.length - 1).trigger("focus")) : (focusableStr < 0 || focusableStr == firstRun.length - 1) && (e && e.preventDefault(), 
            firstRun.eq(0).trigger("focus"))) : this.$refs.container.trigger("focus"));
        },
        activate: function() {
            var self = this;
            $(".fancybox-container").each(function() {
                var instance = $(this).data("FancyBox");
                instance && instance.id !== self.id && !instance.isClosing && (instance.trigger("onDeactivate"), 
                instance.removeEvents(), instance.isVisible = !1);
            }), self.isVisible = !0, (self.current || self.isIdle) && (self.update(), 
            self.updateControls()), self.trigger("onActivate"), self.addEvents();
        },
        close: function(e, d) {
            function done() {
                self.cleanUp(e);
            }
            var effect, $content, opacity, domRect, end, self = this, current = self.current;
            return !self.isClosing && (!(self.isClosing = !0) === self.trigger("beforeClose", e) ? (self.isClosing = !1, 
            requestAFrame(function() {
                self.update();
            }), !1) : (self.removeEvents(), $content = current.$content, effect = current.opts.animationEffect, 
            d = $.isNumeric(d) ? d : effect ? current.opts.animationDuration : 0, 
            current.$slide.removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"), 
            !0 !== e ? $.fancybox.stop(current.$slide) : effect = !1, current.$slide.siblings().trigger("onReset").remove(), 
            d && self.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing").css("transition-duration", d + "ms"), 
            self.hideLoading(current), self.hideControls(!0), self.updateCursor(), 
            "zoom" === (effect = "zoom" !== effect || $content && d && "image" === current.type && !self.isMoved() && !current.hasError && (end = self.getThumbPos(current)) ? effect : "fade") ? ($.fancybox.stop($content), 
            domRect = {
                top: (domRect = $.fancybox.getTranslate($content)).top,
                left: domRect.left,
                scaleX: domRect.width / end.width,
                scaleY: domRect.height / end.height,
                width: end.width,
                height: end.height
            }, (opacity = "auto" == (opacity = current.opts.zoomOpacity) ? .1 < Math.abs(current.width / current.height - end.width / end.height) : opacity) && (end.opacity = 0), 
            $.fancybox.setTranslate($content, domRect), forceRedraw($content), $.fancybox.animate($content, end, d, done)) : effect && d ? $.fancybox.animate(current.$slide.addClass("fancybox-slide--previous").removeClass("fancybox-slide--current"), "fancybox-animated fancybox-fx-" + effect, d, done) : !0 === e ? setTimeout(done, d) : done(), 
            !0));
        },
        cleanUp: function(e) {
            var y, $focus = this.current.opts.$orig;
            this.current.$slide.trigger("onReset"), this.$refs.container.empty().remove(), 
            this.trigger("afterClose", e), this.current.opts.backFocus && ($focus = $focus && $focus.length && $focus.is(":visible") ? $focus : this.$trigger) && $focus.length && (e = window.scrollX, 
            y = window.scrollY, $focus.trigger("focus"), $("html, body").scrollTop(y).scrollLeft(e)), 
            this.current = null, ($focus = $.fancybox.getInstance()) ? $focus.activate() : ($("body").removeClass("fancybox-active compensate-for-scrollbar"), 
            $("#fancybox-style-noscroll").remove());
        },
        trigger: function(name, slide) {
            var rez, args = Array.prototype.slice.call(arguments, 1), slide = slide && slide.opts ? slide : this.current;
            if (slide ? args.unshift(slide) : slide = this, args.unshift(this), 
            !1 === (rez = $.isFunction(slide.opts[name]) ? slide.opts[name].apply(slide, args) : rez)) return rez;
            ("afterClose" !== name && this.$refs ? this.$refs.container : $D).trigger(name + ".fb", args);
        },
        updateControls: function() {
            var current = this.current, index = current.index, $container = this.$refs.container, $caption = this.$refs.caption, caption = current.opts.caption;
            current.$slide.trigger("refresh"), caption && caption.length ? (this.$caption = $caption).children().eq(0).html(caption) : this.$caption = null, 
            this.hasHiddenControls || this.isIdle || this.showControls(), $container.find("[data-fancybox-count]").html(this.group.length), 
            $container.find("[data-fancybox-index]").html(index + 1), $container.find("[data-fancybox-prev]").prop("disabled", !current.opts.loop && index <= 0), 
            $container.find("[data-fancybox-next]").prop("disabled", !current.opts.loop && index >= this.group.length - 1), 
            "image" === current.type ? $container.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href", current.opts.image.src || current.src).show() : current.opts.toolbar && $container.find("[data-fancybox-download],[data-fancybox-zoom]").hide(), 
            $(document.activeElement).is(":hidden,[disabled]") && this.$refs.container.trigger("focus");
        },
        hideControls: function(andCaption) {
            var arr = [ "infobar", "toolbar", "nav" ];
            !andCaption && this.current.opts.preventCaptionOverlap || arr.push("caption"), 
            this.$refs.container.removeClass(arr.map(function(i) {
                return "fancybox-show-" + i;
            }).join(" ")), this.hasHiddenControls = !0;
        },
        showControls: function() {
            var opts = (this.current || this).opts, $container = this.$refs.container;
            this.hasHiddenControls = !1, this.idleSecondsCounter = 0, $container.toggleClass("fancybox-show-toolbar", !(!opts.toolbar || !opts.buttons)).toggleClass("fancybox-show-infobar", !!(opts.infobar && 1 < this.group.length)).toggleClass("fancybox-show-caption", !!this.$caption).toggleClass("fancybox-show-nav", !!(opts.arrows && 1 < this.group.length)).toggleClass("fancybox-is-modal", !!opts.modal);
        },
        toggleControls: function() {
            this.hasHiddenControls ? this.showControls() : this.hideControls();
        }
    }), $.fancybox = {
        version: "3.5.7",
        defaults: defaults,
        getInstance: function(command) {
            var instance = $('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"), args = Array.prototype.slice.call(arguments, 1);
            return instance instanceof FancyBox && ("string" === $.type(command) ? instance[command].apply(instance, args) : "function" === $.type(command) && command.apply(instance, args), 
            instance);
        },
        open: function(items, opts, index) {
            return new FancyBox(items, opts, index);
        },
        close: function(all) {
            var instance = this.getInstance();
            instance && (instance.close(), !0 === all && this.close(all));
        },
        destroy: function() {
            this.close(!0), $D.add("body").off("click.fb-start", "**");
        },
        isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
        use3d: (defaults = document.createElement("div"), window.getComputedStyle && window.getComputedStyle(defaults) && window.getComputedStyle(defaults).getPropertyValue("transform") && !(document.documentMode && document.documentMode < 11)),
        getTranslate: function($el) {
            var domRect;
            return !(!$el || !$el.length) && {
                top: (domRect = $el[0].getBoundingClientRect()).top || 0,
                left: domRect.left || 0,
                width: domRect.width,
                height: domRect.height,
                opacity: parseFloat($el.css("opacity"))
            };
        },
        setTranslate: function($el, props) {
            var str = "", css = {};
            if ($el && props) return void 0 === props.left && void 0 === props.top || (str = (void 0 === props.left ? $el.position() : props).left + "px, " + (void 0 === props.top ? $el.position() : props).top + "px", 
            str = this.use3d ? "translate3d(" + str + ", 0px)" : "translate(" + str + ")"), 
            void 0 !== props.scaleX && void 0 !== props.scaleY ? str += " scale(" + props.scaleX + ", " + props.scaleY + ")" : void 0 !== props.scaleX && (str += " scaleX(" + props.scaleX + ")"), 
            str.length && (css.transform = str), void 0 !== props.opacity && (css.opacity = props.opacity), 
            void 0 !== props.width && (css.width = props.width), void 0 !== props.height && (css.height = props.height), 
            $el.css(css);
        },
        animate: function($el, to, duration, callback, leaveAnimationName) {
            var from, self = this;
            $.isFunction(duration) && (callback = duration, duration = null), self.stop($el), 
            from = self.getTranslate($el), $el.on(transitionEnd, function(e) {
                e && e.originalEvent && (!$el.is(e.originalEvent.target) || "z-index" == e.originalEvent.propertyName) || (self.stop($el), 
                $.isNumeric(duration) && $el.css("transition-duration", ""), $.isPlainObject(to) ? void 0 !== to.scaleX && void 0 !== to.scaleY && self.setTranslate($el, {
                    top: to.top,
                    left: to.left,
                    width: from.width * to.scaleX,
                    height: from.height * to.scaleY,
                    scaleX: 1,
                    scaleY: 1
                }) : !0 !== leaveAnimationName && $el.removeClass(to), $.isFunction(callback) && callback(e));
            }), $.isNumeric(duration) && $el.css("transition-duration", duration + "ms"), 
            $.isPlainObject(to) ? (void 0 !== to.scaleX && void 0 !== to.scaleY && (delete to.width, 
            delete to.height, $el.parent().hasClass("fancybox-slide--image") && $el.parent().addClass("fancybox-is-scaling")), 
            $.fancybox.setTranslate($el, to)) : $el.addClass(to), $el.data("timer", setTimeout(function() {
                $el.trigger(transitionEnd);
            }, duration + 33));
        },
        stop: function($el, callCallback) {
            $el && $el.length && (clearTimeout($el.data("timer")), callCallback && $el.trigger(transitionEnd), 
            $el.off(transitionEnd).css("transition-duration", ""), $el.parent().removeClass("fancybox-is-scaling"));
        }
    }, $.fn.fancybox = function(options) {
        var selector;
        return (selector = (options = options || {}).selector || !1) ? $("body").off("click.fb-start", selector).on("click.fb-start", selector, {
            options: options
        }, _run) : this.off("click.fb-start").on("click.fb-start", {
            items: this,
            options: options
        }, _run), this;
    }, $D.on("click.fb-start", "[data-fancybox]", _run), $D.on("click.fb-start", "[data-fancybox-trigger]", function(e) {
        $('[data-fancybox="' + $(this).attr("data-fancybox-trigger") + '"]').eq($(this).attr("data-fancybox-index") || 0).trigger("click.fb-start", {
            $trigger: $(this)
        });
    }), $pressed = null, $D.on("mousedown mouseup focus blur", ".fancybox-button", function(e) {
        switch (e.type) {
          case "mousedown":
            $pressed = $(this);
            break;

          case "mouseup":
            $pressed = null;
            break;

          case "focusin":
            $(".fancybox-button").removeClass("fancybox-focus"), $(this).is($pressed) || $(this).is("[disabled]") || $(this).addClass("fancybox-focus");
            break;

          case "focusout":
            $(".fancybox-button").removeClass("fancybox-focus");
        }
    })));
}(window, document, jQuery), function($) {
    "use strict";
    function format(url, rez, params) {
        if (url) return "object" === $.type(params = params || "") && (params = $.param(params, !0)), 
        $.each(rez, function(key, value) {
            url = url.replace("$" + key, value || "");
        }), params.length && (url += (0 < url.indexOf("?") ? "&" : "?") + params), 
        url;
    }
    var defaults = {
        youtube: {
            matcher: /(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,
            params: {
                autoplay: 1,
                autohide: 1,
                fs: 1,
                rel: 0,
                hd: 1,
                wmode: "transparent",
                enablejsapi: 1,
                html5: 1
            },
            paramPlace: 8,
            type: "iframe",
            url: "https://www.youtube-nocookie.com/embed/$4",
            thumb: "https://img.youtube.com/vi/$4/hqdefault.jpg"
        },
        vimeo: {
            matcher: /^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,
            params: {
                autoplay: 1,
                hd: 1,
                show_title: 1,
                show_byline: 1,
                show_portrait: 0,
                fullscreen: 1
            },
            paramPlace: 3,
            type: "iframe",
            url: "//player.vimeo.com/video/$2"
        },
        instagram: {
            matcher: /(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,
            type: "image",
            url: "//$1/p/$2/media/?size=l"
        },
        gmap_place: {
            matcher: /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,
            type: "iframe",
            url: function(rez) {
                return "//maps.google." + rez[2] + "/?ll=" + (rez[9] ? rez[9] + "&z=" + Math.floor(rez[10]) + (rez[12] ? rez[12].replace(/^\//, "&") : "") : rez[12] + "").replace(/\?/, "&") + "&output=" + (rez[12] && 0 < rez[12].indexOf("layer=c") ? "svembed" : "embed");
            }
        },
        gmap_search: {
            matcher: /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,
            type: "iframe",
            url: function(rez) {
                return "//maps.google." + rez[2] + "/maps?q=" + rez[5].replace("query=", "q=").replace("api=1", "") + "&output=embed";
            }
        }
    }, VideoAPILoader = ($(document).on("objectNeedsType.fb", function(e, instance, item) {
        var thumb, rez, params, urlParams, paramObj, provider, url = item.src || "", type = !1, media = $.extend(!0, {}, defaults, item.opts.media);
        $.each(media, function(providerName, providerOpts) {
            if (rez = url.match(providerOpts.matcher)) {
                if (type = providerOpts.type, provider = providerName, paramObj = {}, 
                providerOpts.paramPlace && rez[providerOpts.paramPlace]) {
                    urlParams = (urlParams = "?" == (urlParams = rez[providerOpts.paramPlace])[0] ? urlParams.substring(1) : urlParams).split("&");
                    for (var m = 0; m < urlParams.length; ++m) {
                        var p = urlParams[m].split("=", 2);
                        2 == p.length && (paramObj[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " ")));
                    }
                }
                return params = $.extend(!0, {}, providerOpts.params, item.opts[providerName], paramObj), 
                url = "function" === $.type(providerOpts.url) ? providerOpts.url.call(this, rez, params, item) : format(providerOpts.url, rez, params), 
                thumb = "function" === $.type(providerOpts.thumb) ? providerOpts.thumb.call(this, rez, params, item) : format(providerOpts.thumb, rez), 
                "youtube" === providerName ? url = url.replace(/&t=((\d+)m)?(\d+)s/, function(match, p1, m, s) {
                    return "&start=" + ((m ? 60 * parseInt(m, 10) : 0) + parseInt(s, 10));
                }) : "vimeo" === providerName && (url = url.replace("&%23", "#")), 
                !1;
            }
        }), type ? (item.opts.thumb || item.opts.$thumb && item.opts.$thumb.length || (item.opts.thumb = thumb), 
        "iframe" === type && (item.opts = $.extend(!0, item.opts, {
            iframe: {
                preload: !1,
                attr: {
                    scrolling: "no"
                }
            }
        })), $.extend(item, {
            type: type,
            src: url,
            origSrc: item.src,
            contentSource: provider,
            contentType: "image" === type ? "image" : "gmap_place" == provider || "gmap_search" == provider ? "map" : "video"
        })) : url && (item.type = item.opts.defaultType);
    }), {
        youtube: {
            src: "https://www.youtube.com/iframe_api",
            class: "YT",
            loading: !1,
            loaded: !1
        },
        vimeo: {
            src: "https://player.vimeo.com/api/player.js",
            class: "Vimeo",
            loading: !1,
            loaded: !1
        },
        load: function(vendor) {
            var script, _this = this;
            this[vendor].loaded ? setTimeout(function() {
                _this.done(vendor);
            }) : this[vendor].loading || (this[vendor].loading = !0, (script = document.createElement("script")).type = "text/javascript", 
            script.src = this[vendor].src, "youtube" === vendor ? window.onYouTubeIframeAPIReady = function() {
                _this[vendor].loaded = !0, _this.done(vendor);
            } : script.onload = function() {
                _this[vendor].loaded = !0, _this.done(vendor);
            }, document.body.appendChild(script));
        },
        done: function(vendor) {
            var instance, $el;
            "youtube" === vendor && delete window.onYouTubeIframeAPIReady, (instance = $.fancybox.getInstance()) && ($el = instance.current.$content.find("iframe"), 
            "youtube" === vendor && void 0 !== YT && YT ? new YT.Player($el.attr("id"), {
                events: {
                    onStateChange: function(e) {
                        0 == e.data && instance.next();
                    }
                }
            }) : "vimeo" === vendor && void 0 !== Vimeo && Vimeo && new Vimeo.Player($el).on("ended", function() {
                instance.next();
            }));
        }
    });
    $(document).on({
        "afterShow.fb": function(e, instance, current) {
            1 < instance.group.length && ("youtube" === current.contentSource || "vimeo" === current.contentSource) && VideoAPILoader.load(current.contentSource);
        }
    });
}(jQuery), function(window, document, $) {
    "use strict";
    function getPointerXY(e) {
        var key, result = [];
        for (key in e = (e = e.originalEvent || e || window.e).touches && e.touches.length ? e.touches : e.changedTouches && e.changedTouches.length ? e.changedTouches : [ e ]) e[key].pageX ? result.push({
            x: e[key].pageX,
            y: e[key].pageY
        }) : e[key].clientX && result.push({
            x: e[key].clientX,
            y: e[key].clientY
        });
        return result;
    }
    function distance(point2, point1, what) {
        return point1 && point2 ? "x" === what ? point2.x - point1.x : "y" === what ? point2.y - point1.y : Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2)) : 0;
    }
    function isClickable($el) {
        if ($el.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe') || $.isFunction($el.get(0).onclick) || $el.data("selectable")) return 1;
        for (var i = 0, atts = $el[0].attributes, n = atts.length; i < n; i++) if ("data-fancybox-" === atts[i].nodeName.substr(0, 14)) return 1;
    }
    function isScrollable($el) {
        for (var el, overflowY, overflowX, rez = !1; (el = $el.get(0), overflowX = overflowY = overflowX = overflowY = void 0, 
        overflowY = window.getComputedStyle(el)["overflow-y"], overflowX = window.getComputedStyle(el)["overflow-x"], 
        overflowY = ("scroll" === overflowY || "auto" === overflowY) && el.scrollHeight > el.clientHeight, 
        overflowX = ("scroll" === overflowX || "auto" === overflowX) && el.scrollWidth > el.clientWidth, 
        !(rez = overflowY || overflowX)) && (($el = $el.parent()).length && !$el.hasClass("fancybox-stage") && !$el.is("body")); );
        return rez;
    }
    function Guestures(instance) {
        this.instance = instance, this.$bg = instance.$refs.bg, this.$stage = instance.$refs.stage, 
        this.$container = instance.$refs.container, this.destroy(), this.$container.on("touchstart.fb.touch mousedown.fb.touch", $.proxy(this, "ontouchstart"));
    }
    var requestAFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) {
        return window.setTimeout(callback, 1e3 / 60);
    }, cancelAFrame = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || function(id) {
        window.clearTimeout(id);
    };
    Guestures.prototype.destroy = function() {
        this.$container.off(".fb.touch"), $(document).off(".fb.touch"), this.requestId && (cancelAFrame(this.requestId), 
        this.requestId = null), this.tapped && (clearTimeout(this.tapped), this.tapped = null);
    }, Guestures.prototype.ontouchstart = function(e) {
        var $target = $(e.target), instance = this.instance, current = instance.current, $slide = current.$slide, $content = current.$content, isTouchDevice = "touchstart" == e.type;
        if (isTouchDevice && this.$container.off("mousedown.fb.touch"), (!e.originalEvent || 2 != e.originalEvent.button) && $slide.length && $target.length && !isClickable($target) && !isClickable($target.parent()) && ($target.is("img") || !(e.originalEvent.clientX > $target[0].clientWidth + $target.offset().left))) {
            if (!current || instance.isAnimating || current.$slide.hasClass("fancybox-animated")) return e.stopPropagation(), 
            void e.preventDefault();
            this.realPoints = this.startPoints = getPointerXY(e), this.startPoints.length && (current.touch && e.stopPropagation(), 
            this.startEvent = e, this.canTap = !0, this.$target = $target, this.$content = $content, 
            this.opts = current.opts.touch, this.isPanning = !1, this.isSwiping = !1, 
            this.isZooming = !1, this.isScrolling = !1, this.canPan = instance.canPan(), 
            this.startTime = new Date().getTime(), this.distanceX = this.distanceY = this.distance = 0, 
            this.canvasWidth = Math.round($slide[0].clientWidth), this.canvasHeight = Math.round($slide[0].clientHeight), 
            this.contentLastPos = null, this.contentStartPos = $.fancybox.getTranslate(this.$content) || {
                top: 0,
                left: 0
            }, this.sliderStartPos = $.fancybox.getTranslate($slide), this.stagePos = $.fancybox.getTranslate(instance.$refs.stage), 
            this.sliderStartPos.top -= this.stagePos.top, this.sliderStartPos.left -= this.stagePos.left, 
            this.contentStartPos.top -= this.stagePos.top, this.contentStartPos.left -= this.stagePos.left, 
            $(document).off(".fb.touch").on(isTouchDevice ? "touchend.fb.touch touchcancel.fb.touch" : "mouseup.fb.touch mouseleave.fb.touch", $.proxy(this, "ontouchend")).on(isTouchDevice ? "touchmove.fb.touch" : "mousemove.fb.touch", $.proxy(this, "ontouchmove")), 
            $.fancybox.isMobile && document.addEventListener("scroll", this.onscroll, !0), 
            ((this.opts || this.canPan) && ($target.is(this.$stage) || this.$stage.find($target).length) || ($target.is(".fancybox-image") && e.preventDefault(), 
            $.fancybox.isMobile && $target.parents(".fancybox-caption").length)) && (this.isScrollable = isScrollable($target) || isScrollable($target.parent()), 
            $.fancybox.isMobile && this.isScrollable || e.preventDefault(), 1 !== this.startPoints.length && !current.hasError || (this.canPan ? ($.fancybox.stop(this.$content), 
            this.isPanning = !0) : this.isSwiping = !0, this.$container.addClass("fancybox-is-grabbing")), 
            2 === this.startPoints.length && "image" === current.type && (current.isLoaded || current.$ghost) && (this.canTap = !1, 
            this.isSwiping = !1, this.isPanning = !1, this.isZooming = !0, $.fancybox.stop(this.$content), 
            this.centerPointStartX = .5 * (this.startPoints[0].x + this.startPoints[1].x) - $(window).scrollLeft(), 
            this.centerPointStartY = .5 * (this.startPoints[0].y + this.startPoints[1].y) - $(window).scrollTop(), 
            this.percentageOfImageAtPinchPointX = (this.centerPointStartX - this.contentStartPos.left) / this.contentStartPos.width, 
            this.percentageOfImageAtPinchPointY = (this.centerPointStartY - this.contentStartPos.top) / this.contentStartPos.height, 
            this.startDistanceBetweenFingers = distance(this.startPoints[0], this.startPoints[1]))));
        }
    }, Guestures.prototype.onscroll = function(e) {
        this.isScrolling = !0, document.removeEventListener("scroll", this.onscroll, !0);
    }, Guestures.prototype.ontouchmove = function(e) {
        void 0 !== e.originalEvent.buttons && 0 === e.originalEvent.buttons ? this.ontouchend(e) : this.isScrolling ? this.canTap = !1 : (this.newPoints = getPointerXY(e), 
        (this.opts || this.canPan) && this.newPoints.length && this.newPoints.length && (this.isSwiping && !0 === this.isSwiping || e.preventDefault(), 
        this.distanceX = distance(this.newPoints[0], this.startPoints[0], "x"), 
        this.distanceY = distance(this.newPoints[0], this.startPoints[0], "y"), 
        this.distance = distance(this.newPoints[0], this.startPoints[0]), 0 < this.distance && (this.isSwiping ? this.onSwipe(e) : this.isPanning ? this.onPan() : this.isZooming && this.onZoom())));
    }, Guestures.prototype.onSwipe = function(e) {
        var angle, self = this, instance = self.instance, swiping = self.isSwiping, left = self.sliderStartPos.left || 0;
        if (!0 === swiping) {
            if (10 < Math.abs(self.distance)) {
                if (self.canTap = !1, instance.group.length < 2 && self.opts.vertical ? self.isSwiping = "y" : instance.isDragging || !1 === self.opts.vertical || "auto" === self.opts.vertical && 800 < $(window).width() ? self.isSwiping = "x" : (angle = Math.abs(180 * Math.atan2(self.distanceY, self.distanceX) / Math.PI), 
                self.isSwiping = 45 < angle && angle < 135 ? "y" : "x"), "y" === self.isSwiping && $.fancybox.isMobile && self.isScrollable) return void (self.isScrolling = !0);
                instance.isDragging = self.isSwiping, self.startPoints = self.newPoints, 
                $.each(instance.slides, function(index, slide) {
                    var slidePos, stagePos;
                    $.fancybox.stop(slide.$slide), slidePos = $.fancybox.getTranslate(slide.$slide), 
                    stagePos = $.fancybox.getTranslate(instance.$refs.stage), slide.$slide.css({
                        transform: "",
                        opacity: "",
                        "transition-duration": ""
                    }).removeClass("fancybox-animated").removeClass(function(index, className) {
                        return (className.match(/(^|\s)fancybox-fx-\S+/g) || []).join(" ");
                    }), slide.pos === instance.current.pos && (self.sliderStartPos.top = slidePos.top - stagePos.top, 
                    self.sliderStartPos.left = slidePos.left - stagePos.left), $.fancybox.setTranslate(slide.$slide, {
                        top: slidePos.top - stagePos.top,
                        left: slidePos.left - stagePos.left
                    });
                }), instance.SlideShow && instance.SlideShow.isActive && instance.SlideShow.stop();
            }
        } else "x" == swiping && (0 < self.distanceX && (self.instance.group.length < 2 || 0 === self.instance.current.index && !self.instance.current.opts.loop) ? left += Math.pow(self.distanceX, .8) : self.distanceX < 0 && (self.instance.group.length < 2 || self.instance.current.index === self.instance.group.length - 1 && !self.instance.current.opts.loop) ? left -= Math.pow(-self.distanceX, .8) : left += self.distanceX), 
        self.sliderLastPos = {
            top: "x" == swiping ? 0 : self.sliderStartPos.top + self.distanceY,
            left: left
        }, self.requestId && (cancelAFrame(self.requestId), self.requestId = null), 
        self.requestId = requestAFrame(function() {
            self.sliderLastPos && ($.each(self.instance.slides, function(index, slide) {
                var pos = slide.pos - self.instance.currPos;
                $.fancybox.setTranslate(slide.$slide, {
                    top: self.sliderLastPos.top,
                    left: self.sliderLastPos.left + pos * self.canvasWidth + pos * slide.opts.gutter
                });
            }), self.$container.addClass("fancybox-is-sliding"));
        });
    }, Guestures.prototype.onPan = function() {
        var self = this;
        distance(self.newPoints[0], self.realPoints[0]) < ($.fancybox.isMobile ? 10 : 5) ? self.startPoints = self.newPoints : (self.canTap = !1, 
        self.contentLastPos = self.limitMovement(), self.requestId && cancelAFrame(self.requestId), 
        self.requestId = requestAFrame(function() {
            $.fancybox.setTranslate(self.$content, self.contentLastPos);
        }));
    }, Guestures.prototype.limitMovement = function() {
        var canvasWidth = this.canvasWidth, canvasHeight = this.canvasHeight, distanceX = this.distanceX, distanceY = this.distanceY, contentStartPos = this.contentStartPos, currentOffsetX = contentStartPos.left, currentOffsetY = contentStartPos.top, currentWidth = contentStartPos.width, contentStartPos = contentStartPos.height, newOffsetX = canvasWidth < currentWidth ? currentOffsetX + distanceX : currentOffsetX, newOffsetY = currentOffsetY + distanceY, minTranslateX = Math.max(0, .5 * canvasWidth - .5 * currentWidth), minTranslateY = Math.max(0, .5 * canvasHeight - .5 * contentStartPos), canvasWidth = Math.min(canvasWidth - currentWidth, .5 * canvasWidth - .5 * currentWidth), currentWidth = Math.min(canvasHeight - contentStartPos, .5 * canvasHeight - .5 * contentStartPos);
        return 0 < distanceX && minTranslateX < newOffsetX && (newOffsetX = minTranslateX - 1 + Math.pow(-minTranslateX + currentOffsetX + distanceX, .8) || 0), 
        distanceX < 0 && newOffsetX < canvasWidth && (newOffsetX = canvasWidth + 1 - Math.pow(canvasWidth - currentOffsetX - distanceX, .8) || 0), 
        0 < distanceY && minTranslateY < newOffsetY && (newOffsetY = minTranslateY - 1 + Math.pow(-minTranslateY + currentOffsetY + distanceY, .8) || 0), 
        {
            top: newOffsetY = distanceY < 0 && newOffsetY < currentWidth ? currentWidth + 1 - Math.pow(currentWidth - currentOffsetY - distanceY, .8) || 0 : newOffsetY,
            left: newOffsetX
        };
    }, Guestures.prototype.limitPosition = function(newOffsetX, newOffsetY, newWidth, newHeight) {
        var canvasWidth = this.canvasWidth, canvasHeight = this.canvasHeight;
        return newOffsetX = canvasWidth < newWidth ? (newOffsetX = 0 < newOffsetX ? 0 : newOffsetX) < canvasWidth - newWidth ? canvasWidth - newWidth : newOffsetX : Math.max(0, canvasWidth / 2 - newWidth / 2), 
        {
            top: newOffsetY = canvasHeight < newHeight ? (newOffsetY = 0 < newOffsetY ? 0 : newOffsetY) < canvasHeight - newHeight ? canvasHeight - newHeight : newOffsetY : Math.max(0, canvasHeight / 2 - newHeight / 2),
            left: newOffsetX
        };
    }, Guestures.prototype.onZoom = function() {
        var self = this, contentStartPos = self.contentStartPos, currentWidth = contentStartPos.width, currentHeight = contentStartPos.height, currentOffsetX = contentStartPos.left, contentStartPos = contentStartPos.top, pinchRatio = distance(self.newPoints[0], self.newPoints[1]) / self.startDistanceBetweenFingers, newWidth = Math.floor(currentWidth * pinchRatio), newHeight = Math.floor(currentHeight * pinchRatio), currentWidth = (currentWidth - newWidth) * self.percentageOfImageAtPinchPointX, currentHeight = (currentHeight - newHeight) * self.percentageOfImageAtPinchPointY, centerPointEndX = (self.newPoints[0].x + self.newPoints[1].x) / 2 - $(window).scrollLeft(), centerPointEndY = (self.newPoints[0].y + self.newPoints[1].y) / 2 - $(window).scrollTop(), centerPointEndX = centerPointEndX - self.centerPointStartX, contentStartPos = {
            top: contentStartPos + (currentHeight + (centerPointEndY - self.centerPointStartY)),
            left: currentOffsetX + (currentWidth + centerPointEndX),
            scaleX: pinchRatio,
            scaleY: pinchRatio
        };
        self.canTap = !1, self.newWidth = newWidth, self.newHeight = newHeight, 
        self.contentLastPos = contentStartPos, self.requestId && cancelAFrame(self.requestId), 
        self.requestId = requestAFrame(function() {
            $.fancybox.setTranslate(self.$content, self.contentLastPos);
        });
    }, Guestures.prototype.ontouchend = function(e) {
        var swiping = this.isSwiping, panning = this.isPanning, zooming = this.isZooming, scrolling = this.isScrolling;
        if (this.endPoints = getPointerXY(e), this.dMs = Math.max(new Date().getTime() - this.startTime, 1), 
        this.$container.removeClass("fancybox-is-grabbing"), $(document).off(".fb.touch"), 
        document.removeEventListener("scroll", this.onscroll, !0), this.requestId && (cancelAFrame(this.requestId), 
        this.requestId = null), this.isSwiping = !1, this.isPanning = !1, this.isZooming = !1, 
        this.isScrolling = !1, this.instance.isDragging = !1, this.canTap) return this.onTap(e);
        this.speed = 100, this.velocityX = this.distanceX / this.dMs * .5, this.velocityY = this.distanceY / this.dMs * .5, 
        panning ? this.endPanning() : zooming ? this.endZooming() : this.endSwiping(swiping, scrolling);
    }, Guestures.prototype.endSwiping = function(swiping, scrolling) {
        var ret = !1, len = this.instance.group.length, distanceX = Math.abs(this.distanceX), len = "x" == swiping && 1 < len && (130 < this.dMs && 10 < distanceX || 50 < distanceX);
        this.sliderLastPos = null, "y" == swiping && !scrolling && 50 < Math.abs(this.distanceY) ? ($.fancybox.animate(this.instance.current.$slide, {
            top: this.sliderStartPos.top + this.distanceY + 150 * this.velocityY,
            opacity: 0
        }, 200), ret = this.instance.close(!0, 250)) : len && 0 < this.distanceX ? ret = this.instance.previous(300) : len && this.distanceX < 0 && (ret = this.instance.next(300)), 
        !1 !== ret || "x" != swiping && "y" != swiping || this.instance.centerSlide(200), 
        this.$container.removeClass("fancybox-is-sliding");
    }, Guestures.prototype.endPanning = function() {
        var newOffsetY, newOffsetX;
        this.contentLastPos && (newOffsetY = !1 === this.opts.momentum || 350 < this.dMs ? (newOffsetX = this.contentLastPos.left, 
        this.contentLastPos.top) : (newOffsetX = this.contentLastPos.left + 500 * this.velocityX, 
        this.contentLastPos.top + 500 * this.velocityY), (newOffsetX = this.limitPosition(newOffsetX, newOffsetY, this.contentStartPos.width, this.contentStartPos.height)).width = this.contentStartPos.width, 
        newOffsetX.height = this.contentStartPos.height, $.fancybox.animate(this.$content, newOffsetX, 366));
    }, Guestures.prototype.endZooming = function() {
        var newOffsetX, newOffsetY, current = this.instance.current, newWidth = this.newWidth, newHeight = this.newHeight;
        this.contentLastPos && (newOffsetX = this.contentLastPos.left, newOffsetY = this.contentLastPos.top, 
        $.fancybox.setTranslate(this.$content, {
            top: newOffsetY,
            left: newOffsetX,
            width: newWidth,
            height: newHeight,
            scaleX: 1,
            scaleY: 1
        }), newWidth < this.canvasWidth && newHeight < this.canvasHeight ? this.instance.scaleToFit(150) : newWidth > current.width || newHeight > current.height ? this.instance.scaleToActual(this.centerPointStartX, this.centerPointStartY, 150) : (current = this.limitPosition(newOffsetX, newOffsetY, newWidth, newHeight), 
        $.fancybox.animate(this.$content, current, 150)));
    }, Guestures.prototype.onTap = function(e) {
        function process(prefix) {
            if (prefix = current.opts[prefix], prefix = $.isFunction(prefix) ? prefix.apply(instance, [ current, e ]) : prefix) switch (prefix) {
              case "close":
                instance.close(self.startEvent);
                break;

              case "toggleControls":
                instance.toggleControls();
                break;

              case "next":
                instance.next();
                break;

              case "nextOrClose":
                1 < instance.group.length ? instance.next() : instance.close(self.startEvent);
                break;

              case "zoom":
                "image" == current.type && (current.isLoaded || current.$ghost) && (instance.canPan() ? instance.scaleToFit() : instance.isScaledDown() ? instance.scaleToActual(tapX, tapY) : instance.group.length < 2 && instance.close(self.startEvent));
            }
        }
        var where, self = this, $target = $(e.target), instance = self.instance, current = instance.current, endPoints = e && getPointerXY(e) || self.startPoints, tapX = endPoints[0] ? endPoints[0].x - $(window).scrollLeft() - self.stagePos.left : 0, tapY = endPoints[0] ? endPoints[0].y - $(window).scrollTop() - self.stagePos.top : 0;
        if ((!e.originalEvent || 2 != e.originalEvent.button) && ($target.is("img") || !(tapX > $target[0].clientWidth + $target.offset().left))) {
            if ($target.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container")) where = "Outside"; else if ($target.is(".fancybox-slide")) where = "Slide"; else {
                if (!instance.current.$content || !instance.current.$content.find($target).addBack().filter($target).length) return;
                where = "Content";
            }
            if (self.tapped) {
                if (clearTimeout(self.tapped), self.tapped = null, 50 < Math.abs(tapX - self.tapX) || 50 < Math.abs(tapY - self.tapY)) return this;
                process("dblclick" + where);
            } else self.tapX = tapX, self.tapY = tapY, current.opts["dblclick" + where] && current.opts["dblclick" + where] !== current.opts["click" + where] ? self.tapped = setTimeout(function() {
                self.tapped = null, instance.isAnimating || process("click" + where);
            }, 500) : process("click" + where);
            return this;
        }
    }, $(document).on("onActivate.fb", function(e, instance) {
        instance && !instance.Guestures && (instance.Guestures = new Guestures(instance));
    }).on("beforeClose.fb", function(e, instance) {
        instance && instance.Guestures && instance.Guestures.destroy();
    });
}(window, document, jQuery), function(document, $) {
    "use strict";
    $.extend(!0, $.fancybox.defaults, {
        btnTpl: {
            slideShow: '<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>'
        },
        slideShow: {
            autoStart: !1,
            speed: 3e3,
            progress: !0
        }
    });
    function SlideShow(instance) {
        this.instance = instance, this.init();
    }
    $.extend(SlideShow.prototype, {
        timer: null,
        isActive: !1,
        $button: null,
        init: function() {
            var self = this, instance = self.instance, opts = instance.group[instance.currIndex].opts.slideShow;
            self.$button = instance.$refs.toolbar.find("[data-fancybox-play]").on("click", function() {
                self.toggle();
            }), instance.group.length < 2 || !opts ? self.$button.hide() : opts.progress && (self.$progress = $('<div class="fancybox-progress"></div>').appendTo(instance.$refs.inner));
        },
        set: function(force) {
            var instance = this.instance, current = instance.current;
            current && (!0 === force || current.opts.loop || instance.currIndex < instance.group.length - 1) ? this.isActive && "video" !== current.contentType && (this.$progress && $.fancybox.animate(this.$progress.show(), {
                scaleX: 1
            }, current.opts.slideShow.speed), this.timer = setTimeout(function() {
                instance.current.opts.loop || instance.current.index != instance.group.length - 1 ? instance.next() : instance.jumpTo(0);
            }, current.opts.slideShow.speed)) : (this.stop(), instance.idleSecondsCounter = 0, 
            instance.showControls());
        },
        clear: function() {
            clearTimeout(this.timer), this.timer = null, this.$progress && this.$progress.removeAttr("style").hide();
        },
        start: function() {
            var current = this.instance.current;
            current && (this.$button.attr("title", (current.opts.i18n[current.opts.lang] || current.opts.i18n.en).PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"), 
            this.isActive = !0, current.isComplete && this.set(!0), this.instance.trigger("onSlideShowChange", !0));
        },
        stop: function() {
            var current = this.instance.current;
            this.clear(), this.$button.attr("title", (current.opts.i18n[current.opts.lang] || current.opts.i18n.en).PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"), 
            this.isActive = !1, this.instance.trigger("onSlideShowChange", !1), 
            this.$progress && this.$progress.removeAttr("style").hide();
        },
        toggle: function() {
            this.isActive ? this.stop() : this.start();
        }
    }), $(document).on({
        "onInit.fb": function(e, instance) {
            instance && !instance.SlideShow && (instance.SlideShow = new SlideShow(instance));
        },
        "beforeShow.fb": function(e, instance, current, firstRun) {
            instance = instance && instance.SlideShow;
            firstRun ? instance && current.opts.slideShow.autoStart && instance.start() : instance && instance.isActive && instance.clear();
        },
        "afterShow.fb": function(e, instance, current) {
            instance = instance && instance.SlideShow;
            instance && instance.isActive && instance.set();
        },
        "afterKeydown.fb": function(e, instance, current, keypress, keycode) {
            instance = instance && instance.SlideShow;
            !instance || !current.opts.slideShow || 80 !== keycode && 32 !== keycode || $(document.activeElement).is("button,a,input") || (keypress.preventDefault(), 
            instance.toggle());
        },
        "beforeClose.fb onDeactivate.fb": function(e, instance) {
            instance = instance && instance.SlideShow;
            instance && instance.stop();
        }
    }), $(document).on("visibilitychange", function() {
        var instance = $.fancybox.getInstance(), instance = instance && instance.SlideShow;
        instance && instance.isActive && (document.hidden ? instance.clear() : instance.set());
    });
}(document, jQuery), function(document, $) {
    "use strict";
    var FullScreen, fn = function() {
        for (var fnMap = [ [ "requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror" ], [ "webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror" ], [ "webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror" ], [ "mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror" ], [ "msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError" ] ], ret = {}, i = 0; i < fnMap.length; i++) {
            var val = fnMap[i];
            if (val && val[1] in document) {
                for (var j = 0; j < val.length; j++) ret[fnMap[0][j]] = val[j];
                return ret;
            }
        }
        return !1;
    }();
    fn && (FullScreen = {
        request: function(elem) {
            (elem = elem || document.documentElement)[fn.requestFullscreen](elem.ALLOW_KEYBOARD_INPUT);
        },
        exit: function() {
            document[fn.exitFullscreen]();
        },
        toggle: function(elem) {
            elem = elem || document.documentElement, this.isFullscreen() ? this.exit() : this.request(elem);
        },
        isFullscreen: function() {
            return Boolean(document[fn.fullscreenElement]);
        },
        enabled: function() {
            return Boolean(document[fn.fullscreenEnabled]);
        }
    }, $.extend(!0, $.fancybox.defaults, {
        btnTpl: {
            fullScreen: '<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>'
        },
        fullScreen: {
            autoStart: !1
        }
    }), $(document).on(fn.fullscreenchange, function() {
        var isFullscreen = FullScreen.isFullscreen(), instance = $.fancybox.getInstance();
        instance && (instance.current && "image" === instance.current.type && instance.isAnimating && (instance.isAnimating = !1, 
        instance.update(!0, !0, 0), instance.isComplete || instance.complete()), 
        instance.trigger("onFullscreenChange", isFullscreen), instance.$refs.container.toggleClass("fancybox-is-fullscreen", isFullscreen), 
        instance.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter", !isFullscreen).toggleClass("fancybox-button--fsexit", isFullscreen));
    })), $(document).on({
        "onInit.fb": function(e, instance) {
            fn ? instance && instance.group[instance.currIndex].opts.fullScreen ? (instance.$refs.container.on("click.fb-fullscreen", "[data-fancybox-fullscreen]", function(e) {
                e.stopPropagation(), e.preventDefault(), FullScreen.toggle();
            }), instance.opts.fullScreen && !0 === instance.opts.fullScreen.autoStart && FullScreen.request(), 
            instance.FullScreen = FullScreen) : instance && instance.$refs.toolbar.find("[data-fancybox-fullscreen]").hide() : instance.$refs.toolbar.find("[data-fancybox-fullscreen]").remove();
        },
        "afterKeydown.fb": function(e, instance, current, keypress, keycode) {
            instance && instance.FullScreen && 70 === keycode && (keypress.preventDefault(), 
            instance.FullScreen.toggle());
        },
        "beforeClose.fb": function(e, instance) {
            instance && instance.FullScreen && instance.$refs.container.hasClass("fancybox-is-fullscreen") && FullScreen.exit();
        }
    });
}(document, jQuery), function(document, $) {
    "use strict";
    function FancyThumbs(instance) {
        this.init(instance);
    }
    var CLASS = "fancybox-thumbs";
    $.fancybox.defaults = $.extend(!0, {
        btnTpl: {
            thumbs: '<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>'
        },
        thumbs: {
            autoStart: !1,
            hideOnClose: !0,
            parentEl: ".fancybox-container",
            axis: "y"
        }
    }, $.fancybox.defaults);
    $.extend(FancyThumbs.prototype, {
        $button: null,
        $grid: null,
        $list: null,
        isVisible: !1,
        isActive: !1,
        init: function(instance) {
            var self = this, group = instance.group, enabled = 0;
            self.instance = instance, self.opts = group[instance.currIndex].opts.thumbs, 
            (instance.Thumbs = self).$button = instance.$refs.toolbar.find("[data-fancybox-thumbs]");
            for (var i = 0, len = group.length; i < len && (group[i].thumb && enabled++, 
            !(1 < enabled)); i++);
            1 < enabled && self.opts ? (self.$button.removeAttr("style").on("click", function() {
                self.toggle();
            }), self.isActive = !0) : self.$button.hide();
        },
        create: function() {
            var src, instance = this.instance, parentEl = this.opts.parentEl, list = [];
            this.$grid || (this.$grid = $('<div class="' + CLASS + " " + CLASS + "-" + this.opts.axis + '"></div>').appendTo(instance.$refs.container.find(parentEl).addBack().filter(parentEl)), 
            this.$grid.on("click", "a", function() {
                instance.jumpTo($(this).attr("data-index"));
            })), this.$list || (this.$list = $('<div class="' + CLASS + '__list">').appendTo(this.$grid)), 
            $.each(instance.group, function(i, item) {
                (src = item.thumb) || "image" !== item.type || (src = item.src), 
                list.push('<a href="javascript:;" tabindex="0" data-index="' + i + '"' + (src && src.length ? ' style="background-image:url(' + src + ')"' : 'class="fancybox-thumbs-missing"') + "></a>");
            }), this.$list[0].innerHTML = list.join(""), "x" === this.opts.axis && this.$list.width(parseInt(this.$grid.css("padding-right"), 10) + instance.group.length * this.$list.children().eq(0).outerWidth(!0));
        },
        focus: function(duration) {
            var thumb, thumbPos, $list = this.$list, $grid = this.$grid;
            this.instance.current && (thumbPos = (thumb = $list.children().removeClass("fancybox-thumbs-active").filter('[data-index="' + this.instance.current.index + '"]').addClass("fancybox-thumbs-active")).position(), 
            "y" === this.opts.axis && (thumbPos.top < 0 || thumbPos.top > $list.height() - thumb.outerHeight()) ? $list.stop().animate({
                scrollTop: $list.scrollTop() + thumbPos.top
            }, duration) : "x" === this.opts.axis && (thumbPos.left < $grid.scrollLeft() || thumbPos.left > $grid.scrollLeft() + ($grid.width() - thumb.outerWidth())) && $list.parent().stop().animate({
                scrollLeft: thumbPos.left
            }, duration));
        },
        update: function() {
            this.instance.$refs.container.toggleClass("fancybox-show-thumbs", this.isVisible), 
            this.isVisible ? (this.$grid || this.create(), this.instance.trigger("onThumbsShow"), 
            this.focus(0)) : this.$grid && this.instance.trigger("onThumbsHide"), 
            this.instance.update();
        },
        hide: function() {
            this.isVisible = !1, this.update();
        },
        show: function() {
            this.isVisible = !0, this.update();
        },
        toggle: function() {
            this.isVisible = !this.isVisible, this.update();
        }
    }), $(document).on({
        "onInit.fb": function(e, instance) {
            instance && !instance.Thumbs && (instance = new FancyThumbs(instance)).isActive && !0 === instance.opts.autoStart && instance.show();
        },
        "beforeShow.fb": function(e, instance, item, firstRun) {
            instance = instance && instance.Thumbs;
            instance && instance.isVisible && instance.focus(firstRun ? 0 : 250);
        },
        "afterKeydown.fb": function(e, instance, current, keypress, keycode) {
            instance = instance && instance.Thumbs;
            instance && instance.isActive && 71 === keycode && (keypress.preventDefault(), 
            instance.toggle());
        },
        "beforeClose.fb": function(e, instance) {
            instance = instance && instance.Thumbs;
            instance && instance.isVisible && !1 !== instance.opts.hideOnClose && instance.$grid.hide();
        }
    });
}(document, jQuery), function(document, $) {
    "use strict";
    $.extend(!0, $.fancybox.defaults, {
        btnTpl: {
            share: '<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>'
        },
        share: {
            url: function(instance, item) {
                return !instance.currentHash && "inline" !== item.type && "html" !== item.type && (item.origSrc || item.src) || window.location;
            },
            tpl: '<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>'
        }
    }), $(document).on("click", "[data-fancybox-share]", function() {
        var url, entityMap, instance = $.fancybox.getInstance(), current = instance.current || null;
        current && ("function" === $.type(current.opts.share.url) && (url = current.opts.share.url.apply(current, [ instance, current ])), 
        current = current.opts.share.tpl.replace(/\{\{media\}\}/g, "image" === current.type ? encodeURIComponent(current.src) : "").replace(/\{\{url\}\}/g, encodeURIComponent(url)).replace(/\{\{url_raw\}\}/g, (entityMap = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;",
            "`": "&#x60;",
            "=": "&#x3D;"
        }, String(url).replace(/[&<>"'`=\/]/g, function(s) {
            return entityMap[s];
        }))).replace(/\{\{descr\}\}/g, instance.$caption ? encodeURIComponent(instance.$caption.text()) : ""), 
        $.fancybox.open({
            src: instance.translate(instance, current),
            type: "html",
            opts: {
                touch: !1,
                animationEffect: !1,
                afterLoad: function(shareInstance, shareCurrent) {
                    instance.$refs.container.one("beforeClose.fb", function() {
                        shareInstance.close(null, 0);
                    }), shareCurrent.$content.find(".fancybox-share__button").click(function() {
                        return window.open(this.href, "Share", "width=550, height=450"), 
                        !1;
                    });
                },
                mobile: {
                    autoFocus: !1
                }
            }
        }));
    });
}(document, jQuery), function(window, document, $) {
    "use strict";
    function parseUrl() {
        var hash = window.location.hash.substr(1), rez = hash.split("-"), index = 1 < rez.length && /^\+?\d+$/.test(rez[rez.length - 1]) && parseInt(rez.pop(-1), 10) || 1;
        return {
            hash: hash,
            index: index < 1 ? 1 : index,
            gallery: rez.join("-")
        };
    }
    function triggerFromUrl(url) {
        "" !== url.gallery && $("[data-fancybox='" + $.escapeSelector(url.gallery) + "']").eq(url.index - 1).focus().trigger("click.fb-start");
    }
    function getGalleryID(instance) {
        return !!instance && ("" !== (instance = (instance = (instance.current || instance).opts).hash || (instance.$orig ? instance.$orig.data("fancybox") || instance.$orig.data("fancybox-trigger") : "")) && instance);
    }
    $.escapeSelector || ($.escapeSelector = function(sel) {
        return (sel + "").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g, function(ch, asCodePoint) {
            return asCodePoint ? "\0" === ch ? "ï¿½" : ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " " : "\\" + ch;
        });
    }), $(function() {
        !1 !== $.fancybox.defaults.hash && ($(document).on({
            "onInit.fb": function(e, instance) {
                var url, gallery;
                !1 !== instance.group[instance.currIndex].opts.hash && (url = parseUrl(), 
                (gallery = getGalleryID(instance)) && url.gallery && gallery == url.gallery && (instance.currIndex = url.index - 1));
            },
            "beforeShow.fb": function(e, instance, current, firstRun) {
                var gallery;
                current && !1 !== current.opts.hash && (gallery = getGalleryID(instance)) && (instance.currentHash = gallery + (1 < instance.group.length ? "-" + (current.index + 1) : ""), 
                window.location.hash !== "#" + instance.currentHash && (firstRun && !instance.origHash && (instance.origHash = window.location.hash), 
                instance.hashTimer && clearTimeout(instance.hashTimer), instance.hashTimer = setTimeout(function() {
                    "replaceState" in window.history ? (window.history[firstRun ? "pushState" : "replaceState"]({}, document.title, window.location.pathname + window.location.search + "#" + instance.currentHash), 
                    firstRun && (instance.hasCreatedHistory = !0)) : window.location.hash = instance.currentHash, 
                    instance.hashTimer = null;
                }, 300)));
            },
            "beforeClose.fb": function(e, instance, current) {
                current && !1 !== current.opts.hash && (clearTimeout(instance.hashTimer), 
                instance.currentHash && instance.hasCreatedHistory ? window.history.back() : instance.currentHash && ("replaceState" in window.history ? window.history.replaceState({}, document.title, window.location.pathname + window.location.search + (instance.origHash || "")) : window.location.hash = instance.origHash), 
                instance.currentHash = null);
            }
        }), $(window).on("hashchange.fb", function() {
            var url = parseUrl(), fb = null;
            $.each($(".fancybox-container").get().reverse(), function(index, value) {
                value = $(value).data("FancyBox");
                if (value && value.currentHash) return fb = value, !1;
            }), fb ? fb.currentHash === url.gallery + "-" + url.index || 1 === url.index && fb.currentHash == url.gallery || (fb.currentHash = null, 
            fb.close()) : "" !== url.gallery && triggerFromUrl(url);
        }), setTimeout(function() {
            $.fancybox.getInstance() || triggerFromUrl(parseUrl());
        }, 50));
    });
}(window, document, jQuery), function(document, $) {
    "use strict";
    var prevTime = new Date().getTime();
    $(document).on({
        "onInit.fb": function(e, instance, current) {
            instance.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll", function(e) {
                var current = instance.current, currTime = new Date().getTime();
                instance.group.length < 2 || !1 === current.opts.wheel || "auto" === current.opts.wheel && "image" !== current.type || (e.preventDefault(), 
                e.stopPropagation(), current.$slide.hasClass("fancybox-animated") || (e = e.originalEvent || e, 
                currTime - prevTime < 250 || (prevTime = currTime, instance[(-e.deltaY || -e.deltaX || e.wheelDelta || -e.detail) < 0 ? "next" : "previous"]())));
            });
        }
    });
}(document, jQuery), function(factory) {
    "function" == typeof define && define.amd ? define([ "jquery" ], factory) : "object" == typeof exports ? factory(require("jquery")) : factory(window.jQuery || window.Zepto);
}(function($) {
    function MagnificPopup() {}
    function _mfpOn(name, f) {
        mfp.ev.on("mfp" + name + ".mfp", f);
    }
    function _getEl(className, appendTo, html, raw) {
        var el = document.createElement("div");
        return el.className = "mfp-" + className, html && (el.innerHTML = html), 
        raw ? appendTo && appendTo.appendChild(el) : (el = $(el), appendTo && el.appendTo(appendTo)), 
        el;
    }
    function _mfpTrigger(e, data) {
        mfp.ev.triggerHandler("mfp" + e, data), mfp.st.callbacks && (e = e.charAt(0).toLowerCase() + e.slice(1), 
        mfp.st.callbacks[e] && mfp.st.callbacks[e].apply(mfp, $.isArray(data) ? data : [ data ]));
    }
    function _getCloseBtn(type) {
        return type === _currPopupType && mfp.currTemplate.closeBtn || (mfp.currTemplate.closeBtn = $(mfp.st.closeMarkup.replace("%title%", mfp.st.tClose)), 
        _currPopupType = type), mfp.currTemplate.closeBtn;
    }
    function _checkInstance() {
        $.magnificPopup.instance || ((mfp = new MagnificPopup()).init(), $.magnificPopup.instance = mfp);
    }
    function _putInlineElementsBack() {
        _lastInlineElement && (_inlinePlaceholder.after(_lastInlineElement.addClass(_hiddenClass)).detach(), 
        _lastInlineElement = null);
    }
    function _removeAjaxCursor() {
        _ajaxCur && $(document.body).removeClass(_ajaxCur);
    }
    function _destroyAjaxRequest() {
        _removeAjaxCursor(), mfp.req && mfp.req.abort();
    }
    var mfp, _prevStatus, _document, _prevContentType, _wrapClasses, _currPopupType, _hiddenClass, _inlinePlaceholder, _lastInlineElement, _ajaxCur, _isJQ = !!window.jQuery, _window = $(window);
    $.magnificPopup = {
        instance: null,
        proto: MagnificPopup.prototype = {
            constructor: MagnificPopup,
            init: function() {
                var appVersion = navigator.appVersion;
                mfp.isLowIE = mfp.isIE8 = document.all && !document.addEventListener, 
                mfp.isAndroid = /android/gi.test(appVersion), mfp.isIOS = /iphone|ipad|ipod/gi.test(appVersion), 
                mfp.supportsTransition = function() {
                    var s = document.createElement("p").style, v = [ "ms", "O", "Moz", "Webkit" ];
                    if (void 0 !== s.transition) return !0;
                    for (;v.length; ) if (v.pop() + "Transition" in s) return !0;
                    return !1;
                }(), mfp.probablyMobile = mfp.isAndroid || mfp.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent), 
                _document = $(document), mfp.popupsCache = {};
            },
            open: function(data) {
                if (!1 === data.isObj) {
                    mfp.items = data.items.toArray(), mfp.index = 0;
                    for (var item, items = data.items, i = 0; i < items.length; i++) if ((item = (item = items[i]).parsed ? item.el[0] : item) === data.el[0]) {
                        mfp.index = i;
                        break;
                    }
                } else mfp.items = $.isArray(data.items) ? data.items : [ data.items ], 
                mfp.index = data.index || 0;
                if (!mfp.isOpen) {
                    mfp.types = [], _wrapClasses = "", data.mainEl && data.mainEl.length ? mfp.ev = data.mainEl.eq(0) : mfp.ev = _document, 
                    data.key ? (mfp.popupsCache[data.key] || (mfp.popupsCache[data.key] = {}), 
                    mfp.currTemplate = mfp.popupsCache[data.key]) : mfp.currTemplate = {}, 
                    mfp.st = $.extend(!0, {}, $.magnificPopup.defaults, data), mfp.fixedContentPos = "auto" === mfp.st.fixedContentPos ? !mfp.probablyMobile : mfp.st.fixedContentPos, 
                    mfp.st.modal && (mfp.st.closeOnContentClick = !1, mfp.st.closeOnBgClick = !1, 
                    mfp.st.showCloseBtn = !1, mfp.st.enableEscapeKey = !1), mfp.bgOverlay || (mfp.bgOverlay = _getEl("bg").on("click.mfp", function() {
                        mfp.close();
                    }), mfp.wrap = _getEl("wrap").attr("tabindex", -1).on("click.mfp", function(e) {
                        mfp._checkIfClose(e.target) && mfp.close();
                    }), mfp.container = _getEl("container", mfp.wrap)), mfp.contentContainer = _getEl("content"), 
                    mfp.st.preloader && (mfp.preloader = _getEl("preloader", mfp.container, mfp.st.tLoading));
                    var modules = $.magnificPopup.modules;
                    for (i = 0; i < modules.length; i++) {
                        var n = (n = modules[i]).charAt(0).toUpperCase() + n.slice(1);
                        mfp["init" + n].call(mfp);
                    }
                    _mfpTrigger("BeforeOpen"), mfp.st.showCloseBtn && (mfp.st.closeBtnInside ? (_mfpOn("MarkupParse", function(e, template, values, item) {
                        values.close_replaceWith = _getCloseBtn(item.type);
                    }), _wrapClasses += " mfp-close-btn-in") : mfp.wrap.append(_getCloseBtn())), 
                    mfp.st.alignTop && (_wrapClasses += " mfp-align-top"), mfp.fixedContentPos ? mfp.wrap.css({
                        overflow: mfp.st.overflowY,
                        overflowX: "hidden",
                        overflowY: mfp.st.overflowY
                    }) : mfp.wrap.css({
                        top: _window.scrollTop(),
                        position: "absolute"
                    }), !1 !== mfp.st.fixedBgPos && ("auto" !== mfp.st.fixedBgPos || mfp.fixedContentPos) || mfp.bgOverlay.css({
                        height: _document.height(),
                        position: "absolute"
                    }), mfp.st.enableEscapeKey && _document.on("keyup.mfp", function(e) {
                        27 === e.keyCode && mfp.close();
                    }), _window.on("resize.mfp", function() {
                        mfp.updateSize();
                    }), mfp.st.closeOnContentClick || (_wrapClasses += " mfp-auto-cursor"), 
                    _wrapClasses && mfp.wrap.addClass(_wrapClasses);
                    var windowHeight = mfp.wH = _window.height(), windowStyles = {}, s = (mfp.fixedContentPos && mfp._hasScrollBar(windowHeight) && (s = mfp._getScrollbarSize()) && (windowStyles.marginRight = s), 
                    mfp.fixedContentPos && (mfp.isIE7 ? $("body, html").css("overflow", "hidden") : windowStyles.overflow = "hidden"), 
                    mfp.st.mainClass);
                    return mfp.isIE7 && (s += " mfp-ie7"), s && mfp._addClassToMFP(s), 
                    mfp.updateItemHTML(), _mfpTrigger("BuildControls"), $("html").css(windowStyles), 
                    mfp.bgOverlay.add(mfp.wrap).prependTo(mfp.st.prependTo || $(document.body)), 
                    mfp._lastFocusedEl = document.activeElement, setTimeout(function() {
                        mfp.content ? (mfp._addClassToMFP("mfp-ready"), mfp._setFocus()) : mfp.bgOverlay.addClass("mfp-ready"), 
                        _document.on("focusin.mfp", mfp._onFocusIn);
                    }, 16), mfp.isOpen = !0, mfp.updateSize(windowHeight), _mfpTrigger("Open"), 
                    data;
                }
                mfp.updateItemHTML();
            },
            close: function() {
                mfp.isOpen && (_mfpTrigger("BeforeClose"), mfp.isOpen = !1, mfp.st.removalDelay && !mfp.isLowIE && mfp.supportsTransition ? (mfp._addClassToMFP("mfp-removing"), 
                setTimeout(function() {
                    mfp._close();
                }, mfp.st.removalDelay)) : mfp._close());
            },
            _close: function() {
                _mfpTrigger("Close");
                var classesToRemove = "mfp-removing mfp-ready ";
                mfp.bgOverlay.detach(), mfp.wrap.detach(), mfp.container.empty(), 
                mfp.st.mainClass && (classesToRemove += mfp.st.mainClass + " "), 
                mfp._removeClassFromMFP(classesToRemove), mfp.fixedContentPos && (classesToRemove = {
                    marginRight: ""
                }, mfp.isIE7 ? $("body, html").css("overflow", "") : classesToRemove.overflow = "", 
                $("html").css(classesToRemove)), _document.off("keyup.mfp focusin.mfp"), 
                mfp.ev.off(".mfp"), mfp.wrap.attr("class", "mfp-wrap").removeAttr("style"), 
                mfp.bgOverlay.attr("class", "mfp-bg"), mfp.container.attr("class", "mfp-container"), 
                !mfp.st.showCloseBtn || mfp.st.closeBtnInside && !0 !== mfp.currTemplate[mfp.currItem.type] || mfp.currTemplate.closeBtn && mfp.currTemplate.closeBtn.detach(), 
                mfp.st.autoFocusLast && mfp._lastFocusedEl && $(mfp._lastFocusedEl).focus(), 
                mfp.currItem = null, mfp.content = null, mfp.currTemplate = null, 
                mfp.prevHeight = 0, _mfpTrigger("AfterClose");
            },
            updateSize: function(winHeight) {
                var zoomLevel;
                mfp.isIOS ? (zoomLevel = document.documentElement.clientWidth / window.innerWidth, 
                zoomLevel = window.innerHeight * zoomLevel, mfp.wrap.css("height", zoomLevel), 
                mfp.wH = zoomLevel) : mfp.wH = winHeight || _window.height(), mfp.fixedContentPos || mfp.wrap.css("height", mfp.wH), 
                _mfpTrigger("Resize");
            },
            updateItemHTML: function() {
                var item = mfp.items[mfp.index], type = (mfp.contentContainer.detach(), 
                mfp.content && mfp.content.detach(), (item = item.parsed ? item : mfp.parseEl(mfp.index)).type), markup = (_mfpTrigger("BeforeChange", [ mfp.currItem ? mfp.currItem.type : "", type ]), 
                mfp.currItem = item, mfp.currTemplate[type] || (markup = !!mfp.st[type] && mfp.st[type].markup, 
                _mfpTrigger("FirstMarkupParse", markup), mfp.currTemplate[type] = !markup || $(markup)), 
                _prevContentType && _prevContentType !== item.type && mfp.container.removeClass("mfp-" + _prevContentType + "-holder"), 
                mfp["get" + type.charAt(0).toUpperCase() + type.slice(1)](item, mfp.currTemplate[type]));
                mfp.appendContent(markup, type), item.preloaded = !0, _mfpTrigger("Change", item), 
                _prevContentType = item.type, mfp.container.prepend(mfp.contentContainer), 
                _mfpTrigger("AfterChange");
            },
            appendContent: function(newContent, type) {
                (mfp.content = newContent) ? mfp.st.showCloseBtn && mfp.st.closeBtnInside && !0 === mfp.currTemplate[type] ? mfp.content.find(".mfp-close").length || mfp.content.append(_getCloseBtn()) : mfp.content = newContent : mfp.content = "", 
                _mfpTrigger("BeforeAppend"), mfp.container.addClass("mfp-" + type + "-holder"), 
                mfp.contentContainer.append(mfp.content);
            },
            parseEl: function(index) {
                var type, item = mfp.items[index];
                if ((item = item.tagName ? {
                    el: $(item)
                } : (type = item.type, {
                    data: item,
                    src: item.src
                })).el) {
                    for (var types = mfp.types, i = 0; i < types.length; i++) if (item.el.hasClass("mfp-" + types[i])) {
                        type = types[i];
                        break;
                    }
                    item.src = item.el.attr("data-mfp-src"), item.src || (item.src = item.el.attr("href"));
                }
                return item.type = type || mfp.st.type || "inline", item.index = index, 
                item.parsed = !0, mfp.items[index] = item, _mfpTrigger("ElementParse", item), 
                mfp.items[index];
            },
            addGroup: function(el, options) {
                function eHandler(e) {
                    e.mfpEl = this, mfp._openClick(e, el, options);
                }
                var eName = "click.magnificPopup";
                (options = options || {}).mainEl = el, options.items ? (options.isObj = !0, 
                el.off(eName).on(eName, eHandler)) : (options.isObj = !1, options.delegate ? el.off(eName).on(eName, options.delegate, eHandler) : (options.items = el).off(eName).on(eName, eHandler));
            },
            _openClick: function(e, el, options) {
                var midClick = (void 0 !== options.midClick ? options : $.magnificPopup.defaults).midClick;
                if (midClick || !(2 === e.which || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey)) {
                    midClick = (void 0 !== options.disableOn ? options : $.magnificPopup.defaults).disableOn;
                    if (midClick) if ($.isFunction(midClick)) {
                        if (!midClick.call(mfp)) return !0;
                    } else if (_window.width() < midClick) return !0;
                    e.type && (e.preventDefault(), mfp.isOpen && e.stopPropagation()), 
                    options.el = $(e.mfpEl), options.delegate && (options.items = el.find(options.delegate)), 
                    mfp.open(options);
                }
            },
            updateStatus: function(status, text) {
                var data;
                mfp.preloader && (_prevStatus !== status && mfp.container.removeClass("mfp-s-" + _prevStatus), 
                data = {
                    status: status,
                    text: text = text || "loading" !== status ? text : mfp.st.tLoading
                }, _mfpTrigger("UpdateStatus", data), status = data.status, mfp.preloader.html(text = data.text), 
                mfp.preloader.find("a").on("click", function(e) {
                    e.stopImmediatePropagation();
                }), mfp.container.addClass("mfp-s-" + status), _prevStatus = status);
            },
            _checkIfClose: function(target) {
                if (!$(target).hasClass("mfp-prevent-close")) {
                    var closeOnContent = mfp.st.closeOnContentClick, closeOnBg = mfp.st.closeOnBgClick;
                    if (closeOnContent && closeOnBg) return !0;
                    if (!mfp.content || $(target).hasClass("mfp-close") || mfp.preloader && target === mfp.preloader[0]) return !0;
                    if (target === mfp.content[0] || $.contains(mfp.content[0], target)) {
                        if (closeOnContent) return !0;
                    } else if (closeOnBg && $.contains(document, target)) return !0;
                    return !1;
                }
            },
            _addClassToMFP: function(cName) {
                mfp.bgOverlay.addClass(cName), mfp.wrap.addClass(cName);
            },
            _removeClassFromMFP: function(cName) {
                this.bgOverlay.removeClass(cName), mfp.wrap.removeClass(cName);
            },
            _hasScrollBar: function(winHeight) {
                return (mfp.isIE7 ? _document.height() : document.body.scrollHeight) > (winHeight || _window.height());
            },
            _setFocus: function() {
                (mfp.st.focus ? mfp.content.find(mfp.st.focus).eq(0) : mfp.wrap).focus();
            },
            _onFocusIn: function(e) {
                if (e.target !== mfp.wrap[0] && !$.contains(mfp.wrap[0], e.target)) return mfp._setFocus(), 
                !1;
            },
            _parseMarkup: function(template, values, item) {
                var arr;
                item.data && (values = $.extend(item.data, values)), _mfpTrigger("MarkupParse", [ template, values, item ]), 
                $.each(values, function(key, value) {
                    if (void 0 === value || !1 === value) return !0;
                    var el, attr;
                    1 < (arr = key.split("_")).length ? 0 < (el = template.find(".mfp-" + arr[0])).length && ("replaceWith" === (attr = arr[1]) ? el[0] !== value[0] && el.replaceWith(value) : "img" === attr ? el.is("img") ? el.attr("src", value) : el.replaceWith($("<img>").attr("src", value).attr("class", el.attr("class"))) : el.attr(arr[1], value)) : template.find(".mfp-" + key).html(value);
                });
            },
            _getScrollbarSize: function() {
                var scrollDiv;
                return void 0 === mfp.scrollbarSize && ((scrollDiv = document.createElement("div")).style.cssText = "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;", 
                document.body.appendChild(scrollDiv), mfp.scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth, 
                document.body.removeChild(scrollDiv)), mfp.scrollbarSize;
            }
        },
        modules: [],
        open: function(options, index) {
            return _checkInstance(), (options = options ? $.extend(!0, {}, options) : {}).isObj = !0, 
            options.index = index || 0, this.instance.open(options);
        },
        close: function() {
            return $.magnificPopup.instance && $.magnificPopup.instance.close();
        },
        registerModule: function(name, module) {
            module.options && ($.magnificPopup.defaults[name] = module.options), 
            $.extend(this.proto, module.proto), this.modules.push(name);
        },
        defaults: {
            disableOn: 0,
            key: null,
            midClick: !1,
            mainClass: "",
            preloader: !0,
            focus: "",
            closeOnContentClick: !1,
            closeOnBgClick: !0,
            closeBtnInside: !0,
            showCloseBtn: !0,
            enableEscapeKey: !0,
            modal: !1,
            alignTop: !1,
            removalDelay: 0,
            prependTo: null,
            fixedContentPos: "auto",
            fixedBgPos: "auto",
            overflowY: "auto",
            closeMarkup: '<button title="%title%" type="button" class="mfp-close">&#215;</button>',
            tClose: "Close (Esc)",
            tLoading: "Loading...",
            autoFocusLast: !0
        }
    }, $.fn.magnificPopup = function(options) {
        _checkInstance();
        var itemOpts, index, items, jqEl = $(this);
        return "string" == typeof options ? "open" === options ? (itemOpts = _isJQ ? jqEl.data("magnificPopup") : jqEl[0].magnificPopup, 
        index = parseInt(arguments[1], 10) || 0, items = itemOpts.items ? itemOpts.items[index] : (items = jqEl, 
        (items = itemOpts.delegate ? items.find(itemOpts.delegate) : items).eq(index)), 
        mfp._openClick({
            mfpEl: items
        }, jqEl, itemOpts)) : mfp.isOpen && mfp[options].apply(mfp, Array.prototype.slice.call(arguments, 1)) : (options = $.extend(!0, {}, options), 
        _isJQ ? jqEl.data("magnificPopup", options) : jqEl[0].magnificPopup = options, 
        mfp.addGroup(jqEl, options)), jqEl;
    }, $.magnificPopup.registerModule("inline", {
        options: {
            hiddenClass: "hide",
            markup: "",
            tNotFound: "Content not found"
        },
        proto: {
            initInline: function() {
                mfp.types.push("inline"), _mfpOn("Close.inline", function() {
                    _putInlineElementsBack();
                });
            },
            getInline: function(item, template) {
                var inlineSt, el, parent;
                return _putInlineElementsBack(), item.src ? (inlineSt = mfp.st.inline, 
                (el = $(item.src)).length ? ((parent = el[0].parentNode) && parent.tagName && (_inlinePlaceholder || (_hiddenClass = inlineSt.hiddenClass, 
                _inlinePlaceholder = _getEl(_hiddenClass), _hiddenClass = "mfp-" + _hiddenClass), 
                _lastInlineElement = el.after(_inlinePlaceholder).detach().removeClass(_hiddenClass)), 
                mfp.updateStatus("ready")) : (mfp.updateStatus("error", inlineSt.tNotFound), 
                el = $("<div>")), item.inlineElement = el) : (mfp.updateStatus("ready"), 
                mfp._parseMarkup(template, {}, item), template);
            }
        }
    });
    $.magnificPopup.registerModule("ajax", {
        options: {
            settings: null,
            cursor: "mfp-ajax-cur",
            tError: '<a href="%url%">The content</a> could not be loaded.'
        },
        proto: {
            initAjax: function() {
                mfp.types.push("ajax"), _ajaxCur = mfp.st.ajax.cursor, _mfpOn("Close.ajax", _destroyAjaxRequest), 
                _mfpOn("BeforeChange.ajax", _destroyAjaxRequest);
            },
            getAjax: function(item) {
                _ajaxCur && $(document.body).addClass(_ajaxCur), mfp.updateStatus("loading");
                var opts = $.extend({
                    url: item.src,
                    success: function(data, textStatus, jqXHR) {
                        data = {
                            data: data,
                            xhr: jqXHR
                        };
                        _mfpTrigger("ParseAjax", data), mfp.appendContent($(data.data), "ajax"), 
                        item.finished = !0, _removeAjaxCursor(), mfp._setFocus(), 
                        setTimeout(function() {
                            mfp.wrap.addClass("mfp-ready");
                        }, 16), mfp.updateStatus("ready"), _mfpTrigger("AjaxContentAdded");
                    },
                    error: function() {
                        _removeAjaxCursor(), item.finished = item.loadError = !0, 
                        mfp.updateStatus("error", mfp.st.ajax.tError.replace("%url%", item.src));
                    }
                }, mfp.st.ajax.settings);
                return mfp.req = $.ajax(opts), "";
            }
        }
    });
    var _imgInterval;
    $.magnificPopup.registerModule("image", {
        options: {
            markup: '<div class="mfp-figure"><div class="mfp-close"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>',
            cursor: "mfp-zoom-out-cur",
            titleSrc: "title",
            verticalFit: !0,
            tError: '<a href="%url%">The image</a> could not be loaded.'
        },
        proto: {
            initImage: function() {
                var imgSt = mfp.st.image, ns = ".image";
                mfp.types.push("image"), _mfpOn("Open" + ns, function() {
                    "image" === mfp.currItem.type && imgSt.cursor && $(document.body).addClass(imgSt.cursor);
                }), _mfpOn("Close" + ns, function() {
                    imgSt.cursor && $(document.body).removeClass(imgSt.cursor), 
                    _window.off("resize.mfp");
                }), _mfpOn("Resize" + ns, mfp.resizeImage), mfp.isLowIE && _mfpOn("AfterChange", mfp.resizeImage);
            },
            resizeImage: function() {
                var decr, item = mfp.currItem;
                item && item.img && mfp.st.image.verticalFit && (decr = 0, mfp.isLowIE && (decr = parseInt(item.img.css("padding-top"), 10) + parseInt(item.img.css("padding-bottom"), 10)), 
                item.img.css("max-height", mfp.wH - decr));
            },
            _onImageHasSize: function(item) {
                item.img && (item.hasSize = !0, _imgInterval && clearInterval(_imgInterval), 
                item.isCheckingImgSize = !1, _mfpTrigger("ImageHasSize", item), 
                item.imgHidden && (mfp.content && mfp.content.removeClass("mfp-loading"), 
                item.imgHidden = !1));
            },
            findImageSize: function(item) {
                function mfpSetInterval(delay) {
                    _imgInterval && clearInterval(_imgInterval), _imgInterval = setInterval(function() {
                        0 < img.naturalWidth ? mfp._onImageHasSize(item) : (200 < counter && clearInterval(_imgInterval), 
                        3 === ++counter ? mfpSetInterval(10) : 40 === counter ? mfpSetInterval(50) : 100 === counter && mfpSetInterval(500));
                    }, delay);
                }
                var counter = 0, img = item.img[0];
                mfpSetInterval(1);
            },
            getImage: function(item, template) {
                function onLoadComplete() {
                    item && (item.img[0].complete ? (item.img.off(".mfploader"), 
                    item === mfp.currItem && (mfp._onImageHasSize(item), mfp.updateStatus("ready")), 
                    item.hasSize = !0, item.loaded = !0, _mfpTrigger("ImageLoadComplete")) : ++guard < 200 ? setTimeout(onLoadComplete, 100) : onLoadError());
                }
                function onLoadError() {
                    item && (item.img.off(".mfploader"), item === mfp.currItem && (mfp._onImageHasSize(item), 
                    mfp.updateStatus("error", imgSt.tError.replace("%url%", item.src))), 
                    item.hasSize = !0, item.loaded = !0, item.loadError = !0);
                }
                var img, guard = 0, imgSt = mfp.st.image, el = template.find(".mfp-img");
                return el.length && ((img = document.createElement("img")).className = "mfp-img", 
                item.el && item.el.find("img").length && (img.alt = item.el.find("img").attr("alt")), 
                item.img = $(img).on("load.mfploader", onLoadComplete).on("error.mfploader", onLoadError), 
                img.src = item.src, el.is("img") && (item.img = item.img.clone()), 
                0 < (img = item.img[0]).naturalWidth ? item.hasSize = !0 : img.width || (item.hasSize = !1)), 
                mfp._parseMarkup(template, {
                    title: function(item) {
                        if (item.data && void 0 !== item.data.title) return item.data.title;
                        var src = mfp.st.image.titleSrc;
                        if (src) {
                            if ($.isFunction(src)) return src.call(mfp, item);
                            if (item.el) return item.el.attr(src) || "";
                        }
                        return "";
                    }(item),
                    img_replaceWith: item.img
                }, item), mfp.resizeImage(), item.hasSize ? (_imgInterval && clearInterval(_imgInterval), 
                item.loadError ? (template.addClass("mfp-loading"), mfp.updateStatus("error", imgSt.tError.replace("%url%", item.src))) : (template.removeClass("mfp-loading"), 
                mfp.updateStatus("ready"))) : (mfp.updateStatus("loading"), item.loading = !0, 
                item.hasSize || (item.imgHidden = !0, template.addClass("mfp-loading"), 
                mfp.findImageSize(item))), template;
            }
        }
    });
    function _fixIframeBugs(isShowing) {
        var el;
        mfp.currTemplate.iframe && (el = mfp.currTemplate.iframe.find("iframe")).length && (isShowing || (el[0].src = "//about:blank"), 
        mfp.isIE8 && el.css("display", isShowing ? "block" : "none"));
    }
    function _getLoopedId(index) {
        var numSlides = mfp.items.length;
        return numSlides - 1 < index ? index - numSlides : index < 0 ? numSlides + index : index;
    }
    function _replaceCurrTotal(text, curr, total) {
        return text.replace(/%curr%/gi, curr + 1).replace(/%total%/gi, total);
    }
    var hasMozTransform;
    $.magnificPopup.registerModule("zoom", {
        options: {
            enabled: !1,
            easing: "ease-in-out",
            duration: 300,
            opener: function(element) {
                return element.is("img") ? element : element.find("img");
            }
        },
        proto: {
            initZoom: function() {
                var image, duration, getElToAnimate, showMainContent, openTimeout, animatedImg, zoomSt = mfp.st.zoom, ns = ".zoom";
                zoomSt.enabled && mfp.supportsTransition && (duration = zoomSt.duration, 
                getElToAnimate = function(image) {
                    var image = image.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image"), transition = "all " + zoomSt.duration / 1e3 + "s " + zoomSt.easing, cssObj = {
                        position: "fixed",
                        zIndex: 9999,
                        left: 0,
                        top: 0,
                        "-webkit-backface-visibility": "hidden"
                    }, t = "transition";
                    return cssObj["-webkit-" + t] = cssObj["-moz-" + t] = cssObj["-o-" + t] = cssObj[t] = transition, 
                    image.css(cssObj), image;
                }, showMainContent = function() {
                    mfp.content.css("visibility", "visible");
                }, _mfpOn("BuildControls" + ns, function() {
                    mfp._allowZoom() && (clearTimeout(openTimeout), mfp.content.css("visibility", "hidden"), 
                    (image = mfp._getItemToZoom()) ? ((animatedImg = getElToAnimate(image)).css(mfp._getOffset()), 
                    mfp.wrap.append(animatedImg), openTimeout = setTimeout(function() {
                        animatedImg.css(mfp._getOffset(!0)), openTimeout = setTimeout(function() {
                            showMainContent(), setTimeout(function() {
                                animatedImg.remove(), image = animatedImg = null, 
                                _mfpTrigger("ZoomAnimationEnded");
                            }, 16);
                        }, duration);
                    }, 16)) : showMainContent());
                }), _mfpOn("BeforeClose" + ns, function() {
                    if (mfp._allowZoom()) {
                        if (clearTimeout(openTimeout), mfp.st.removalDelay = duration, 
                        !image) {
                            if (!(image = mfp._getItemToZoom())) return;
                            animatedImg = getElToAnimate(image);
                        }
                        animatedImg.css(mfp._getOffset(!0)), mfp.wrap.append(animatedImg), 
                        mfp.content.css("visibility", "hidden"), setTimeout(function() {
                            animatedImg.css(mfp._getOffset());
                        }, 16);
                    }
                }), _mfpOn("Close" + ns, function() {
                    mfp._allowZoom() && (showMainContent(), animatedImg && animatedImg.remove(), 
                    image = null);
                }));
            },
            _allowZoom: function() {
                return "image" === mfp.currItem.type;
            },
            _getItemToZoom: function() {
                return !!mfp.currItem.hasSize && mfp.currItem.img;
            },
            _getOffset: function(isLarge) {
                var isLarge = isLarge ? mfp.currItem.img : mfp.st.zoom.opener(mfp.currItem.el || mfp.currItem), offset = isLarge.offset(), paddingTop = parseInt(isLarge.css("padding-top"), 10), paddingBottom = parseInt(isLarge.css("padding-bottom"), 10), isLarge = (offset.top -= $(window).scrollTop() - paddingTop, 
                {
                    width: isLarge.width(),
                    height: (_isJQ ? isLarge.innerHeight() : isLarge[0].offsetHeight) - paddingBottom - paddingTop
                });
                return (hasMozTransform = void 0 === hasMozTransform ? void 0 !== document.createElement("p").style.MozTransform : hasMozTransform) ? isLarge["-moz-transform"] = isLarge.transform = "translate(" + offset.left + "px," + offset.top + "px)" : (isLarge.left = offset.left, 
                isLarge.top = offset.top), isLarge;
            }
        }
    }), $.magnificPopup.registerModule("iframe", {
        options: {
            markup: '<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',
            srcAction: "iframe_src",
            patterns: {
                youtube: {
                    index: "youtube.com",
                    id: "v=",
                    src: "//www.youtube.com/embed/%id%?autoplay=1"
                },
                vimeo: {
                    index: "vimeo.com/",
                    id: "/",
                    src: "//player.vimeo.com/video/%id%?autoplay=1"
                },
                gmaps: {
                    index: "//maps.google.",
                    src: "%id%&output=embed"
                }
            }
        },
        proto: {
            initIframe: function() {
                mfp.types.push("iframe"), _mfpOn("BeforeChange", function(e, prevType, newType) {
                    prevType !== newType && ("iframe" === prevType ? _fixIframeBugs() : "iframe" === newType && _fixIframeBugs(!0));
                }), _mfpOn("Close.iframe", function() {
                    _fixIframeBugs();
                });
            },
            getIframe: function(item, template) {
                var embedSrc = item.src, iframeSt = mfp.st.iframe, dataObj = ($.each(iframeSt.patterns, function() {
                    if (-1 < embedSrc.indexOf(this.index)) return this.id && (embedSrc = "string" == typeof this.id ? embedSrc.substr(embedSrc.lastIndexOf(this.id) + this.id.length, embedSrc.length) : this.id.call(this, embedSrc)), 
                    embedSrc = this.src.replace("%id%", embedSrc), !1;
                }), {});
                return iframeSt.srcAction && (dataObj[iframeSt.srcAction] = embedSrc), 
                mfp._parseMarkup(template, dataObj, item), mfp.updateStatus("ready"), 
                template;
            }
        }
    }), $.magnificPopup.registerModule("gallery", {
        options: {
            enabled: !1,
            arrowMarkup: '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',
            preload: [ 0, 2 ],
            navigateByImgClick: !0,
            arrows: !0,
            tPrev: "Previous (Left arrow key)",
            tNext: "Next (Right arrow key)",
            tCounter: "%curr% of %total%"
        },
        proto: {
            initGallery: function() {
                var gSt = mfp.st.gallery, ns = ".mfp-gallery";
                if (mfp.direction = !0, !gSt || !gSt.enabled) return !1;
                _wrapClasses += " mfp-gallery", _mfpOn("Open" + ns, function() {
                    gSt.navigateByImgClick && mfp.wrap.on("click" + ns, ".mfp-img", function() {
                        if (1 < mfp.items.length) return mfp.next(), !1;
                    }), _document.on("keydown" + ns, function(e) {
                        37 === e.keyCode ? mfp.prev() : 39 === e.keyCode && mfp.next();
                    });
                }), _mfpOn("UpdateStatus" + ns, function(e, data) {
                    data.text && (data.text = _replaceCurrTotal(data.text, mfp.currItem.index, mfp.items.length));
                }), _mfpOn("MarkupParse" + ns, function(e, element, values, item) {
                    var l = mfp.items.length;
                    values.counter = 1 < l ? _replaceCurrTotal(gSt.tCounter, item.index, l) : "";
                }), _mfpOn("BuildControls" + ns, function() {
                    var arrowLeft, markup;
                    1 < mfp.items.length && gSt.arrows && !mfp.arrowLeft && (markup = gSt.arrowMarkup, 
                    arrowLeft = mfp.arrowLeft = $(markup.replace(/%title%/gi, gSt.tPrev).replace(/%dir%/gi, "left")).addClass("mfp-prevent-close"), 
                    markup = mfp.arrowRight = $(markup.replace(/%title%/gi, gSt.tNext).replace(/%dir%/gi, "right")).addClass("mfp-prevent-close"), 
                    arrowLeft.click(function() {
                        mfp.prev();
                    }), markup.click(function() {
                        mfp.next();
                    }), mfp.container.append(arrowLeft.add(markup)));
                }), _mfpOn("Change" + ns, function() {
                    mfp._preloadTimeout && clearTimeout(mfp._preloadTimeout), mfp._preloadTimeout = setTimeout(function() {
                        mfp.preloadNearbyImages(), mfp._preloadTimeout = null;
                    }, 16);
                }), _mfpOn("Close" + ns, function() {
                    _document.off(ns), mfp.wrap.off("click" + ns), mfp.arrowRight = mfp.arrowLeft = null;
                });
            },
            next: function() {
                mfp.direction = !0, mfp.index = _getLoopedId(mfp.index + 1), mfp.updateItemHTML();
            },
            prev: function() {
                mfp.direction = !1, mfp.index = _getLoopedId(mfp.index - 1), mfp.updateItemHTML();
            },
            goTo: function(newIndex) {
                mfp.direction = newIndex >= mfp.index, mfp.index = newIndex, mfp.updateItemHTML();
            },
            preloadNearbyImages: function() {
                for (var p = mfp.st.gallery.preload, preloadBefore = Math.min(p[0], mfp.items.length), preloadAfter = Math.min(p[1], mfp.items.length), i = 1; i <= (mfp.direction ? preloadAfter : preloadBefore); i++) mfp._preloadItem(mfp.index + i);
                for (i = 1; i <= (mfp.direction ? preloadBefore : preloadAfter); i++) mfp._preloadItem(mfp.index - i);
            },
            _preloadItem: function(index) {
                var item;
                index = _getLoopedId(index), mfp.items[index].preloaded || ((item = mfp.items[index]).parsed || (item = mfp.parseEl(index)), 
                _mfpTrigger("LazyLoad", item), "image" === item.type && (item.img = $('<img class="mfp-img" />').on("load.mfploader", function() {
                    item.hasSize = !0;
                }).on("error.mfploader", function() {
                    item.hasSize = !0, item.loadError = !0, _mfpTrigger("LazyLoadError", item);
                }).attr("src", item.src)), item.preloaded = !0);
            }
        }
    });
    $.magnificPopup.registerModule("retina", {
        options: {
            replaceSrc: function(item) {
                return item.src.replace(/\.\w+$/, function(m) {
                    return "@2x" + m;
                });
            },
            ratio: 1
        },
        proto: {
            initRetina: function() {
                var st, ratio;
                1 < window.devicePixelRatio && (st = mfp.st.retina, ratio = st.ratio, 
                1 < (ratio = isNaN(ratio) ? ratio() : ratio) && (_mfpOn("ImageHasSize.retina", function(e, item) {
                    item.img.css({
                        "max-width": item.img[0].naturalWidth / ratio,
                        width: "100%"
                    });
                }), _mfpOn("ElementParse.retina", function(e, item) {
                    item.src = st.replaceSrc(item, ratio);
                })));
            }
        }
    }), _checkInstance();
}), function($) {
    "use strict";
    var BASICSTAR = '<?xml version="1.0" encoding="utf-8"?><svg version="1.1"xmlns="http://www.w3.org/2000/svg"viewBox="0 12.705 512 486.59"x="0px" y="0px"xml:space="preserve"><polygon points="256.814,12.705 317.205,198.566 512.631,198.566 354.529,313.435 414.918,499.295 256.814,384.427 98.713,499.295 159.102,313.435 1,198.566 196.426,198.566 "/></svg>', DEFAULTS = {
        starWidth: "32px",
        normalFill: "gray",
        ratedFill: "#f39c12",
        numStars: 5,
        maxValue: 5,
        precision: 1,
        rating: 0,
        fullStar: !1,
        halfStar: !1,
        readOnly: !1,
        spacing: "0px",
        rtl: !1,
        multiColor: null,
        onInit: null,
        onChange: null,
        onSet: null,
        starSvg: null
    }, MULTICOLOR_OPTIONS = {
        startColor: "#c0392b",
        endColor: "#f1c40f"
    };
    function checkPrecision(value, minValue, maxValue) {
        return value === minValue ? value = minValue : value === maxValue && (value = maxValue), 
        value;
    }
    var hexRegex = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i, hexToRGB = function(hex) {
        if (!hexRegex.test(hex)) return null;
        hex = hexRegex.exec(hex);
        return {
            r: parseInt(hex[1], 16),
            g: parseInt(hex[2], 16),
            b: parseInt(hex[3], 16)
        };
    };
    function getChannelValue(startVal, endVal, percent) {
        percent = percent / 100 * (endVal - startVal);
        return percent = 1 === (percent = Math.round(startVal + percent).toString(16)).length ? "0" + percent : percent;
    }
    function RateYo($node, options) {
        this.node = $node.get(0);
        var step, starWidth, percentOfStar, spacing, percentOfSpacing, containerWidth, that = this, $groupWrapper = ($node.empty().addClass("jq-ry-container"), 
        $("<div/>").addClass("jq-ry-group-wrapper").appendTo($node)), $normalGroup = $("<div/>").addClass("jq-ry-normal-group").addClass("jq-ry-group").appendTo($groupWrapper), $ratedGroup = $("<div/>").addClass("jq-ry-rated-group").addClass("jq-ry-group").appendTo($groupWrapper), minValue = 0, currentRating = options.rating, isInitialized = !1;
        function showRating(ratingVal) {
            void 0 === ratingVal && (ratingVal = options.rating);
            var ratingVal = (currentRating = ratingVal) / step, percent = ratingVal * percentOfStar;
            1 < ratingVal && (percent += (Math.ceil(ratingVal) - 1) * percentOfSpacing), 
            setRatedFill(options.ratedFill), (percent = options.rtl ? 100 - percent : percent) < 0 ? percent = 0 : 100 < percent && (percent = 100), 
            $ratedGroup.css("width", percent + "%");
        }
        function setContainerWidth() {
            containerWidth = starWidth * options.numStars + spacing * (options.numStars - 1), 
            percentOfStar = starWidth / containerWidth * 100, percentOfSpacing = spacing / containerWidth * 100, 
            $node.width(containerWidth), showRating();
        }
        function setStarWidth(newWidth) {
            newWidth = options.starWidth = newWidth;
            return starWidth = window.parseFloat(options.starWidth.replace("px", "")), 
            $normalGroup.find("svg").attr({
                width: options.starWidth,
                height: newWidth
            }), $ratedGroup.find("svg").attr({
                width: options.starWidth,
                height: newWidth
            }), setContainerWidth(), $node;
        }
        function setSpacing(newSpacing) {
            return options.spacing = newSpacing, spacing = parseFloat(options.spacing.replace("px", "")), 
            $normalGroup.find("svg:not(:first-child)").css({
                "margin-left": newSpacing
            }), $ratedGroup.find("svg:not(:first-child)").css({
                "margin-left": newSpacing
            }), setContainerWidth(), $node;
        }
        function setNormalFill(newFill) {
            return options.normalFill = newFill, (options.rtl ? $ratedGroup : $normalGroup).find("svg").attr({
                fill: options.normalFill
            }), $node;
        }
        var ratedFill = options.ratedFill;
        function setRatedFill(newFill) {
            var percentCovered, colorOpts;
            return options.multiColor ? (percentCovered = (currentRating - minValue) / options.maxValue * 100, 
            newFill = function(startColor, endColor, percent) {
                if (!startColor || !endColor) return null;
                percent = void 0 !== percent ? percent : 0, startColor = hexToRGB(startColor), 
                endColor = hexToRGB(endColor);
                var r = getChannelValue(startColor.r, endColor.r, percent), b = getChannelValue(startColor.b, endColor.b, percent);
                return "#" + r + getChannelValue(startColor.g, endColor.g, percent) + b;
            }((colorOpts = options.multiColor || {}).startColor || MULTICOLOR_OPTIONS.startColor, colorOpts.endColor || MULTICOLOR_OPTIONS.endColor, percentCovered)) : ratedFill = newFill, 
            options.ratedFill = newFill, (options.rtl ? $normalGroup : $ratedGroup).find("svg").attr({
                fill: options.ratedFill
            }), $node;
        }
        function setRtl(newValue) {
            options.rtl = newValue = !!newValue, setNormalFill(options.normalFill), 
            showRating();
        }
        function setMultiColor(colorOptions) {
            options.multiColor = colorOptions, setRatedFill(colorOptions || ratedFill);
        }
        function setNumStars(newValue) {
            options.numStars = newValue, step = options.maxValue / options.numStars, 
            $normalGroup.empty(), $ratedGroup.empty();
            for (var i = 0; i < options.numStars; i++) $normalGroup.append($(options.starSvg || BASICSTAR)), 
            $ratedGroup.append($(options.starSvg || BASICSTAR));
            return setStarWidth(options.starWidth), setNormalFill(options.normalFill), 
            setSpacing(options.spacing), showRating(), $node;
        }
        function setMaxValue(newValue) {
            return options.maxValue = newValue, step = options.maxValue / options.numStars, 
            options.rating > newValue && setRating(newValue), showRating(), $node;
        }
        function setPrecision(newValue) {
            return options.precision = newValue, setRating(options.rating), $node;
        }
        function setHalfStar(newValue) {
            return options.halfStar = newValue, $node;
        }
        function setFullStar(newValue) {
            return options.fullStar = newValue, $node;
        }
        function calculateRating(e) {
            var isHalfStar, isFullStar, nodeStartX = $normalGroup.offset().left, nodeEndX = nodeStartX + $normalGroup.width(), maxValue = options.maxValue, e = e.pageX, calculatedRating = 0;
            if (e < nodeStartX) calculatedRating = minValue; else if (nodeEndX < e) calculatedRating = maxValue; else {
                e = (e - nodeStartX) / (nodeEndX - nodeStartX);
                if (0 < spacing) for (var remPrcnt = e *= 100; 0 < remPrcnt; ) percentOfStar < remPrcnt ? (calculatedRating += step, 
                remPrcnt -= percentOfStar + percentOfSpacing) : (calculatedRating += remPrcnt / percentOfStar * step, 
                remPrcnt = 0); else calculatedRating = e * options.maxValue;
                nodeStartX = (nodeEndX = calculatedRating) % step, e = step / 2, 
                isHalfStar = options.halfStar, ((isFullStar = options.fullStar) || isHalfStar) && (isFullStar || isHalfStar && e < nodeStartX ? nodeEndX += step - nodeStartX : (nodeEndX -= nodeStartX, 
                0 < nodeStartX && (nodeEndX += e))), calculatedRating = nodeEndX;
            }
            return options.rtl && (calculatedRating = maxValue - calculatedRating), 
            parseFloat(calculatedRating);
        }
        function setReadOnly(newValue) {
            return options.readOnly = newValue, $node.attr("readonly", !0), unbindEvents(), 
            newValue || ($node.removeAttr("readonly"), $node.on("mousemove", onMouseEnter).on("mouseenter", onMouseEnter).on("mouseleave", onMouseLeave).on("click", onMouseClick).on("rateyo.init", onInit).on("rateyo.change", onChange).on("rateyo.set", onSet)), 
            $node;
        }
        function setRating(newValue) {
            var maxValue = options.maxValue;
            return "string" == typeof newValue && ("%" === newValue[newValue.length - 1] && (newValue = newValue.substr(0, newValue.length - 1), 
            setMaxValue(maxValue = 100)), newValue = parseFloat(newValue)), function(value, minValue, maxValue) {
                if (!(minValue <= value && value <= maxValue)) throw Error("Invalid Rating, expected value between " + minValue + " and " + maxValue);
            }(newValue, minValue, maxValue), newValue = parseFloat(newValue.toFixed(options.precision)), 
            checkPrecision(parseFloat(newValue), minValue, maxValue), options.rating = newValue, 
            showRating(), isInitialized && $node.trigger("rateyo.set", {
                rating: newValue
            }), $node;
        }
        function setOnInit(method) {
            return options.onInit = method, $node;
        }
        function setOnSet(method) {
            return options.onSet = method, $node;
        }
        function setOnChange(method) {
            return options.onChange = method, $node;
        }
        function onMouseEnter(e) {
            var e = calculateRating(e).toFixed(options.precision), maxValue = options.maxValue;
            showRating(e = checkPrecision(parseFloat(e), minValue, maxValue)), $node.trigger("rateyo.change", {
                rating: e
            });
        }
        function onMouseLeave() {
            var a, check;
            check = !1, a = navigator.userAgent || navigator.vendor || window.opera, 
            (check = !(!/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) && !/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) || check) || (showRating(), 
            $node.trigger("rateyo.change", {
                rating: options.rating
            }));
        }
        function onMouseClick(e) {
            e = calculateRating(e).toFixed(options.precision), e = parseFloat(e);
            that.rating(e);
        }
        function onInit(e, data) {
            options.onInit && "function" == typeof options.onInit && options.onInit.apply(this, [ data.rating, that ]);
        }
        function onChange(e, data) {
            options.onChange && "function" == typeof options.onChange && options.onChange.apply(this, [ data.rating, that ]);
        }
        function onSet(e, data) {
            options.onSet && "function" == typeof options.onSet && options.onSet.apply(this, [ data.rating, that ]);
        }
        function unbindEvents() {
            $node.off("mousemove", onMouseEnter).off("mouseenter", onMouseEnter).off("mouseleave", onMouseLeave).off("click", onMouseClick).off("rateyo.init", onInit).off("rateyo.change", onChange).off("rateyo.set", onSet);
        }
        this.rating = function(newValue) {
            return void 0 === newValue ? options.rating : (setRating(newValue), 
            $node);
        }, this.destroy = function() {
            var node, collection;
            return options.readOnly || unbindEvents(), RateYo.prototype.collection = (node = $node.get(0), 
            collection = this.collection, $.each(collection, function(index) {
                var firstPart;
                if (node === this.node) return firstPart = collection.slice(0, index), 
                index = collection.slice(index + 1, collection.length), collection = firstPart.concat(index), 
                !1;
            }), collection), $node.removeClass("jq-ry-container").children().remove(), 
            $node;
        }, this.method = function(methodName) {
            if (!methodName) throw Error("Method name not specified!");
            if (void 0 === this[methodName]) throw Error("Method " + methodName + " doesn't exist!");
            var params = Array.prototype.slice.apply(arguments, []).slice(1);
            return this[methodName].apply(this, params);
        }, this.option = function(optionName, param) {
            if (void 0 === optionName) return options;
            var method;
            switch (optionName) {
              case "starWidth":
                method = setStarWidth;
                break;

              case "numStars":
                method = setNumStars;
                break;

              case "normalFill":
                method = setNormalFill;
                break;

              case "ratedFill":
                method = setRatedFill;
                break;

              case "multiColor":
                method = setMultiColor;
                break;

              case "maxValue":
                method = setMaxValue;
                break;

              case "precision":
                method = setPrecision;
                break;

              case "rating":
                method = setRating;
                break;

              case "halfStar":
                method = setHalfStar;
                break;

              case "fullStar":
                method = setFullStar;
                break;

              case "readOnly":
                method = setReadOnly;
                break;

              case "spacing":
                method = setSpacing;
                break;

              case "rtl":
                method = setRtl;
                break;

              case "onInit":
                method = setOnInit;
                break;

              case "onSet":
                method = setOnSet;
                break;

              case "onChange":
                method = setOnChange;
                break;

              default:
                throw Error("No such option as " + optionName);
            }
            return void 0 !== param ? method(param) : options[optionName];
        }, setNumStars(options.numStars), setReadOnly(options.readOnly), options.rtl && setRtl(options.rtl), 
        this.collection.push(this), this.rating(options.rating, !0), isInitialized = !0, 
        $node.trigger("rateyo.init", {
            rating: options.rating
        });
    }
    function getInstance(node, collection) {
        var instance;
        return $.each(collection, function() {
            if (node === this.node) return instance = this, !1;
        }), instance;
    }
    RateYo.prototype.collection = [], window.RateYo = RateYo, $.fn.rateYo = function() {
        return function(options) {
            var rateYoInstances = RateYo.prototype.collection, $nodes = $(this);
            if (0 === $nodes.length) return $nodes;
            var methodName, params, result, args = Array.prototype.slice.apply(arguments, []);
            if (0 === args.length) options = args[0] = {}; else {
                if (1 !== args.length || "object" != typeof args[0]) {
                    if (1 <= args.length && "string" == typeof args[0]) return methodName = args[0], 
                    params = args.slice(1), result = [], $.each($nodes, function(i, node) {
                        node = getInstance(node, rateYoInstances);
                        if (!node) throw Error("Trying to set options before even initialization");
                        var method = node[methodName];
                        if (!method) throw Error("Method " + methodName + " does not exist!");
                        method = method.apply(node, params);
                        result.push(method);
                    }), result = 1 === result.length ? result[0] : result;
                    throw Error("Invalid Arguments");
                }
                options = args[0];
            }
            return options = $.extend({}, DEFAULTS, options), $.each($nodes, function() {
                var existingInstance = getInstance(this, rateYoInstances);
                if (existingInstance) return existingInstance;
                var existingInstance = $(this), dataAttrs = {}, optionsCopy = $.extend({}, options);
                return $.each(existingInstance.data(), function(key, value) {
                    0 === key.indexOf("rateyo") && (key = (key = key.replace(/^rateyo/, ""))[0].toLowerCase() + key.slice(1), 
                    dataAttrs[key] = value, delete optionsCopy[key]);
                }), new RateYo($(this), $.extend({}, dataAttrs, optionsCopy));
            });
        }.apply(this, Array.prototype.slice.apply(arguments, []));
    };
}(window.jQuery), function(factory) {
    "undefined" != typeof jQuery && jQuery || "function" != typeof define || !define.amd ? "undefined" != typeof jQuery && jQuery || "object" != typeof exports ? factory(jQuery, document, window, navigator) : factory(require("jquery"), document, window, navigator) : define([ "jquery" ], function(jQuery) {
        return factory(jQuery, document, window, navigator);
    });
}(function($, document, window, navigator, undefined) {
    "use strict";
    function IonRangeSlider(input, options, plugin_count) {
        this.VERSION = "2.3.1", this.input = input, this.plugin_count = plugin_count, 
        this.current_plugin = 0, this.calc_count = 0, this.update_tm = 0, this.old_from = 0, 
        this.old_to = 0, this.old_min_interval = null, this.raf_id = null, this.dragging = !1, 
        this.force_redraw = !1, this.no_diapason = !1, this.has_tab_index = !0, 
        this.is_key = !1, this.is_update = !1, this.is_start = !0, this.is_finish = !1, 
        this.is_active = !1, this.is_resize = !1, this.is_click = !1, options = options || {}, 
        this.$cache = {
            win: $(window),
            body: $(document.body),
            input: $(input),
            cont: null,
            rs: null,
            min: null,
            max: null,
            from: null,
            to: null,
            single: null,
            bar: null,
            line: null,
            s_single: null,
            s_from: null,
            s_to: null,
            shad_single: null,
            shad_from: null,
            shad_to: null,
            edge: null,
            grid: null,
            grid_labels: []
        }, this.coords = {
            x_gap: 0,
            x_pointer: 0,
            w_rs: 0,
            w_rs_old: 0,
            w_handle: 0,
            p_gap: 0,
            p_gap_left: 0,
            p_gap_right: 0,
            p_step: 0,
            p_pointer: 0,
            p_handle: 0,
            p_single_fake: 0,
            p_single_real: 0,
            p_from_fake: 0,
            p_from_real: 0,
            p_to_fake: 0,
            p_to_real: 0,
            p_bar_x: 0,
            p_bar_w: 0,
            grid_gap: 0,
            big_num: 0,
            big: [],
            big_w: [],
            big_p: [],
            big_x: []
        }, this.labels = {
            w_min: 0,
            w_max: 0,
            w_from: 0,
            w_to: 0,
            w_single: 0,
            p_min: 0,
            p_max: 0,
            p_from_fake: 0,
            p_from_left: 0,
            p_to_fake: 0,
            p_to_left: 0,
            p_single_fake: 0,
            p_single_left: 0
        };
        var config_from_data, prop, input = (plugin_count = this.$cache.input).prop("value"), config = {
            skin: "flat",
            type: "single",
            min: 10,
            max: 100,
            from: null,
            to: null,
            step: 1,
            min_interval: 0,
            max_interval: 0,
            drag_interval: !1,
            values: [],
            p_values: [],
            from_fixed: !1,
            from_min: null,
            from_max: null,
            from_shadow: !1,
            to_fixed: !1,
            to_min: null,
            to_max: null,
            to_shadow: !1,
            prettify_enabled: !0,
            prettify_separator: " ",
            prettify: null,
            force_edges: !1,
            keyboard: !0,
            grid: !1,
            grid_margin: !0,
            grid_num: 4,
            grid_snap: !1,
            hide_min_max: !1,
            hide_from_to: !1,
            prefix: "",
            postfix: "",
            max_postfix: "",
            decorate_both: !0,
            values_separator: " â ",
            input_values_separator: ";",
            disable: !1,
            block: !1,
            extra_classes: "",
            scope: null,
            onStart: null,
            onChange: null,
            onFinish: null,
            onUpdate: null
        };
        for (prop in "INPUT" !== plugin_count[0].nodeName && console && console.warn && console.warn("Base element should be <input>!", plugin_count[0]), 
        (config_from_data = {
            skin: plugin_count.data("skin"),
            type: plugin_count.data("type"),
            min: plugin_count.data("min"),
            max: plugin_count.data("max"),
            from: plugin_count.data("from"),
            to: plugin_count.data("to"),
            step: plugin_count.data("step"),
            min_interval: plugin_count.data("minInterval"),
            max_interval: plugin_count.data("maxInterval"),
            drag_interval: plugin_count.data("dragInterval"),
            values: plugin_count.data("values"),
            from_fixed: plugin_count.data("fromFixed"),
            from_min: plugin_count.data("fromMin"),
            from_max: plugin_count.data("fromMax"),
            from_shadow: plugin_count.data("fromShadow"),
            to_fixed: plugin_count.data("toFixed"),
            to_min: plugin_count.data("toMin"),
            to_max: plugin_count.data("toMax"),
            to_shadow: plugin_count.data("toShadow"),
            prettify_enabled: plugin_count.data("prettifyEnabled"),
            prettify_separator: plugin_count.data("prettifySeparator"),
            force_edges: plugin_count.data("forceEdges"),
            keyboard: plugin_count.data("keyboard"),
            grid: plugin_count.data("grid"),
            grid_margin: plugin_count.data("gridMargin"),
            grid_num: plugin_count.data("gridNum"),
            grid_snap: plugin_count.data("gridSnap"),
            hide_min_max: plugin_count.data("hideMinMax"),
            hide_from_to: plugin_count.data("hideFromTo"),
            prefix: plugin_count.data("prefix"),
            postfix: plugin_count.data("postfix"),
            max_postfix: plugin_count.data("maxPostfix"),
            decorate_both: plugin_count.data("decorateBoth"),
            values_separator: plugin_count.data("valuesSeparator"),
            input_values_separator: plugin_count.data("inputValuesSeparator"),
            disable: plugin_count.data("disable"),
            block: plugin_count.data("block"),
            extra_classes: plugin_count.data("extraClasses")
        }).values = config_from_data.values && config_from_data.values.split(","), 
        config_from_data) !config_from_data.hasOwnProperty(prop) || config_from_data[prop] !== undefined && "" !== config_from_data[prop] || delete config_from_data[prop];
        input !== undefined && "" !== input && ((input = input.split(config_from_data.input_values_separator || options.input_values_separator || ";"))[0] && input[0] == +input[0] && (input[0] = +input[0]), 
        input[1] && input[1] == +input[1] && (input[1] = +input[1]), options && options.values && options.values.length ? (config.from = input[0] && options.values.indexOf(input[0]), 
        config.to = input[1] && options.values.indexOf(input[1])) : (config.from = input[0] && +input[0], 
        config.to = input[1] && +input[1])), $.extend(config, options), $.extend(config, config_from_data), 
        this.options = config, this.update_check = {}, this.validate(), this.result = {
            input: this.$cache.input,
            slider: null,
            min: this.options.min,
            max: this.options.max,
            from: this.options.from,
            from_percent: 0,
            from_value: null,
            to: this.options.to,
            to_percent: 0,
            to_value: null
        }, this.init();
    }
    var r, plugin_count = 0, is_old_ie = (navigator = navigator.userAgent, r = /msie\s\d+/i, 
    0 < navigator.search(r) && r.exec(navigator).toString().split(" ")[1] < 9 && ($("html").addClass("lt-ie9"), 
    !0));
    Function.prototype.bind || (Function.prototype.bind = function(that) {
        var target = this, slice = [].slice;
        if ("function" != typeof target) throw new TypeError();
        var args = slice.call(arguments, 1), bound = function() {
            var F, result;
            return this instanceof bound ? ((F = function() {}).prototype = target.prototype, 
            F = new F(), result = target.apply(F, args.concat(slice.call(arguments))), 
            Object(result) === result ? result : F) : target.apply(that, args.concat(slice.call(arguments)));
        };
        return bound;
    }), Array.prototype.indexOf || (Array.prototype.indexOf = function(searchElement, fromIndex) {
        var k;
        if (null == this) throw new TypeError('"this" is null or not defined');
        var O = Object(this), len = O.length >>> 0;
        if (0 != len) {
            fromIndex = +fromIndex || 0;
            if (!(len <= (fromIndex = Math.abs(fromIndex) === 1 / 0 ? 0 : fromIndex))) for (k = Math.max(0 <= fromIndex ? fromIndex : len - Math.abs(fromIndex), 0); k < len; ) {
                if (k in O && O[k] === searchElement) return k;
                k++;
            }
        }
        return -1;
    });
    IonRangeSlider.prototype = {
        init: function(is_update) {
            this.no_diapason = !1, this.coords.p_step = this.convertToPercent(this.options.step, !0), 
            this.target = "base", this.toggleInput(), this.append(), this.setMinMax(), 
            is_update ? (this.force_redraw = !0, this.calc(!0), this.callOnUpdate()) : (this.force_redraw = !0, 
            this.calc(!0), this.callOnStart()), this.updateScene();
        },
        append: function() {
            var container_html = '<span class="irs irs--' + this.options.skin + " js-irs-" + this.plugin_count + " " + this.options.extra_classes + '"></span>';
            this.$cache.input.before(container_html), this.$cache.input.prop("readonly", !0), 
            this.$cache.cont = this.$cache.input.prev(), this.result.slider = this.$cache.cont, 
            this.$cache.cont.html('<span class="irs"><span class="irs-line" tabindex="0"></span><span class="irs-min">0</span><span class="irs-max">1</span><span class="irs-from">0</span><span class="irs-to">0</span><span class="irs-single">0</span></span><span class="irs-grid"></span>'), 
            this.$cache.rs = this.$cache.cont.find(".irs"), this.$cache.min = this.$cache.cont.find(".irs-min"), 
            this.$cache.max = this.$cache.cont.find(".irs-max"), this.$cache.from = this.$cache.cont.find(".irs-from"), 
            this.$cache.to = this.$cache.cont.find(".irs-to"), this.$cache.single = this.$cache.cont.find(".irs-single"), 
            this.$cache.line = this.$cache.cont.find(".irs-line"), this.$cache.grid = this.$cache.cont.find(".irs-grid"), 
            "single" === this.options.type ? (this.$cache.cont.append('<span class="irs-bar irs-bar--single"></span><span class="irs-shadow shadow-single"></span><span class="irs-handle single"><i></i><i></i><i></i></span>'), 
            this.$cache.bar = this.$cache.cont.find(".irs-bar"), this.$cache.edge = this.$cache.cont.find(".irs-bar-edge"), 
            this.$cache.s_single = this.$cache.cont.find(".single"), this.$cache.from[0].style.visibility = "hidden", 
            this.$cache.to[0].style.visibility = "hidden", this.$cache.shad_single = this.$cache.cont.find(".shadow-single")) : (this.$cache.cont.append('<span class="irs-bar"></span><span class="irs-shadow shadow-from"></span><span class="irs-shadow shadow-to"></span><span class="irs-handle from"><i></i><i></i><i></i></span><span class="irs-handle to"><i></i><i></i><i></i></span>'), 
            this.$cache.bar = this.$cache.cont.find(".irs-bar"), this.$cache.s_from = this.$cache.cont.find(".from"), 
            this.$cache.s_to = this.$cache.cont.find(".to"), this.$cache.shad_from = this.$cache.cont.find(".shadow-from"), 
            this.$cache.shad_to = this.$cache.cont.find(".shadow-to"), this.setTopHandler()), 
            this.options.hide_from_to && (this.$cache.from[0].style.display = "none", 
            this.$cache.to[0].style.display = "none", this.$cache.single[0].style.display = "none"), 
            this.appendGrid(), this.options.disable ? (this.appendDisableMask(), 
            this.$cache.input[0].disabled = !0) : (this.$cache.input[0].disabled = !1, 
            this.removeDisableMask(), this.bindEvents()), this.options.disable || (this.options.block ? this.appendDisableMask() : this.removeDisableMask()), 
            this.options.drag_interval && (this.$cache.bar[0].style.cursor = "ew-resize");
        },
        setTopHandler: function() {
            var min = this.options.min, max = this.options.max, from = this.options.from, to = this.options.to;
            min < from && to === max ? this.$cache.s_from.addClass("type_last") : to < max && this.$cache.s_to.addClass("type_last");
        },
        changeLevel: function(target) {
            switch (target) {
              case "single":
                this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_single_fake), 
                this.$cache.s_single.addClass("state_hover");
                break;

              case "from":
                this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake), 
                this.$cache.s_from.addClass("state_hover"), this.$cache.s_from.addClass("type_last"), 
                this.$cache.s_to.removeClass("type_last");
                break;

              case "to":
                this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_to_fake), 
                this.$cache.s_to.addClass("state_hover"), this.$cache.s_to.addClass("type_last"), 
                this.$cache.s_from.removeClass("type_last");
                break;

              case "both":
                this.coords.p_gap_left = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake), 
                this.coords.p_gap_right = this.toFixed(this.coords.p_to_fake - this.coords.p_pointer), 
                this.$cache.s_to.removeClass("type_last"), this.$cache.s_from.removeClass("type_last");
            }
        },
        appendDisableMask: function() {
            this.$cache.cont.append('<span class="irs-disable-mask"></span>'), this.$cache.cont.addClass("irs-disabled");
        },
        removeDisableMask: function() {
            this.$cache.cont.remove(".irs-disable-mask"), this.$cache.cont.removeClass("irs-disabled");
        },
        remove: function() {
            this.$cache.cont.remove(), this.$cache.cont = null, this.$cache.line.off("keydown.irs_" + this.plugin_count), 
            this.$cache.body.off("touchmove.irs_" + this.plugin_count), this.$cache.body.off("mousemove.irs_" + this.plugin_count), 
            this.$cache.win.off("touchend.irs_" + this.plugin_count), this.$cache.win.off("mouseup.irs_" + this.plugin_count), 
            is_old_ie && (this.$cache.body.off("mouseup.irs_" + this.plugin_count), 
            this.$cache.body.off("mouseleave.irs_" + this.plugin_count)), this.$cache.grid_labels = [], 
            this.coords.big = [], this.coords.big_w = [], this.coords.big_p = [], 
            this.coords.big_x = [], cancelAnimationFrame(this.raf_id);
        },
        bindEvents: function() {
            this.no_diapason || (this.$cache.body.on("touchmove.irs_" + this.plugin_count, this.pointerMove.bind(this)), 
            this.$cache.body.on("mousemove.irs_" + this.plugin_count, this.pointerMove.bind(this)), 
            this.$cache.win.on("touchend.irs_" + this.plugin_count, this.pointerUp.bind(this)), 
            this.$cache.win.on("mouseup.irs_" + this.plugin_count, this.pointerUp.bind(this)), 
            this.$cache.line.on("touchstart.irs_" + this.plugin_count, this.pointerClick.bind(this, "click")), 
            this.$cache.line.on("mousedown.irs_" + this.plugin_count, this.pointerClick.bind(this, "click")), 
            this.$cache.line.on("focus.irs_" + this.plugin_count, this.pointerFocus.bind(this)), 
            this.options.drag_interval && "double" === this.options.type ? (this.$cache.bar.on("touchstart.irs_" + this.plugin_count, this.pointerDown.bind(this, "both")), 
            this.$cache.bar.on("mousedown.irs_" + this.plugin_count, this.pointerDown.bind(this, "both"))) : (this.$cache.bar.on("touchstart.irs_" + this.plugin_count, this.pointerClick.bind(this, "click")), 
            this.$cache.bar.on("mousedown.irs_" + this.plugin_count, this.pointerClick.bind(this, "click"))), 
            "single" === this.options.type ? (this.$cache.single.on("touchstart.irs_" + this.plugin_count, this.pointerDown.bind(this, "single")), 
            this.$cache.s_single.on("touchstart.irs_" + this.plugin_count, this.pointerDown.bind(this, "single")), 
            this.$cache.shad_single.on("touchstart.irs_" + this.plugin_count, this.pointerClick.bind(this, "click")), 
            this.$cache.single.on("mousedown.irs_" + this.plugin_count, this.pointerDown.bind(this, "single")), 
            this.$cache.s_single.on("mousedown.irs_" + this.plugin_count, this.pointerDown.bind(this, "single")), 
            this.$cache.edge.on("mousedown.irs_" + this.plugin_count, this.pointerClick.bind(this, "click")), 
            this.$cache.shad_single.on("mousedown.irs_" + this.plugin_count, this.pointerClick.bind(this, "click"))) : (this.$cache.single.on("touchstart.irs_" + this.plugin_count, this.pointerDown.bind(this, null)), 
            this.$cache.single.on("mousedown.irs_" + this.plugin_count, this.pointerDown.bind(this, null)), 
            this.$cache.from.on("touchstart.irs_" + this.plugin_count, this.pointerDown.bind(this, "from")), 
            this.$cache.s_from.on("touchstart.irs_" + this.plugin_count, this.pointerDown.bind(this, "from")), 
            this.$cache.to.on("touchstart.irs_" + this.plugin_count, this.pointerDown.bind(this, "to")), 
            this.$cache.s_to.on("touchstart.irs_" + this.plugin_count, this.pointerDown.bind(this, "to")), 
            this.$cache.shad_from.on("touchstart.irs_" + this.plugin_count, this.pointerClick.bind(this, "click")), 
            this.$cache.shad_to.on("touchstart.irs_" + this.plugin_count, this.pointerClick.bind(this, "click")), 
            this.$cache.from.on("mousedown.irs_" + this.plugin_count, this.pointerDown.bind(this, "from")), 
            this.$cache.s_from.on("mousedown.irs_" + this.plugin_count, this.pointerDown.bind(this, "from")), 
            this.$cache.to.on("mousedown.irs_" + this.plugin_count, this.pointerDown.bind(this, "to")), 
            this.$cache.s_to.on("mousedown.irs_" + this.plugin_count, this.pointerDown.bind(this, "to")), 
            this.$cache.shad_from.on("mousedown.irs_" + this.plugin_count, this.pointerClick.bind(this, "click")), 
            this.$cache.shad_to.on("mousedown.irs_" + this.plugin_count, this.pointerClick.bind(this, "click"))), 
            this.options.keyboard && this.$cache.line.on("keydown.irs_" + this.plugin_count, this.key.bind(this, "keyboard")), 
            is_old_ie && (this.$cache.body.on("mouseup.irs_" + this.plugin_count, this.pointerUp.bind(this)), 
            this.$cache.body.on("mouseleave.irs_" + this.plugin_count, this.pointerUp.bind(this))));
        },
        pointerFocus: function(e) {
            var $handle, x;
            this.target || (x = ($handle = "single" === this.options.type ? this.$cache.single : this.$cache.from).offset().left, 
            x += $handle.width() / 2 - 1, this.pointerClick("single", {
                preventDefault: function() {},
                pageX: x
            }));
        },
        pointerMove: function(e) {
            this.dragging && (e = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX, 
            this.coords.x_pointer = e - this.coords.x_gap, this.calc());
        },
        pointerUp: function(e) {
            this.current_plugin === this.plugin_count && this.is_active && (this.is_active = !1, 
            this.$cache.cont.find(".state_hover").removeClass("state_hover"), this.force_redraw = !0, 
            is_old_ie && $("*").prop("unselectable", !1), this.updateScene(), this.restoreOriginalMinInterval(), 
            ($.contains(this.$cache.cont[0], e.target) || this.dragging) && this.callOnFinish(), 
            this.dragging = !1);
        },
        pointerDown: function(target, e) {
            e.preventDefault();
            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;
            2 !== e.button && ("both" === target && this.setTempMinInterval(), target = target || this.target || "from", 
            this.current_plugin = this.plugin_count, this.target = target, this.is_active = !0, 
            this.dragging = !0, this.coords.x_gap = this.$cache.rs.offset().left, 
            this.coords.x_pointer = x - this.coords.x_gap, this.calcPointerPercent(), 
            this.changeLevel(target), is_old_ie && $("*").prop("unselectable", !0), 
            this.$cache.line.trigger("focus"), this.updateScene());
        },
        pointerClick: function(target, e) {
            e.preventDefault();
            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;
            2 !== e.button && (this.current_plugin = this.plugin_count, this.target = target, 
            this.is_click = !0, this.coords.x_gap = this.$cache.rs.offset().left, 
            this.coords.x_pointer = +(x - this.coords.x_gap).toFixed(), this.force_redraw = !0, 
            this.calc(), this.$cache.line.trigger("focus"));
        },
        key: function(target, e) {
            if (!(this.current_plugin !== this.plugin_count || e.altKey || e.ctrlKey || e.shiftKey || e.metaKey)) {
                switch (e.which) {
                  case 83:
                  case 65:
                  case 40:
                  case 37:
                    e.preventDefault(), this.moveByKey(!1);
                    break;

                  case 87:
                  case 68:
                  case 38:
                  case 39:
                    e.preventDefault(), this.moveByKey(!0);
                }
                return !0;
            }
        },
        moveByKey: function(right) {
            var p = this.coords.p_pointer, p_step = (this.options.max - this.options.min) / 100, p_step = this.options.step / p_step;
            right ? p += p_step : p -= p_step, this.coords.x_pointer = this.toFixed(this.coords.w_rs / 100 * p), 
            this.is_key = !0, this.calc();
        },
        setMinMax: function() {
            if (this.options) {
                if (this.options.hide_min_max) return this.$cache.min[0].style.display = "none", 
                void (this.$cache.max[0].style.display = "none");
                var min_pretty, max_pretty;
                this.options.values.length ? (this.$cache.min.html(this.decorate(this.options.p_values[this.options.min])), 
                this.$cache.max.html(this.decorate(this.options.p_values[this.options.max]))) : (min_pretty = this._prettify(this.options.min), 
                max_pretty = this._prettify(this.options.max), this.result.min_pretty = min_pretty, 
                this.result.max_pretty = max_pretty, this.$cache.min.html(this.decorate(min_pretty, this.options.min)), 
                this.$cache.max.html(this.decorate(max_pretty, this.options.max))), 
                this.labels.w_min = this.$cache.min.outerWidth(!1), this.labels.w_max = this.$cache.max.outerWidth(!1);
            }
        },
        setTempMinInterval: function() {
            var interval = this.result.to - this.result.from;
            null === this.old_min_interval && (this.old_min_interval = this.options.min_interval), 
            this.options.min_interval = interval;
        },
        restoreOriginalMinInterval: function() {
            null !== this.old_min_interval && (this.options.min_interval = this.old_min_interval, 
            this.old_min_interval = null);
        },
        calc: function(update) {
            if (this.options && (this.calc_count++, 10 !== this.calc_count && !update || (this.calc_count = 0, 
            this.coords.w_rs = this.$cache.rs.outerWidth(!1), this.calcHandlePercent()), 
            this.coords.w_rs)) {
                this.calcPointerPercent();
                var handle_x = this.getHandleX();
                switch ("both" === this.target && (this.coords.p_gap = 0, handle_x = this.getHandleX()), 
                "click" === this.target && (this.coords.p_gap = this.coords.p_handle / 2, 
                handle_x = this.getHandleX(), this.options.drag_interval ? this.target = "both_one" : this.target = this.chooseHandle(handle_x)), 
                this.target) {
                  case "base":
                    var w = (this.options.max - this.options.min) / 100, f = (this.result.from - this.options.min) / w, w = (this.result.to - this.options.min) / w;
                    this.coords.p_single_real = this.toFixed(f), this.coords.p_from_real = this.toFixed(f), 
                    this.coords.p_to_real = this.toFixed(w), this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max), 
                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max), 
                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max), 
                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real), 
                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real), 
                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real), 
                    this.target = null;
                    break;

                  case "single":
                    if (this.options.from_fixed) break;
                    this.coords.p_single_real = this.convertToRealPercent(handle_x), 
                    this.coords.p_single_real = this.calcWithStep(this.coords.p_single_real), 
                    this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max), 
                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);
                    break;

                  case "from":
                    if (this.options.from_fixed) break;
                    this.coords.p_from_real = this.convertToRealPercent(handle_x), 
                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real), 
                    this.coords.p_from_real > this.coords.p_to_real && (this.coords.p_from_real = this.coords.p_to_real), 
                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max), 
                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, "from"), 
                    this.coords.p_from_real = this.checkMaxInterval(this.coords.p_from_real, this.coords.p_to_real, "from"), 
                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);
                    break;

                  case "to":
                    if (this.options.to_fixed) break;
                    this.coords.p_to_real = this.convertToRealPercent(handle_x), 
                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real), 
                    this.coords.p_to_real < this.coords.p_from_real && (this.coords.p_to_real = this.coords.p_from_real), 
                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max), 
                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, "to"), 
                    this.coords.p_to_real = this.checkMaxInterval(this.coords.p_to_real, this.coords.p_from_real, "to"), 
                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);
                    break;

                  case "both":
                    if (this.options.from_fixed || this.options.to_fixed) break;
                    handle_x = this.toFixed(handle_x + .001 * this.coords.p_handle), 
                    this.coords.p_from_real = this.convertToRealPercent(handle_x) - this.coords.p_gap_left, 
                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real), 
                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max), 
                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, "from"), 
                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real), 
                    this.coords.p_to_real = this.convertToRealPercent(handle_x) + this.coords.p_gap_right, 
                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real), 
                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max), 
                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, "to"), 
                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);
                    break;

                  case "both_one":
                    if (this.options.from_fixed || this.options.to_fixed) break;
                    var f = this.convertToRealPercent(handle_x), w = this.result.from_percent, w = this.result.to_percent - w, half = w / 2, new_from = f - half, f = f + half;
                    100 < (f = new_from < 0 ? (new_from = 0) + w : f) && (new_from = (f = 100) - w), 
                    this.coords.p_from_real = this.calcWithStep(new_from), this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max), 
                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real), 
                    this.coords.p_to_real = this.calcWithStep(f), this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max), 
                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);
                }
                "single" === this.options.type ? (this.coords.p_bar_x = this.coords.p_handle / 2, 
                this.coords.p_bar_w = this.coords.p_single_fake, this.result.from_percent = this.coords.p_single_real, 
                this.result.from = this.convertToValue(this.coords.p_single_real), 
                this.result.from_pretty = this._prettify(this.result.from), this.options.values.length && (this.result.from_value = this.options.values[this.result.from])) : (this.coords.p_bar_x = this.toFixed(this.coords.p_from_fake + this.coords.p_handle / 2), 
                this.coords.p_bar_w = this.toFixed(this.coords.p_to_fake - this.coords.p_from_fake), 
                this.result.from_percent = this.coords.p_from_real, this.result.from = this.convertToValue(this.coords.p_from_real), 
                this.result.from_pretty = this._prettify(this.result.from), this.result.to_percent = this.coords.p_to_real, 
                this.result.to = this.convertToValue(this.coords.p_to_real), this.result.to_pretty = this._prettify(this.result.to), 
                this.options.values.length && (this.result.from_value = this.options.values[this.result.from], 
                this.result.to_value = this.options.values[this.result.to])), this.calcMinMax(), 
                this.calcLabels();
            }
        },
        calcPointerPercent: function() {
            this.coords.w_rs ? (this.coords.x_pointer < 0 || isNaN(this.coords.x_pointer) ? this.coords.x_pointer = 0 : this.coords.x_pointer > this.coords.w_rs && (this.coords.x_pointer = this.coords.w_rs), 
            this.coords.p_pointer = this.toFixed(this.coords.x_pointer / this.coords.w_rs * 100)) : this.coords.p_pointer = 0;
        },
        convertToRealPercent: function(fake) {
            return fake / (100 - this.coords.p_handle) * 100;
        },
        convertToFakePercent: function(real) {
            return real / 100 * (100 - this.coords.p_handle);
        },
        getHandleX: function() {
            var max = 100 - this.coords.p_handle, x = this.toFixed(this.coords.p_pointer - this.coords.p_gap);
            return x < 0 ? x = 0 : max < x && (x = max), x;
        },
        calcHandlePercent: function() {
            "single" === this.options.type ? this.coords.w_handle = this.$cache.s_single.outerWidth(!1) : this.coords.w_handle = this.$cache.s_from.outerWidth(!1), 
            this.coords.p_handle = this.toFixed(this.coords.w_handle / this.coords.w_rs * 100);
        },
        chooseHandle: function(real_x) {
            return "single" === this.options.type ? "single" : this.coords.p_from_real + (this.coords.p_to_real - this.coords.p_from_real) / 2 <= real_x ? this.options.to_fixed ? "from" : "to" : this.options.from_fixed ? "to" : "from";
        },
        calcMinMax: function() {
            this.coords.w_rs && (this.labels.p_min = this.labels.w_min / this.coords.w_rs * 100, 
            this.labels.p_max = this.labels.w_max / this.coords.w_rs * 100);
        },
        calcLabels: function() {
            this.coords.w_rs && !this.options.hide_from_to && ("single" === this.options.type ? (this.labels.w_single = this.$cache.single.outerWidth(!1), 
            this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100, 
            this.labels.p_single_left = this.coords.p_single_fake + this.coords.p_handle / 2 - this.labels.p_single_fake / 2) : (this.labels.w_from = this.$cache.from.outerWidth(!1), 
            this.labels.p_from_fake = this.labels.w_from / this.coords.w_rs * 100, 
            this.labels.p_from_left = this.coords.p_from_fake + this.coords.p_handle / 2 - this.labels.p_from_fake / 2, 
            this.labels.p_from_left = this.toFixed(this.labels.p_from_left), this.labels.p_from_left = this.checkEdges(this.labels.p_from_left, this.labels.p_from_fake), 
            this.labels.w_to = this.$cache.to.outerWidth(!1), this.labels.p_to_fake = this.labels.w_to / this.coords.w_rs * 100, 
            this.labels.p_to_left = this.coords.p_to_fake + this.coords.p_handle / 2 - this.labels.p_to_fake / 2, 
            this.labels.p_to_left = this.toFixed(this.labels.p_to_left), this.labels.p_to_left = this.checkEdges(this.labels.p_to_left, this.labels.p_to_fake), 
            this.labels.w_single = this.$cache.single.outerWidth(!1), this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100, 
            this.labels.p_single_left = (this.labels.p_from_left + this.labels.p_to_left + this.labels.p_to_fake) / 2 - this.labels.p_single_fake / 2, 
            this.labels.p_single_left = this.toFixed(this.labels.p_single_left)), 
            this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake));
        },
        updateScene: function() {
            this.raf_id && (cancelAnimationFrame(this.raf_id), this.raf_id = null), 
            clearTimeout(this.update_tm), this.update_tm = null, this.options && (this.drawHandles(), 
            this.is_active ? this.raf_id = requestAnimationFrame(this.updateScene.bind(this)) : this.update_tm = setTimeout(this.updateScene.bind(this), 300));
        },
        drawHandles: function() {
            this.coords.w_rs = this.$cache.rs.outerWidth(!1), this.coords.w_rs && (this.coords.w_rs !== this.coords.w_rs_old && (this.target = "base", 
            this.is_resize = !0), this.coords.w_rs === this.coords.w_rs_old && !this.force_redraw || (this.setMinMax(), 
            this.calc(!0), this.drawLabels(), this.options.grid && (this.calcGridMargin(), 
            this.calcGridLabels()), this.force_redraw = !0, this.coords.w_rs_old = this.coords.w_rs, 
            this.drawShadow()), this.coords.w_rs && (this.dragging || this.force_redraw || this.is_key) && ((this.old_from !== this.result.from || this.old_to !== this.result.to || this.force_redraw || this.is_key) && (this.drawLabels(), 
            this.$cache.bar[0].style.left = this.coords.p_bar_x + "%", this.$cache.bar[0].style.width = this.coords.p_bar_w + "%", 
            "single" === this.options.type ? (this.$cache.bar[0].style.left = 0, 
            this.$cache.bar[0].style.width = this.coords.p_bar_w + this.coords.p_bar_x + "%", 
            this.$cache.s_single[0].style.left = this.coords.p_single_fake + "%") : (this.$cache.s_from[0].style.left = this.coords.p_from_fake + "%", 
            this.$cache.s_to[0].style.left = this.coords.p_to_fake + "%", this.old_from === this.result.from && !this.force_redraw || (this.$cache.from[0].style.left = this.labels.p_from_left + "%"), 
            this.old_to === this.result.to && !this.force_redraw || (this.$cache.to[0].style.left = this.labels.p_to_left + "%")), 
            this.$cache.single[0].style.left = this.labels.p_single_left + "%", 
            this.writeToInput(), this.old_from === this.result.from && this.old_to === this.result.to || this.is_start || (this.$cache.input.trigger("change"), 
            this.$cache.input.trigger("input")), this.old_from = this.result.from, 
            this.old_to = this.result.to, this.is_resize || this.is_update || this.is_start || this.is_finish || this.callOnChange(), 
            (this.is_key || this.is_click) && (this.is_key = !1, this.is_click = !1, 
            this.callOnFinish()), this.is_update = !1, this.is_resize = !1, this.is_finish = !1), 
            this.is_start = !1, this.is_key = !1, this.is_click = !1, this.force_redraw = !1));
        },
        drawLabels: function() {
            var p_values, from_pretty, values_num, text_single, text_from;
            this.options && (values_num = this.options.values.length, p_values = this.options.p_values, 
            this.options.hide_from_to || ("single" === this.options.type ? (text_single = values_num ? this.decorate(p_values[this.result.from]) : (from_pretty = this._prettify(this.result.from), 
            this.decorate(from_pretty, this.result.from)), this.$cache.single.html(text_single), 
            this.calcLabels(), this.labels.p_single_left < this.labels.p_min + 1 ? this.$cache.min[0].style.visibility = "hidden" : this.$cache.min[0].style.visibility = "visible", 
            this.labels.p_single_left + this.labels.p_single_fake > 100 - this.labels.p_max - 1 ? this.$cache.max[0].style.visibility = "hidden" : this.$cache.max[0].style.visibility = "visible") : (p_values = values_num ? (text_single = this.options.decorate_both ? (text_single = this.decorate(p_values[this.result.from]), 
            (text_single += this.options.values_separator) + this.decorate(p_values[this.result.to])) : this.decorate(p_values[this.result.from] + this.options.values_separator + p_values[this.result.to]), 
            text_from = this.decorate(p_values[this.result.from]), this.decorate(p_values[this.result.to])) : (from_pretty = this._prettify(this.result.from), 
            values_num = this._prettify(this.result.to), text_single = this.options.decorate_both ? (text_single = this.decorate(from_pretty, this.result.from), 
            (text_single += this.options.values_separator) + this.decorate(values_num, this.result.to)) : this.decorate(from_pretty + this.options.values_separator + values_num, this.result.to), 
            text_from = this.decorate(from_pretty, this.result.from), this.decorate(values_num, this.result.to)), 
            this.$cache.single.html(text_single), this.$cache.from.html(text_from), 
            this.$cache.to.html(p_values), this.calcLabels(), from_pretty = Math.min(this.labels.p_single_left, this.labels.p_from_left), 
            values_num = this.labels.p_single_left + this.labels.p_single_fake, 
            text_single = this.labels.p_to_left + this.labels.p_to_fake, text_from = Math.max(values_num, text_single), 
            this.labels.p_from_left + this.labels.p_from_fake >= this.labels.p_to_left ? (this.$cache.from[0].style.visibility = "hidden", 
            this.$cache.to[0].style.visibility = "hidden", this.$cache.single[0].style.visibility = "visible", 
            text_from = this.result.from === this.result.to ? ("from" === this.target ? this.$cache.from[0].style.visibility = "visible" : "to" === this.target ? this.$cache.to[0].style.visibility = "visible" : this.target || (this.$cache.from[0].style.visibility = "visible"), 
            this.$cache.single[0].style.visibility = "hidden", text_single) : (this.$cache.from[0].style.visibility = "hidden", 
            this.$cache.to[0].style.visibility = "hidden", this.$cache.single[0].style.visibility = "visible", 
            Math.max(values_num, text_single))) : (this.$cache.from[0].style.visibility = "visible", 
            this.$cache.to[0].style.visibility = "visible", this.$cache.single[0].style.visibility = "hidden"), 
            from_pretty < this.labels.p_min + 1 ? this.$cache.min[0].style.visibility = "hidden" : this.$cache.min[0].style.visibility = "visible", 
            text_from > 100 - this.labels.p_max - 1 ? this.$cache.max[0].style.visibility = "hidden" : this.$cache.max[0].style.visibility = "visible")));
        },
        drawShadow: function() {
            var from_min, from_max, o = this.options, c = this.$cache, is_from_min = "number" == typeof o.from_min && !isNaN(o.from_min), is_from_max = "number" == typeof o.from_max && !isNaN(o.from_max), is_to_min = "number" == typeof o.to_min && !isNaN(o.to_min), is_to_max = "number" == typeof o.to_max && !isNaN(o.to_max);
            "single" === o.type ? o.from_shadow && (is_from_min || is_from_max) ? (from_min = this.convertToPercent(is_from_min ? o.from_min : o.min), 
            from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min, 
            from_min = this.toFixed(from_min - this.coords.p_handle / 100 * from_min), 
            from_max = this.toFixed(from_max - this.coords.p_handle / 100 * from_max), 
            from_min += this.coords.p_handle / 2, c.shad_single[0].style.display = "block", 
            c.shad_single[0].style.left = from_min + "%", c.shad_single[0].style.width = from_max + "%") : c.shad_single[0].style.display = "none" : (o.from_shadow && (is_from_min || is_from_max) ? (from_min = this.convertToPercent(is_from_min ? o.from_min : o.min), 
            from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min, 
            from_min = this.toFixed(from_min - this.coords.p_handle / 100 * from_min), 
            from_max = this.toFixed(from_max - this.coords.p_handle / 100 * from_max), 
            from_min += this.coords.p_handle / 2, c.shad_from[0].style.display = "block", 
            c.shad_from[0].style.left = from_min + "%", c.shad_from[0].style.width = from_max + "%") : c.shad_from[0].style.display = "none", 
            o.to_shadow && (is_to_min || is_to_max) ? (is_from_min = this.convertToPercent(is_to_min ? o.to_min : o.min), 
            is_from_max = this.convertToPercent(is_to_max ? o.to_max : o.max) - is_from_min, 
            is_from_min = this.toFixed(is_from_min - this.coords.p_handle / 100 * is_from_min), 
            is_from_max = this.toFixed(is_from_max - this.coords.p_handle / 100 * is_from_max), 
            is_from_min += this.coords.p_handle / 2, c.shad_to[0].style.display = "block", 
            c.shad_to[0].style.left = is_from_min + "%", c.shad_to[0].style.width = is_from_max + "%") : c.shad_to[0].style.display = "none");
        },
        writeToInput: function() {
            "single" === this.options.type ? (this.options.values.length ? this.$cache.input.prop("value", this.result.from_value) : this.$cache.input.prop("value", this.result.from), 
            this.$cache.input.data("from", this.result.from)) : (this.options.values.length ? this.$cache.input.prop("value", this.result.from_value + this.options.input_values_separator + this.result.to_value) : this.$cache.input.prop("value", this.result.from + this.options.input_values_separator + this.result.to), 
            this.$cache.input.data("from", this.result.from), this.$cache.input.data("to", this.result.to));
        },
        callOnStart: function() {
            this.writeToInput(), this.options.onStart && "function" == typeof this.options.onStart && (this.options.scope ? this.options.onStart.call(this.options.scope, this.result) : this.options.onStart(this.result));
        },
        callOnChange: function() {
            this.writeToInput(), this.options.onChange && "function" == typeof this.options.onChange && (this.options.scope ? this.options.onChange.call(this.options.scope, this.result) : this.options.onChange(this.result));
        },
        callOnFinish: function() {
            this.writeToInput(), this.options.onFinish && "function" == typeof this.options.onFinish && (this.options.scope ? this.options.onFinish.call(this.options.scope, this.result) : this.options.onFinish(this.result));
        },
        callOnUpdate: function() {
            this.writeToInput(), this.options.onUpdate && "function" == typeof this.options.onUpdate && (this.options.scope ? this.options.onUpdate.call(this.options.scope, this.result) : this.options.onUpdate(this.result));
        },
        toggleInput: function() {
            this.$cache.input.toggleClass("irs-hidden-input"), this.has_tab_index ? this.$cache.input.prop("tabindex", -1) : this.$cache.input.removeProp("tabindex"), 
            this.has_tab_index = !this.has_tab_index;
        },
        convertToPercent: function(value, no_min) {
            var diapason = this.options.max - this.options.min;
            return diapason ? (no_min = no_min ? value : value - this.options.min, 
            this.toFixed(no_min / (diapason / 100))) : (this.no_diapason = !0, 0);
        },
        convertToValue: function(percent) {
            var max_length, min = this.options.min, max = this.options.max, min_decimals = min.toString().split(".")[1], max_decimals = max.toString().split(".")[1], avg_decimals = 0, abs = 0;
            if (0 === percent) return this.options.min;
            if (100 === percent) return this.options.max;
            min_decimals && (avg_decimals = min_length = min_decimals.length), max_decimals && (avg_decimals = max_length = max_decimals.length), 
            min_length && max_length && (avg_decimals = max_length <= min_length ? min_length : max_length), 
            min < 0 && (min = +(min + (abs = Math.abs(min))).toFixed(avg_decimals), 
            max = +(max + abs).toFixed(avg_decimals));
            var min_length, min_decimals = (max - min) / 100 * percent + min, max_decimals = this.options.step.toString().split(".")[1], min_decimals = max_decimals ? +min_decimals.toFixed(max_decimals.length) : +(min_decimals = (min_decimals /= this.options.step) * this.options.step).toFixed(0);
            return abs && (min_decimals -= abs), (min_length = max_decimals ? +min_decimals.toFixed(max_decimals.length) : this.toFixed(min_decimals)) < this.options.min ? min_length = this.options.min : min_length > this.options.max && (min_length = this.options.max), 
            min_length;
        },
        calcWithStep: function(percent) {
            var rounded = Math.round(percent / this.coords.p_step) * this.coords.p_step;
            return 100 < rounded && (rounded = 100), this.toFixed(rounded = 100 === percent ? 100 : rounded);
        },
        checkMinInterval: function(p_current, p_next, type) {
            var current, o = this.options;
            return o.min_interval ? (current = this.convertToValue(p_current), p_next = this.convertToValue(p_next), 
            "from" === type ? p_next - current < o.min_interval && (current = p_next - o.min_interval) : current - p_next < o.min_interval && (current = p_next + o.min_interval), 
            this.convertToPercent(current)) : p_current;
        },
        checkMaxInterval: function(p_current, p_next, type) {
            var current, o = this.options;
            return o.max_interval ? (current = this.convertToValue(p_current), p_next = this.convertToValue(p_next), 
            "from" === type ? p_next - current > o.max_interval && (current = p_next - o.max_interval) : current - p_next > o.max_interval && (current = p_next + o.max_interval), 
            this.convertToPercent(current)) : p_current;
        },
        checkDiapason: function(p_num, min, max) {
            var p_num = this.convertToValue(p_num), o = this.options;
            return "number" != typeof min && (min = o.min), (max = "number" != typeof max ? o.max : max) < (p_num = p_num < min ? min : p_num) && (p_num = max), 
            this.convertToPercent(p_num);
        },
        toFixed: function(num) {
            return +(num = num.toFixed(20));
        },
        _prettify: function(num) {
            return this.options.prettify_enabled ? (this.options.prettify && "function" == typeof this.options.prettify ? this.options : this).prettify(num) : num;
        },
        prettify: function(num) {
            return num.toString().replace(/(\d{1,3}(?=(?:\d\d\d)+(?!\d)))/g, "$1" + this.options.prettify_separator);
        },
        checkEdges: function(left, width) {
            return this.options.force_edges && (left < 0 ? left = 0 : 100 - width < left && (left = 100 - width)), 
            this.toFixed(left);
        },
        validate: function() {
            var value, i, o = this.options, r = this.result, v = o.values, vl = v.length;
            if ("string" == typeof o.min && (o.min = +o.min), "string" == typeof o.max && (o.max = +o.max), 
            "string" == typeof o.from && (o.from = +o.from), "string" == typeof o.to && (o.to = +o.to), 
            "string" == typeof o.step && (o.step = +o.step), "string" == typeof o.from_min && (o.from_min = +o.from_min), 
            "string" == typeof o.from_max && (o.from_max = +o.from_max), "string" == typeof o.to_min && (o.to_min = +o.to_min), 
            "string" == typeof o.to_max && (o.to_max = +o.to_max), "string" == typeof o.grid_num && (o.grid_num = +o.grid_num), 
            o.max < o.min && (o.max = o.min), vl) for (o.p_values = [], o.min = 0, 
            o.max = vl - 1, o.step = 1, o.grid_num = o.max, o.grid_snap = !0, i = 0; i < vl; i++) value = +v[i], 
            value = isNaN(value) ? v[i] : (v[i] = value, this._prettify(value)), 
            o.p_values.push(value);
            "number" == typeof o.from && !isNaN(o.from) || (o.from = o.min), "number" == typeof o.to && !isNaN(o.to) || (o.to = o.max), 
            "single" === o.type ? (o.from < o.min && (o.from = o.min), o.from > o.max && (o.from = o.max)) : (o.from < o.min && (o.from = o.min), 
            o.from > o.max && (o.from = o.max), o.to < o.min && (o.to = o.min), 
            o.to > o.max && (o.to = o.max), this.update_check.from && (this.update_check.from !== o.from && o.from > o.to && (o.from = o.to), 
            this.update_check.to !== o.to && o.to < o.from && (o.to = o.from)), 
            o.from > o.to && (o.from = o.to), o.to < o.from && (o.to = o.from)), 
            ("number" != typeof o.step || isNaN(o.step) || !o.step || o.step < 0) && (o.step = 1), 
            "number" == typeof o.from_min && o.from < o.from_min && (o.from = o.from_min), 
            "number" == typeof o.from_max && o.from > o.from_max && (o.from = o.from_max), 
            "number" == typeof o.to_min && o.to < o.to_min && (o.to = o.to_min), 
            "number" == typeof o.to_max && o.from > o.to_max && (o.to = o.to_max), 
            r && (r.min !== o.min && (r.min = o.min), r.max !== o.max && (r.max = o.max), 
            (r.from < r.min || r.from > r.max) && (r.from = o.from), (r.to < r.min || r.to > r.max) && (r.to = o.to)), 
            ("number" != typeof o.min_interval || isNaN(o.min_interval) || !o.min_interval || o.min_interval < 0) && (o.min_interval = 0), 
            ("number" != typeof o.max_interval || isNaN(o.max_interval) || !o.max_interval || o.max_interval < 0) && (o.max_interval = 0), 
            o.min_interval && o.min_interval > o.max - o.min && (o.min_interval = o.max - o.min), 
            o.max_interval && o.max_interval > o.max - o.min && (o.max_interval = o.max - o.min);
        },
        decorate: function(num, original) {
            var decorated = "", o = this.options;
            return o.prefix && (decorated += o.prefix), decorated += num, o.max_postfix && (o.values.length && num === o.p_values[o.max] || original === o.max) && (decorated += o.max_postfix, 
            o.postfix && (decorated += " ")), o.postfix && (decorated += o.postfix), 
            decorated;
        },
        updateFrom: function() {
            this.result.from = this.options.from, this.result.from_percent = this.convertToPercent(this.result.from), 
            this.result.from_pretty = this._prettify(this.result.from), this.options.values && (this.result.from_value = this.options.values[this.result.from]);
        },
        updateTo: function() {
            this.result.to = this.options.to, this.result.to_percent = this.convertToPercent(this.result.to), 
            this.result.to_pretty = this._prettify(this.result.to), this.options.values && (this.result.to_value = this.options.values[this.result.to]);
        },
        updateResult: function() {
            this.result.min = this.options.min, this.result.max = this.options.max, 
            this.updateFrom(), this.updateTo();
        },
        appendGrid: function() {
            if (this.options.grid) {
                var i, z, big_p, local_small_max, small_p, result, o = this.options, total = o.max - o.min, big_num = o.grid_num, big_w = 0, small_max = 4, html = "";
                for (this.calcGridMargin(), o.grid_snap && (big_num = total / o.step), 
                big_p = this.toFixed(100 / (big_num = 50 < big_num ? 50 : big_num)), 
                4 < big_num && (small_max = 3), 7 < big_num && (small_max = 2), 
                14 < big_num && (small_max = 1), 28 < big_num && (small_max = 0), 
                i = 0; i < big_num + 1; i++) {
                    for (local_small_max = small_max, 100 < (big_w = this.toFixed(big_p * i)) && (big_w = 100), 
                    small_p = ((this.coords.big[i] = big_w) - big_p * (i - 1)) / (local_small_max + 1), 
                    z = 1; z <= local_small_max && 0 !== big_w; z++) html += '<span class="irs-grid-pol small" style="left: ' + this.toFixed(big_w - small_p * z) + '%"></span>';
                    html += '<span class="irs-grid-pol" style="left: ' + big_w + '%"></span>', 
                    result = this.convertToValue(big_w), html += '<span class="irs-grid-text js-grid-text-' + i + '" style="left: ' + big_w + '%">' + (result = o.values.length ? o.p_values[result] : this._prettify(result)) + "</span>";
                }
                this.coords.big_num = Math.ceil(big_num + 1), this.$cache.cont.addClass("irs-with-grid"), 
                this.$cache.grid.html(html), this.cacheGridLabels();
            }
        },
        cacheGridLabels: function() {
            for (var $label, num = this.coords.big_num, i = 0; i < num; i++) $label = this.$cache.grid.find(".js-grid-text-" + i), 
            this.$cache.grid_labels.push($label);
            this.calcGridLabels();
        },
        calcGridLabels: function() {
            for (var label, start = [], finish = [], num = this.coords.big_num, i = 0; i < num; i++) this.coords.big_w[i] = this.$cache.grid_labels[i].outerWidth(!1), 
            this.coords.big_p[i] = this.toFixed(this.coords.big_w[i] / this.coords.w_rs * 100), 
            this.coords.big_x[i] = this.toFixed(this.coords.big_p[i] / 2), start[i] = this.toFixed(this.coords.big[i] - this.coords.big_x[i]), 
            finish[i] = this.toFixed(start[i] + this.coords.big_p[i]);
            for (this.options.force_edges && (start[0] < -this.coords.grid_gap && (start[0] = -this.coords.grid_gap, 
            finish[0] = this.toFixed(start[0] + this.coords.big_p[0]), this.coords.big_x[0] = this.coords.grid_gap), 
            finish[num - 1] > 100 + this.coords.grid_gap && (finish[num - 1] = 100 + this.coords.grid_gap, 
            start[num - 1] = this.toFixed(finish[num - 1] - this.coords.big_p[num - 1]), 
            this.coords.big_x[num - 1] = this.toFixed(this.coords.big_p[num - 1] - this.coords.grid_gap))), 
            this.calcGridCollision(2, start, finish), this.calcGridCollision(4, start, finish), 
            i = 0; i < num; i++) label = this.$cache.grid_labels[i][0], this.coords.big_x[i] !== Number.POSITIVE_INFINITY && (label.style.marginLeft = -this.coords.big_x[i] + "%");
        },
        calcGridCollision: function(step, start, finish) {
            for (var next_i, label, num = this.coords.big_num, i = 0; i < num && !(num <= (next_i = i + step / 2)); i += step) label = this.$cache.grid_labels[next_i][0], 
            finish[i] <= start[next_i] ? label.style.visibility = "visible" : label.style.visibility = "hidden";
        },
        calcGridMargin: function() {
            this.options.grid_margin && (this.coords.w_rs = this.$cache.rs.outerWidth(!1), 
            this.coords.w_rs && ("single" === this.options.type ? this.coords.w_handle = this.$cache.s_single.outerWidth(!1) : this.coords.w_handle = this.$cache.s_from.outerWidth(!1), 
            this.coords.p_handle = this.toFixed(this.coords.w_handle / this.coords.w_rs * 100), 
            this.coords.grid_gap = this.toFixed(this.coords.p_handle / 2 - .1), 
            this.$cache.grid[0].style.width = this.toFixed(100 - this.coords.p_handle) + "%", 
            this.$cache.grid[0].style.left = this.coords.grid_gap + "%"));
        },
        update: function(options) {
            this.input && (this.is_update = !0, this.options.from = this.result.from, 
            this.options.to = this.result.to, this.update_check.from = this.result.from, 
            this.update_check.to = this.result.to, this.options = $.extend(this.options, options), 
            this.validate(), this.updateResult(options), this.toggleInput(), this.remove(), 
            this.init(!0));
        },
        reset: function() {
            this.input && (this.updateResult(), this.update());
        },
        destroy: function() {
            this.input && (this.toggleInput(), this.$cache.input.prop("readonly", !1), 
            $.data(this.input, "ionRangeSlider", null), this.remove(), this.input = null, 
            this.options = null);
        }
    }, $.fn.ionRangeSlider = function(options) {
        return this.each(function() {
            $.data(this, "ionRangeSlider") || $.data(this, "ionRangeSlider", new IonRangeSlider(this, options, plugin_count++));
        });
    };
    for (var lastTime = 0, vendors = [ "ms", "moz", "webkit", "o" ], x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) window.requestAnimationFrame = window[vendors[x] + "RequestAnimationFrame"], 
    window.cancelAnimationFrame = window[vendors[x] + "CancelAnimationFrame"] || window[vendors[x] + "CancelRequestAnimationFrame"];
    window.requestAnimationFrame || (window.requestAnimationFrame = function(callback, element) {
        var currTime = new Date().getTime(), timeToCall = Math.max(0, 16 - (currTime - lastTime)), id = window.setTimeout(function() {
            callback(currTime + timeToCall);
        }, timeToCall);
        return lastTime = currTime + timeToCall, id;
    }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function(id) {
        clearTimeout(id);
    });
}), function(factory) {
    "function" == typeof define && define.amd ? define([ "jquery" ], factory) : "object" == typeof exports ? module.exports = factory($ || require("jquery")) : factory(jQuery);
}(function($) {
    "use strict";
    var pluginName = "styler", defaults = {
        idSuffix: "-styler",
        filePlaceholder: "Ð¤Ð°Ð¹Ð» Ð½Ðµ Ð²ÑÐ±ÑÐ°Ð½",
        fileBrowse: "ÐÐ±Ð·Ð¾Ñ...",
        fileNumber: "ÐÑÐ±ÑÐ°Ð½Ð¾ ÑÐ°Ð¹Ð»Ð¾Ð²: %s",
        selectPlaceholder: "ÐÑÐ±ÐµÑÐ¸ÑÐµ...",
        selectSearch: !1,
        selectSearchLimit: 10,
        selectSearchNotFound: "Ð¡Ð¾Ð²Ð¿Ð°Ð´ÐµÐ½Ð¸Ð¹ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð¾",
        selectSearchPlaceholder: "ÐÐ¾Ð¸ÑÐº...",
        selectVisibleOptions: 0,
        selectSmartPositioning: !0,
        locale: "ru",
        locales: {
            en: {
                filePlaceholder: "No file selected",
                fileBrowse: "Browse...",
                fileNumber: "Selected files: %s",
                selectPlaceholder: "Select...",
                selectSearchNotFound: "No matches found",
                selectSearchPlaceholder: "Search..."
            }
        },
        onSelectOpened: function() {},
        onSelectClosed: function() {},
        onFormStyled: function() {}
    };
    function Plugin(element, options) {
        this.element = element, this.options = $.extend({}, defaults, options);
        element = this.options.locale;
        void 0 !== this.options.locales[element] && $.extend(this.options, this.options.locales[element]), 
        this.init();
    }
    function onDocumentClick(e) {
        var search, dropdown;
        $(e.target).parents().hasClass("jq-selectbox") || "OPTION" == e.target.nodeName || $("div.jq-selectbox.opened").length && (e = $("div.jq-selectbox.opened"), 
        search = $("div.jq-selectbox__search input", e), dropdown = $("div.jq-selectbox__dropdown", e), 
        e.find("select").data("_" + pluginName).options.onSelectClosed.call(e), 
        search.length && search.val("").keyup(), dropdown.hide().find("li.sel").addClass("selected"), 
        e.removeClass("focused opened dropup dropdown"));
    }
    Plugin.prototype = {
        init: function() {
            var checkboxOutput, radioOutput, fileOutput, numberOutput, selectboxOutput, el = $(this.element), opt = this.options, iOS = !(!navigator.userAgent.match(/(iPad|iPhone|iPod)/i) || navigator.userAgent.match(/(Windows\sPhone)/i)), Android = !(!navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/(Windows\sPhone)/i));
            function Attributes() {
                void 0 !== el.attr("id") && "" !== el.attr("id") && (this.id = el.attr("id") + opt.idSuffix), 
                this.title = el.attr("title"), this.classes = el.attr("class"), 
                this.data = el.data();
            }
            el.is(":checkbox") ? ((checkboxOutput = function() {
                var att = new Attributes(), checkbox = $('<div class="jq-checkbox"><div class="jq-checkbox__div"></div></div>').attr({
                    id: att.id,
                    title: att.title
                }).addClass(att.classes).data(att.data);
                el.after(checkbox).prependTo(checkbox), el.is(":checked") && checkbox.addClass("checked"), 
                el.is(":disabled") && checkbox.addClass("disabled"), checkbox.click(function(e) {
                    e.preventDefault(), el.triggerHandler("click"), checkbox.is(".disabled") || (el.is(":checked") ? (el.prop("checked", !1), 
                    checkbox.removeClass("checked")) : (el.prop("checked", !0), 
                    checkbox.addClass("checked")), el.focus().change());
                }), el.closest("label").add('label[for="' + el.attr("id") + '"]').on("click.styler", function(e) {
                    $(e.target).is("a") || $(e.target).closest(checkbox).length || (checkbox.triggerHandler("click"), 
                    e.preventDefault());
                }), el.on("change.styler", function() {
                    el.is(":checked") ? checkbox.addClass("checked") : checkbox.removeClass("checked");
                }).on("keydown.styler", function(e) {
                    32 == e.which && checkbox.click();
                }).on("focus.styler", function() {
                    checkbox.is(".disabled") || checkbox.addClass("focused");
                }).on("blur.styler", function() {
                    checkbox.removeClass("focused");
                });
            })(), el.on("refresh", function() {
                el.closest("label").add('label[for="' + el.attr("id") + '"]').off(".styler"), 
                el.off(".styler").parent().before(el).remove(), checkboxOutput();
            })) : el.is(":radio") ? ((radioOutput = function() {
                var att = new Attributes(), radio = $('<div class="jq-radio"><div class="jq-radio__div"></div></div>').attr({
                    id: att.id,
                    title: att.title
                }).addClass(att.classes).data(att.data);
                el.after(radio).prependTo(radio), el.is(":checked") && radio.addClass("checked"), 
                el.is(":disabled") && radio.addClass("disabled"), $.fn.commonParents = function() {
                    var cachedThis = this;
                    return cachedThis.first().parents().filter(function() {
                        return $(this).find(cachedThis).length === cachedThis.length;
                    });
                }, $.fn.commonParent = function() {
                    return $(this).commonParents().first();
                }, radio.click(function(e) {
                    e.preventDefault(), el.triggerHandler("click"), radio.is(".disabled") || ((e = $('input[name="' + el.attr("name") + '"]')).commonParent().find(e).prop("checked", !1).parent().removeClass("checked"), 
                    el.prop("checked", !0).parent().addClass("checked"), el.focus().change());
                }), el.closest("label").add('label[for="' + el.attr("id") + '"]').on("click.styler", function(e) {
                    $(e.target).is("a") || $(e.target).closest(radio).length || (radio.triggerHandler("click"), 
                    e.preventDefault());
                }), el.on("change.styler", function() {
                    el.parent().addClass("checked");
                }).on("focus.styler", function() {
                    radio.is(".disabled") || radio.addClass("focused");
                }).on("blur.styler", function() {
                    radio.removeClass("focused");
                });
            })(), el.on("refresh", function() {
                el.closest("label").add('label[for="' + el.attr("id") + '"]').off(".styler"), 
                el.off(".styler").parent().before(el).remove(), radioOutput();
            })) : el.is(":file") ? ((fileOutput = function() {
                var att = new Attributes(), placeholder = el.data("placeholder"), browse = (void 0 === placeholder && (placeholder = opt.filePlaceholder), 
                el.data("browse")), file = (void 0 !== browse && "" !== browse || (browse = opt.fileBrowse), 
                $('<div class="jq-file"><div class="jq-file__name">' + placeholder + '</div><div class="jq-file__browse">' + browse + "</div></div>").attr({
                    id: att.id,
                    title: att.title
                }).addClass(att.classes).data(att.data)), browse = (el.after(file).appendTo(file), 
                el.is(":disabled") && file.addClass("disabled"), el.val()), name = $("div.jq-file__name", file);
                browse && name.text(browse.replace(/.+[\\\/]/, "")), el.on("change.styler", function() {
                    var files, number, value = el.val();
                    el.is("[multiple]") && (value = "", 0 < (files = el[0].files.length) && (value = number = (number = void 0 === (number = el.data("number")) ? opt.fileNumber : number).replace("%s", files))), 
                    name.text(value.replace(/.+[\\\/]/, "")), "" === value ? (name.text(placeholder), 
                    file.removeClass("changed")) : file.addClass("changed");
                }).on("focus.styler", function() {
                    file.addClass("focused");
                }).on("blur.styler", function() {
                    file.removeClass("focused");
                }).on("click.styler", function() {
                    file.removeClass("focused");
                });
            })(), el.on("refresh", function() {
                el.off(".styler").parent().before(el).remove(), fileOutput();
            })) : el.is('input[type="number"]') ? ((numberOutput = function() {
                var att = new Attributes(), number = $('<div class="jq-number"><div class="jq-number__spin minus"></div><div class="jq-number__spin plus"></div></div>').attr({
                    id: att.id,
                    title: att.title
                }).addClass(att.classes).data(att.data);
                el.after(number).prependTo(number).wrap('<div class="jq-number__field"></div>'), 
                el.is(":disabled") && number.addClass("disabled");
                function changeValue(spin) {
                    var newValue, value = el.val(), decimals = ($.isNumeric(value) || (value = 0, 
                    el.val("0")), spin.is(".minus") ? newValue = Number(value) - step : spin.is(".plus") && (newValue = Number(value) + step), 
                    (step.toString().split(".")[1] || []).length);
                    if (0 < decimals) {
                        for (var multiplier = "1"; multiplier.length <= decimals; ) multiplier += "0";
                        newValue = Math.round(newValue * multiplier) / multiplier;
                    }
                    $.isNumeric(min) && $.isNumeric(max) ? min <= newValue && newValue <= max && el.val(newValue) : $.isNumeric(min) && !$.isNumeric(max) ? min <= newValue && el.val(newValue) : ($.isNumeric(min) || !$.isNumeric(max) || newValue <= max) && el.val(newValue);
                }
                var min, max, step, timeout = null, interval = null;
                void 0 !== el.attr("min") && (min = el.attr("min")), void 0 !== el.attr("max") && (max = el.attr("max")), 
                step = void 0 !== el.attr("step") && $.isNumeric(el.attr("step")) ? Number(el.attr("step")) : Number(1);
                number.is(".disabled") || (number.on("mousedown", "div.jq-number__spin", function() {
                    var spin = $(this);
                    changeValue(spin), timeout = setTimeout(function() {
                        interval = setInterval(function() {
                            changeValue(spin);
                        }, 40);
                    }, 350);
                }).on("mouseup mouseout", "div.jq-number__spin", function() {
                    clearTimeout(timeout), clearInterval(interval);
                }).on("mouseup", "div.jq-number__spin", function() {
                    el.change().trigger("input");
                }), el.on("focus.styler", function() {
                    number.addClass("focused");
                }).on("blur.styler", function() {
                    number.removeClass("focused");
                }));
            })(), el.on("refresh", function() {
                el.off(".styler").closest(".jq-number").before(el).remove(), numberOutput();
            })) : el.is("select") ? ((selectboxOutput = function() {
                function preventScrolling(selector) {
                    var wheelDelta, scrollTop, scrollDiff = selector.prop("scrollHeight") - selector.outerHeight();
                    selector.off("mousewheel DOMMouseScroll").on("mousewheel DOMMouseScroll", function(e) {
                        wheelDelta = e.originalEvent.detail < 0 || 0 < e.originalEvent.wheelDelta ? 1 : -1, 
                        scrollTop = selector.scrollTop(), (scrollDiff <= scrollTop && wheelDelta < 0 || scrollTop <= 0 && 0 < wheelDelta) && (e.stopPropagation(), 
                        e.preventDefault());
                    });
                }
                var att, selectbox, ul, li, ulHeight, liHeight, option = $("option", el), list = "";
                function makeList() {
                    for (var i = 0; i < option.length; i++) {
                        var k, op = option.eq(i), li = "", liClass = "", liClasses = "", id = "", title = "", dataList = "", optionClass = "", optgroupClass = "", dataJqfsClass = "", data = (op.prop("selected") && (liClass = "selected sel"), 
                        op.is(":disabled") && (liClass = "disabled"), op.is(":selected:disabled") && (liClass = "selected sel disabled"), 
                        void 0 !== op.attr("id") && "" !== op.attr("id") && (id = ' id="' + op.attr("id") + opt.idSuffix + '"'), 
                        void 0 !== op.attr("title") && "" !== option.attr("title") && (title = ' title="' + op.attr("title") + '"'), 
                        void 0 !== op.attr("class") && (optionClass = " " + op.attr("class"), 
                        dataJqfsClass = ' data-jqfs-class="' + op.attr("class") + '"'), 
                        op.data());
                        for (k in data) "" !== data[k] && (dataList += " data-" + k + '="' + data[k] + '"');
                        li = "<li" + dataJqfsClass + dataList + (liClasses = liClass + optionClass !== "" ? ' class="' + liClass + optionClass + '"' : liClasses) + title + id + ">" + op.html() + "</li>", 
                        op.parent().is("optgroup") && (li = "<li" + dataJqfsClass + dataList + ' class="' + liClass + optionClass + " option" + (optgroupClass = void 0 !== op.parent().attr("class") ? " " + op.parent().attr("class") : optgroupClass) + '"' + title + id + ">" + op.html() + "</li>", 
                        op.is(":first-child") && (li = '<li class="optgroup' + optgroupClass + '">' + op.parent().attr("label") + "</li>" + li)), 
                        list += li;
                    }
                }
                function doSelect() {
                    var att = new Attributes(), searchHTML = "", selectPlaceholder = el.data("placeholder"), selectSearch = el.data("search"), selectSearchLimit = el.data("search-limit"), selectSearchNotFound = el.data("search-not-found"), selectSearchPlaceholder = el.data("search-placeholder"), selectSmartPositioning = el.data("smart-positioning"), selectbox = (void 0 === selectPlaceholder && (selectPlaceholder = opt.selectPlaceholder), 
                    void 0 !== selectSearch && "" !== selectSearch || (selectSearch = opt.selectSearch), 
                    void 0 !== selectSearchLimit && "" !== selectSearchLimit || (selectSearchLimit = opt.selectSearchLimit), 
                    void 0 !== selectSearchNotFound && "" !== selectSearchNotFound || (selectSearchNotFound = opt.selectSearchNotFound), 
                    void 0 === selectSearchPlaceholder && (selectSearchPlaceholder = opt.selectSearchPlaceholder), 
                    void 0 !== selectSmartPositioning && "" !== selectSmartPositioning || (selectSmartPositioning = opt.selectSmartPositioning), 
                    $('<div class="jq-selectbox jqselect"><div class="jq-selectbox__select"><div class="jq-selectbox__select-text"></div><div class="jq-selectbox__trigger"><div class="jq-selectbox__trigger-arrow"></div></div></div></div>').attr({
                        id: att.id,
                        title: att.title
                    }).addClass(att.classes).data(att.data));
                    el.after(selectbox).prependTo(selectbox);
                    var selectzIndex = 0 < (selectzIndex = selectbox.css("z-index")) ? selectzIndex : 1, divSelect = $("div.jq-selectbox__select", selectbox), divText = $("div.jq-selectbox__select-text", selectbox), att = option.filter(":selected"), dropdown = (makeList(), 
                    $('<div class="jq-selectbox__dropdown">' + (searchHTML = selectSearch ? '<div class="jq-selectbox__search"><input type="search" autocomplete="off" placeholder="' + selectSearchPlaceholder + '"></div><div class="jq-selectbox__not-found">' + selectSearchNotFound + "</div>" : searchHTML) + "<ul>" + list + "</ul></div>")), ul = (selectbox.append(dropdown), 
                    $("ul", dropdown)), li = $("li", dropdown), search = $("input", dropdown), notFound = $("div.jq-selectbox__not-found", dropdown).hide(), liWidthInner = (li.length < selectSearchLimit && search.parent().hide(), 
                    "" === option.first().text() && option.first().is(":selected") && !1 !== selectPlaceholder ? divText.text(selectPlaceholder).addClass("placeholder") : divText.text(att.text()), 
                    0), liWidth = 0, selectHeight = (li.css({
                        display: "inline-block"
                    }), li.each(function() {
                        var l = $(this);
                        l.innerWidth() > liWidthInner && (liWidthInner = l.innerWidth(), 
                        liWidth = l.width());
                    }), li.css({
                        display: ""
                    }), divText.is(".placeholder") && divText.width() > liWidthInner ? divText.width(divText.width()) : (selectSearchPlaceholder = (selectSearch = selectbox.clone().appendTo("body").width("auto")).outerWidth(), 
                    selectSearch.remove(), selectSearchPlaceholder == selectbox.outerWidth() && divText.width(liWidth)), 
                    liWidthInner > selectbox.width() && dropdown.width(liWidthInner), 
                    "" === option.first().text() && "" !== el.data("placeholder") && li.first().hide(), 
                    selectbox.outerHeight(!0)), searchHeight = search.parent().outerHeight(!0) || 0, isMaxHeight = ul.css("max-height"), selectSearchNotFound = li.filter(".selected"), position = (selectSearchNotFound.length < 1 && li.first().addClass("selected sel"), 
                    void 0 === li.data("li-height") && (searchHTML = li.outerHeight(), 
                    !1 !== selectPlaceholder && (searchHTML = li.eq(1).outerHeight()), 
                    li.data("li-height", searchHTML)), dropdown.css("top"));
                    "auto" == dropdown.css("left") && dropdown.css({
                        left: 0
                    }), "auto" == dropdown.css("top") && (dropdown.css({
                        top: selectHeight
                    }), position = selectHeight), dropdown.hide(), selectSearchNotFound.length && (option.first().text() != att.text() && selectbox.addClass("changed"), 
                    selectbox.data("jqfs-class", selectSearchNotFound.data("jqfs-class")), 
                    selectbox.addClass(selectSearchNotFound.data("jqfs-class"))), 
                    el.is(":disabled") ? selectbox.addClass("disabled") : (divSelect.click(function() {
                        var win, liHeight, topOffset, bottomOffset, minHeight, newHeight, visible;
                        function maxHeightTop() {
                            ul.css("max-height", Math.floor((topOffset - win.scrollTop() - 20 - searchHeight) / liHeight) * liHeight);
                        }
                        $("div.jq-selectbox").filter(".opened").length && opt.onSelectClosed.call($("div.jq-selectbox").filter(".opened")), 
                        el.focus(), iOS || (win = $(window), liHeight = li.data("li-height"), 
                        topOffset = selectbox.offset().top, bottomOffset = win.height() - selectHeight - (topOffset - win.scrollTop()), 
                        void 0 !== (visible = el.data("visible-options")) && "" !== visible || (visible = opt.selectVisibleOptions), 
                        minHeight = 5 * liHeight, newHeight = liHeight * visible, 
                        0 < visible && visible < 6 && (minHeight = newHeight), 0 === visible && (newHeight = "auto"), 
                        visible = function() {
                            dropdown.height("auto").css({
                                bottom: "auto",
                                top: position
                            });
                            function maxHeightBottom() {
                                ul.css("max-height", Math.floor((bottomOffset - 20 - searchHeight) / liHeight) * liHeight);
                            }
                            maxHeightBottom(), ul.css("max-height", newHeight), 
                            "none" != isMaxHeight && ul.css("max-height", isMaxHeight), 
                            bottomOffset < dropdown.outerHeight() + 20 && maxHeightBottom();
                        }, !0 === selectSmartPositioning || 1 === selectSmartPositioning ? minHeight + searchHeight + 20 < bottomOffset ? (visible(), 
                        selectbox.removeClass("dropup").addClass("dropdown")) : (dropdown.height("auto").css({
                            top: "auto",
                            bottom: position
                        }), maxHeightTop(), ul.css("max-height", newHeight), "none" != isMaxHeight && ul.css("max-height", isMaxHeight), 
                        topOffset - win.scrollTop() - 20 < dropdown.outerHeight() + 20 && maxHeightTop(), 
                        selectbox.removeClass("dropdown").addClass("dropup")) : !1 === selectSmartPositioning || 0 === selectSmartPositioning ? minHeight + searchHeight + 20 < bottomOffset && (visible(), 
                        selectbox.removeClass("dropup").addClass("dropdown")) : (dropdown.height("auto").css({
                            bottom: "auto",
                            top: position
                        }), ul.css("max-height", newHeight), "none" != isMaxHeight && ul.css("max-height", isMaxHeight)), 
                        selectbox.offset().left + dropdown.outerWidth() > win.width() && dropdown.css({
                            left: "auto",
                            right: 0
                        }), $("div.jqselect").css({
                            zIndex: selectzIndex - 1
                        }).removeClass("opened"), selectbox.css({
                            zIndex: selectzIndex
                        }), dropdown.is(":hidden") ? ($("div.jq-selectbox__dropdown:visible").hide(), 
                        dropdown.show(), selectbox.addClass("opened focused"), opt.onSelectOpened.call(selectbox)) : (dropdown.hide(), 
                        selectbox.removeClass("opened dropup dropdown"), $("div.jq-selectbox").filter(".opened").length && opt.onSelectClosed.call(selectbox)), 
                        search.length && (search.val("").keyup(), notFound.hide(), 
                        search.keyup(function() {
                            var query = $(this).val();
                            li.each(function() {
                                $(this).html().match(new RegExp(".*?" + query + ".*?", "i")) ? $(this).show() : $(this).hide();
                            }), "" === option.first().text() && "" !== el.data("placeholder") && li.first().hide(), 
                            li.filter(":visible").length < 1 ? notFound.show() : notFound.hide();
                        })), li.filter(".selected").length && ("" === el.val() ? ul.scrollTop(0) : (ul.innerHeight() / liHeight % 2 != 0 && (liHeight /= 2), 
                        ul.scrollTop(ul.scrollTop() + li.filter(".selected").position().top - ul.innerHeight() / 2 + liHeight))), 
                        preventScrolling(ul));
                    }), li.hover(function() {
                        $(this).siblings().removeClass("selected");
                    }), li.filter(".selected").text(), li.filter(":not(.disabled):not(.optgroup)").click(function() {
                        el.focus();
                        var index, t = $(this), liText = t.text();
                        t.is(".selected") || (index = t.index(), index -= t.prevAll(".optgroup").length, 
                        t.addClass("selected sel").siblings().removeClass("selected sel"), 
                        option.prop("selected", !1).eq(index).prop("selected", !0), 
                        divText.text(liText), selectbox.data("jqfs-class") && selectbox.removeClass(selectbox.data("jqfs-class")), 
                        selectbox.data("jqfs-class", t.data("jqfs-class")), selectbox.addClass(t.data("jqfs-class")), 
                        el.change()), dropdown.hide(), selectbox.removeClass("opened dropup dropdown"), 
                        opt.onSelectClosed.call(selectbox);
                    }), dropdown.mouseout(function() {
                        $("li.sel", dropdown).addClass("selected");
                    }), el.on("change.styler", function() {
                        divText.text(option.filter(":selected").text()).removeClass("placeholder"), 
                        li.removeClass("selected sel").not(".optgroup").eq(el[0].selectedIndex).addClass("selected sel"), 
                        option.first().text() != li.filter(".selected").text() ? selectbox.addClass("changed") : selectbox.removeClass("changed");
                    }).on("focus.styler", function() {
                        selectbox.addClass("focused"), $("div.jqselect").not(".focused").removeClass("opened dropup dropdown").find("div.jq-selectbox__dropdown").hide();
                    }).on("blur.styler", function() {
                        selectbox.removeClass("focused");
                    }).on("keydown.styler keyup.styler", function(e) {
                        var liHeight = li.data("li-height");
                        "" === el.val() ? divText.text(selectPlaceholder).addClass("placeholder") : divText.text(option.filter(":selected").text()), 
                        li.removeClass("selected sel").not(".optgroup").eq(el[0].selectedIndex).addClass("selected sel"), 
                        38 != e.which && 37 != e.which && 33 != e.which && 36 != e.which || ("" === el.val() ? ul.scrollTop(0) : ul.scrollTop(ul.scrollTop() + li.filter(".selected").position().top)), 
                        40 != e.which && 39 != e.which && 34 != e.which && 35 != e.which || ul.scrollTop(ul.scrollTop() + li.filter(".selected").position().top - ul.innerHeight() + liHeight), 
                        13 == e.which && (e.preventDefault(), dropdown.hide(), selectbox.removeClass("opened dropup dropdown"), 
                        opt.onSelectClosed.call(selectbox));
                    }).on("keydown.styler", function(e) {
                        32 == e.which && (e.preventDefault(), divSelect.click());
                    }), onDocumentClick.registered || ($(document).on("click", onDocumentClick), 
                    onDocumentClick.registered = !0));
                }
                el.is("[multiple]") ? Android || iOS || (att = new Attributes(), 
                selectbox = $('<div class="jq-select-multiple jqselect"></div>').attr({
                    id: att.id,
                    title: att.title
                }).addClass(att.classes).data(att.data), el.after(selectbox), makeList(), 
                selectbox.append("<ul>" + list + "</ul>"), ul = $("ul", selectbox), 
                li = $("li", selectbox), att = el.attr("size"), ulHeight = ul.outerHeight(), 
                liHeight = li.outerHeight(), void 0 !== att && 0 < att ? ul.css({
                    height: liHeight * att
                }) : ul.css({
                    height: 4 * liHeight
                }), ulHeight > selectbox.height() && (ul.css("overflowY", "scroll"), 
                preventScrolling(ul), li.filter(".selected").length && ul.scrollTop(ul.scrollTop() + li.filter(".selected").position().top)), 
                el.prependTo(selectbox), el.is(":disabled") ? (selectbox.addClass("disabled"), 
                option.each(function() {
                    $(this).is(":selected") && li.eq($(this).index()).addClass("selected");
                })) : (li.filter(":not(.disabled):not(.optgroup)").click(function(e) {
                    el.focus();
                    var prev, next, clkd = $(this);
                    e.ctrlKey || e.metaKey || clkd.addClass("selected"), e.shiftKey || clkd.addClass("first"), 
                    e.ctrlKey || e.metaKey || e.shiftKey || clkd.siblings().removeClass("selected first"), 
                    (e.ctrlKey || e.metaKey) && (clkd.is(".selected") ? clkd.removeClass("selected first") : clkd.addClass("selected first"), 
                    clkd.siblings().removeClass("first")), e.shiftKey && (next = prev = !1, 
                    clkd.siblings().removeClass("selected").siblings(".first").addClass("selected"), 
                    clkd.prevAll().each(function() {
                        $(this).is(".first") && (prev = !0);
                    }), clkd.nextAll().each(function() {
                        $(this).is(".first") && (next = !0);
                    }), prev && clkd.prevAll().each(function() {
                        if ($(this).is(".selected")) return !1;
                        $(this).not(".disabled, .optgroup").addClass("selected");
                    }), next && clkd.nextAll().each(function() {
                        if ($(this).is(".selected")) return !1;
                        $(this).not(".disabled, .optgroup").addClass("selected");
                    }), 1 == li.filter(".selected").length && clkd.addClass("first")), 
                    option.prop("selected", !1), li.filter(".selected").each(function() {
                        var t = $(this), index = t.index();
                        t.is(".option") && (index -= t.prevAll(".optgroup").length), 
                        option.eq(index).prop("selected", !0);
                    }), el.change();
                }), option.each(function(i) {
                    $(this).data("optionIndex", i);
                }), el.on("change.styler", function() {
                    li.removeClass("selected");
                    var arrIndexes = [];
                    option.filter(":selected").each(function() {
                        arrIndexes.push($(this).data("optionIndex"));
                    }), li.not(".optgroup").filter(function(i) {
                        return -1 < $.inArray(i, arrIndexes);
                    }).addClass("selected");
                }).on("focus.styler", function() {
                    selectbox.addClass("focused");
                }).on("blur.styler", function() {
                    selectbox.removeClass("focused");
                }), ulHeight > selectbox.height() && el.on("keydown.styler", function(e) {
                    38 != e.which && 37 != e.which && 33 != e.which || ul.scrollTop(ul.scrollTop() + li.filter(".selected").position().top - liHeight), 
                    40 != e.which && 39 != e.which && 34 != e.which || ul.scrollTop(ul.scrollTop() + li.filter(".selected:last").position().top - ul.innerHeight() + 2 * liHeight);
                }))) : doSelect();
            })(), el.on("refresh", function() {
                el.off(".styler").parent().before(el).remove(), selectboxOutput();
            })) : el.is(":reset") && el.on("click", function() {
                setTimeout(function() {
                    el.closest("form").find("input, select").trigger("refresh");
                }, 1);
            });
        },
        destroy: function() {
            var el = $(this.element);
            el.is(":checkbox") || el.is(":radio") ? (el.removeData("_" + pluginName).off(".styler refresh").removeAttr("style").parent().before(el).remove(), 
            el.closest("label").add('label[for="' + el.attr("id") + '"]').off(".styler")) : el.is('input[type="number"]') ? el.removeData("_" + pluginName).off(".styler refresh").closest(".jq-number").before(el).remove() : (el.is(":file") || el.is("select")) && el.removeData("_" + pluginName).off(".styler refresh").removeAttr("style").parent().before(el).remove();
        }
    }, $.fn[pluginName] = function(options) {
        var returns, args = arguments;
        return void 0 === options || "object" == typeof options ? (this.each(function() {
            $.data(this, "_" + pluginName) || $.data(this, "_" + pluginName, new Plugin(this, options));
        }).promise().done(function() {
            var opt = $(this[0]).data("_" + pluginName);
            opt && opt.options.onFormStyled.call();
        }), this) : "string" == typeof options && "_" !== options[0] && "init" !== options ? (this.each(function() {
            var instance = $.data(this, "_" + pluginName);
            instance instanceof Plugin && "function" == typeof instance[options] && (returns = instance[options].apply(instance, Array.prototype.slice.call(args, 1)));
        }), void 0 !== returns ? returns : this) : void 0;
    }, onDocumentClick.registered = !1;
}), $(function() {
    document.querySelectorAll(".news__item").forEach(function(item) {
        item.addEventListener("mouseover", function() {
            this.classList.add("rotate");
        }), item.addEventListener("mouseout", function() {
            this.classList.remove("rotate");
        });
    }), $("#openPopupBtn").magnificPopup({
        items: {
            src: "#myModal",
            type: "inline"
        },
        midClick: !0,
        closeOnBgClick: !0
    }), $("#myForm").submit(function(event) {
        event.preventDefault(), $.magnificPopup.close();
    }), $(".close-popup-btn, #myModal").on("click", function() {
        $.magnificPopup.close();
    }), $(".mp-form-wrapper").on("click", function(event) {
        event.stopPropagation();
    });
});